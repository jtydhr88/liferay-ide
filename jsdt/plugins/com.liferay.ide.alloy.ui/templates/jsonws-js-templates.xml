<?xml version="1.0" encoding="UTF-8"?>
<templates><template name="jsonws-Address-add-address" description="jsonws-Address-add-address" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.Address.add-address12">Liferay.Service(
	'/address/add-address',
	{
		className:${className},
		classPK:${classPK},
		street1:${street1},
		street2:${street2},
		street3:${street3},
		city:${city},
		zip:${zip},
		regionId:${regionId},
		countryId:${countryId},
		typeId:${typeId},
		mailing:${mailing},
		primary:${primary}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-Address-add-address" description="jsonws-Address-add-address" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.Address.add-address13">Liferay.Service(
	'/address/add-address',
	{
		className:${className},
		classPK:${classPK},
		street1:${street1},
		street2:${street2},
		street3:${street3},
		city:${city},
		zip:${zip},
		regionId:${regionId},
		countryId:${countryId},
		typeId:${typeId},
		mailing:${mailing},
		primary:${primary},
		serviceContext:${serviceContext}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-Address-delete-address" description="jsonws-Address-delete-address" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.Address.delete-address1">Liferay.Service(
	'/address/delete-address',
	{
		addressId:${addressId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-Address-get-address" description="jsonws-Address-get-address" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.Address.get-address1">Liferay.Service(
	'/address/get-address',
	{
		addressId:${addressId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-Address-get-addresses" description="jsonws-Address-get-addresses" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.Address.get-addresses2">Liferay.Service(
	'/address/get-addresses',
	{
		className:${className},
		classPK:${classPK}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-Address-update-address" description="jsonws-Address-update-address" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.Address.update-address11">Liferay.Service(
	'/address/update-address',
	{
		addressId:${addressId},
		street1:${street1},
		street2:${street2},
		street3:${street3},
		city:${city},
		zip:${zip},
		regionId:${regionId},
		countryId:${countryId},
		typeId:${typeId},
		mailing:${mailing},
		primary:${primary}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-AnnouncementsDelivery-update-delivery" description="jsonws-AnnouncementsDelivery-update-delivery" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.AnnouncementsDelivery.update-delivery5">Liferay.Service(
	'/announcementsdelivery/update-delivery',
	{
		userId:${userId},
		type:${type},
		email:${email},
		sms:${sms},
		website:${website}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-AnnouncementsEntry-add-entry" description="jsonws-AnnouncementsEntry-add-entry" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.AnnouncementsEntry.add-entry19">Liferay.Service(
	'/announcementsentry/add-entry',
	{
		plid:${plid},
		classNameId:${classNameId},
		classPK:${classPK},
		title:${title},
		content:${content},
		url:${url},
		type:${type},
		displayDateMonth:${displayDateMonth},
		displayDateDay:${displayDateDay},
		displayDateYear:${displayDateYear},
		displayDateHour:${displayDateHour},
		displayDateMinute:${displayDateMinute},
		expirationDateMonth:${expirationDateMonth},
		expirationDateDay:${expirationDateDay},
		expirationDateYear:${expirationDateYear},
		expirationDateHour:${expirationDateHour},
		expirationDateMinute:${expirationDateMinute},
		priority:${priority},
		alert:${alert}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-AnnouncementsEntry-add-entry" description="jsonws-AnnouncementsEntry-add-entry" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.AnnouncementsEntry.add-entry20">Liferay.Service(
	'/announcementsentry/add-entry',
	{
		plid:${plid},
		classNameId:${classNameId},
		classPK:${classPK},
		title:${title},
		content:${content},
		url:${url},
		type:${type},
		displayDateMonth:${displayDateMonth},
		displayDateDay:${displayDateDay},
		displayDateYear:${displayDateYear},
		displayDateHour:${displayDateHour},
		displayDateMinute:${displayDateMinute},
		displayImmediately:${displayImmediately},
		expirationDateMonth:${expirationDateMonth},
		expirationDateDay:${expirationDateDay},
		expirationDateYear:${expirationDateYear},
		expirationDateHour:${expirationDateHour},
		expirationDateMinute:${expirationDateMinute},
		priority:${priority},
		alert:${alert}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-AnnouncementsEntry-delete-entry" description="jsonws-AnnouncementsEntry-delete-entry" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.AnnouncementsEntry.delete-entry1">Liferay.Service(
	'/announcementsentry/delete-entry',
	{
		entryId:${entryId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-AnnouncementsEntry-get-entry" description="jsonws-AnnouncementsEntry-get-entry" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.AnnouncementsEntry.get-entry1">Liferay.Service(
	'/announcementsentry/get-entry',
	{
		entryId:${entryId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-AnnouncementsEntry-update-entry" description="jsonws-AnnouncementsEntry-update-entry" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.AnnouncementsEntry.update-entry17">Liferay.Service(
	'/announcementsentry/update-entry',
	{
		entryId:${entryId},
		title:${title},
		content:${content},
		url:${url},
		type:${type},
		displayDateMonth:${displayDateMonth},
		displayDateDay:${displayDateDay},
		displayDateYear:${displayDateYear},
		displayDateHour:${displayDateHour},
		displayDateMinute:${displayDateMinute},
		displayImmediately:${displayImmediately},
		expirationDateMonth:${expirationDateMonth},
		expirationDateDay:${expirationDateDay},
		expirationDateYear:${expirationDateYear},
		expirationDateHour:${expirationDateHour},
		expirationDateMinute:${expirationDateMinute},
		priority:${priority}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-AnnouncementsFlag-add-flag" description="jsonws-AnnouncementsFlag-add-flag" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.AnnouncementsFlag.add-flag2">Liferay.Service(
	'/announcementsflag/add-flag',
	{
		entryId:${entryId},
		value:${value}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-AnnouncementsFlag-delete-flag" description="jsonws-AnnouncementsFlag-delete-flag" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.AnnouncementsFlag.delete-flag1">Liferay.Service(
	'/announcementsflag/delete-flag',
	{
		flagId:${flagId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-AnnouncementsFlag-get-flag" description="jsonws-AnnouncementsFlag-get-flag" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.AnnouncementsFlag.get-flag2">Liferay.Service(
	'/announcementsflag/get-flag',
	{
		entryId:${entryId},
		value:${value}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-AssetCategory-add-category" description="jsonws-AssetCategory-add-category" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.AssetCategory.add-category3">Liferay.Service(
	'/assetcategory/add-category',
	{
		title:${title},
		vocabularyId:${vocabularyId},
		serviceContext:${serviceContext}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-AssetCategory-add-category" description="jsonws-AssetCategory-add-category" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.AssetCategory.add-category6">Liferay.Service(
	'/assetcategory/add-category',
	{
		parentCategoryId:${parentCategoryId},
		titleMap:${titleMap},
		descriptionMap:${descriptionMap},
		vocabularyId:${vocabularyId},
		categoryProperties:${categoryProperties},
		serviceContext:${serviceContext}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-AssetCategory-delete-categories" description="jsonws-AssetCategory-delete-categories" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.AssetCategory.delete-categories1">Liferay.Service(
	'/assetcategory/delete-categories',
	{
		categoryIds:${categoryIds}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-AssetCategory-delete-categories" description="jsonws-AssetCategory-delete-categories" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.AssetCategory.delete-categories2">Liferay.Service(
	'/assetcategory/delete-categories',
	{
		categoryIds:${categoryIds},
		serviceContext:${serviceContext}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-AssetCategory-delete-category" description="jsonws-AssetCategory-delete-category" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.AssetCategory.delete-category1">Liferay.Service(
	'/assetcategory/delete-category',
	{
		categoryId:${categoryId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-AssetCategory-get-categories" description="jsonws-AssetCategory-get-categories" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.AssetCategory.get-categories2">Liferay.Service(
	'/assetcategory/get-categories',
	{
		className:${className},
		classPK:${classPK}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-AssetCategory-get-category" description="jsonws-AssetCategory-get-category" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.AssetCategory.get-category1">Liferay.Service(
	'/assetcategory/get-category',
	{
		categoryId:${categoryId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-AssetCategory-get-child-categories" description="jsonws-AssetCategory-get-child-categories" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.AssetCategory.get-child-categories1">Liferay.Service(
	'/assetcategory/get-child-categories',
	{
		parentCategoryId:${parentCategoryId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-AssetCategory-get-child-categories" description="jsonws-AssetCategory-get-child-categories" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.AssetCategory.get-child-categories4">Liferay.Service(
	'/assetcategory/get-child-categories',
	{
		parentCategoryId:${parentCategoryId},
		start:${start},
		end:${end},
		obc:${obc}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-AssetCategory-get-json-search" description="jsonws-AssetCategory-get-json-search" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.AssetCategory.get-json-search5">Liferay.Service(
	'/assetcategory/get-json-search',
	{
		groupId:${groupId},
		name:${name},
		vocabularyIds:${vocabularyIds},
		start:${start},
		end:${end}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-AssetCategory-get-json-vocabulary-categories" description="jsonws-AssetCategory-get-json-vocabulary-categories" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.AssetCategory.get-json-vocabulary-categories4">Liferay.Service(
	'/assetcategory/get-json-vocabulary-categories',
	{
		vocabularyId:${vocabularyId},
		start:${start},
		end:${end},
		obc:${obc}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-AssetCategory-get-json-vocabulary-categories" description="jsonws-AssetCategory-get-json-vocabulary-categories" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.AssetCategory.get-json-vocabulary-categories6">Liferay.Service(
	'/assetcategory/get-json-vocabulary-categories',
	{
		groupId:${groupId},
		name:${name},
		vocabularyId:${vocabularyId},
		start:${start},
		end:${end},
		obc:${obc}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-AssetCategory-get-vocabulary-categories" description="jsonws-AssetCategory-get-vocabulary-categories" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.AssetCategory.get-vocabulary-categories4">Liferay.Service(
	'/assetcategory/get-vocabulary-categories',
	{
		vocabularyId:${vocabularyId},
		start:${start},
		end:${end},
		obc:${obc}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-AssetCategory-get-vocabulary-categories" description="jsonws-AssetCategory-get-vocabulary-categories" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.AssetCategory.get-vocabulary-categories5">Liferay.Service(
	'/assetcategory/get-vocabulary-categories',
	{
		parentCategoryId:${parentCategoryId},
		vocabularyId:${vocabularyId},
		start:${start},
		end:${end},
		obc:${obc}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-AssetCategory-get-vocabulary-categories" description="jsonws-AssetCategory-get-vocabulary-categories" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.AssetCategory.get-vocabulary-categories6">Liferay.Service(
	'/assetcategory/get-vocabulary-categories',
	{
		groupId:${groupId},
		name:${name},
		vocabularyId:${vocabularyId},
		start:${start},
		end:${end},
		obc:${obc}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-AssetCategory-get-vocabulary-categories-count" description="jsonws-AssetCategory-get-vocabulary-categories-count" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.AssetCategory.get-vocabulary-categories-count2">Liferay.Service(
	'/assetcategory/get-vocabulary-categories-count',
	{
		groupId:${groupId},
		vocabularyId:${vocabularyId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-AssetCategory-get-vocabulary-categories-count" description="jsonws-AssetCategory-get-vocabulary-categories-count" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.AssetCategory.get-vocabulary-categories-count3">Liferay.Service(
	'/assetcategory/get-vocabulary-categories-count',
	{
		groupId:${groupId},
		name:${name},
		vocabularyId:${vocabularyId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-AssetCategory-get-vocabulary-categories-display" description="jsonws-AssetCategory-get-vocabulary-categories-display" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.AssetCategory.get-vocabulary-categories-display4">Liferay.Service(
	'/assetcategory/get-vocabulary-categories-display',
	{
		vocabularyId:${vocabularyId},
		start:${start},
		end:${end},
		obc:${obc}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-AssetCategory-get-vocabulary-categories-display" description="jsonws-AssetCategory-get-vocabulary-categories-display" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.AssetCategory.get-vocabulary-categories-display6">Liferay.Service(
	'/assetcategory/get-vocabulary-categories-display',
	{
		groupId:${groupId},
		name:${name},
		vocabularyId:${vocabularyId},
		start:${start},
		end:${end},
		obc:${obc}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-AssetCategory-get-vocabulary-root-categories" description="jsonws-AssetCategory-get-vocabulary-root-categories" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.AssetCategory.get-vocabulary-root-categories4">Liferay.Service(
	'/assetcategory/get-vocabulary-root-categories',
	{
		vocabularyId:${vocabularyId},
		start:${start},
		end:${end},
		obc:${obc}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-AssetCategory-get-vocabulary-root-categories" description="jsonws-AssetCategory-get-vocabulary-root-categories" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.AssetCategory.get-vocabulary-root-categories5">Liferay.Service(
	'/assetcategory/get-vocabulary-root-categories',
	{
		groupId:${groupId},
		vocabularyId:${vocabularyId},
		start:${start},
		end:${end},
		obc:${obc}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-AssetCategory-get-vocabulary-root-categories-count" description="jsonws-AssetCategory-get-vocabulary-root-categories-count" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.AssetCategory.get-vocabulary-root-categories-count2">Liferay.Service(
	'/assetcategory/get-vocabulary-root-categories-count',
	{
		groupId:${groupId},
		vocabularyId:${vocabularyId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-AssetCategory-move-category" description="jsonws-AssetCategory-move-category" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.AssetCategory.move-category4">Liferay.Service(
	'/assetcategory/move-category',
	{
		categoryId:${categoryId},
		parentCategoryId:${parentCategoryId},
		vocabularyId:${vocabularyId},
		serviceContext:${serviceContext}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-AssetCategory-search" description="jsonws-AssetCategory-search" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.AssetCategory.search5">Liferay.Service(
	'/assetcategory/search',
	{
		groupId:${groupId},
		name:${name},
		categoryProperties:${categoryProperties},
		start:${start},
		end:${end}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-AssetCategory-search" description="jsonws-AssetCategory-search" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.AssetCategory.search5">Liferay.Service(
	'/assetcategory/search',
	{
		groupIds:${groupIds},
		name:${name},
		vocabularyIds:${vocabularyIds},
		start:${start},
		end:${end}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-AssetCategory-search" description="jsonws-AssetCategory-search" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.AssetCategory.search6">Liferay.Service(
	'/assetcategory/search',
	{
		groupId:${groupId},
		keywords:${keywords},
		vocabularyId:${vocabularyId},
		start:${start},
		end:${end},
		obc:${obc}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-AssetCategory-update-category" description="jsonws-AssetCategory-update-category" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.AssetCategory.update-category7">Liferay.Service(
	'/assetcategory/update-category',
	{
		categoryId:${categoryId},
		parentCategoryId:${parentCategoryId},
		titleMap:${titleMap},
		descriptionMap:${descriptionMap},
		vocabularyId:${vocabularyId},
		categoryProperties:${categoryProperties},
		serviceContext:${serviceContext}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-AssetCategoryProperty-add-category-property" description="jsonws-AssetCategoryProperty-add-category-property" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.AssetCategoryProperty.add-category-property3">Liferay.Service(
	'/assetcategoryproperty/add-category-property',
	{
		entryId:${entryId},
		key:${key},
		value:${value}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-AssetCategoryProperty-delete-category-property" description="jsonws-AssetCategoryProperty-delete-category-property" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.AssetCategoryProperty.delete-category-property1">Liferay.Service(
	'/assetcategoryproperty/delete-category-property',
	{
		categoryPropertyId:${categoryPropertyId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-AssetCategoryProperty-get-category-properties" description="jsonws-AssetCategoryProperty-get-category-properties" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.AssetCategoryProperty.get-category-properties1">Liferay.Service(
	'/assetcategoryproperty/get-category-properties',
	{
		entryId:${entryId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-AssetCategoryProperty-get-category-property-values" description="jsonws-AssetCategoryProperty-get-category-property-values" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.AssetCategoryProperty.get-category-property-values2">Liferay.Service(
	'/assetcategoryproperty/get-category-property-values',
	{
		companyId:${companyId},
		key:${key}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-AssetCategoryProperty-update-category-property" description="jsonws-AssetCategoryProperty-update-category-property" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.AssetCategoryProperty.update-category-property3">Liferay.Service(
	'/assetcategoryproperty/update-category-property',
	{
		categoryPropertyId:${categoryPropertyId},
		key:${key},
		value:${value}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-AssetEntry-get-company-entries" description="jsonws-AssetEntry-get-company-entries" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.AssetEntry.get-company-entries3">Liferay.Service(
	'/assetentry/get-company-entries',
	{
		companyId:${companyId},
		start:${start},
		end:${end}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-AssetEntry-get-company-entries-count" description="jsonws-AssetEntry-get-company-entries-count" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.AssetEntry.get-company-entries-count1">Liferay.Service(
	'/assetentry/get-company-entries-count',
	{
		companyId:${companyId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-AssetEntry-get-entries" description="jsonws-AssetEntry-get-entries" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.AssetEntry.get-entries1">Liferay.Service(
	'/assetentry/get-entries',
	{
		entryQuery:${entryQuery}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-AssetEntry-get-entries-count" description="jsonws-AssetEntry-get-entries-count" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.AssetEntry.get-entries-count1">Liferay.Service(
	'/assetentry/get-entries-count',
	{
		entryQuery:${entryQuery}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-AssetEntry-get-entry" description="jsonws-AssetEntry-get-entry" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.AssetEntry.get-entry1">Liferay.Service(
	'/assetentry/get-entry',
	{
		entryId:${entryId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-AssetEntry-increment-view-counter" description="jsonws-AssetEntry-increment-view-counter" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.AssetEntry.increment-view-counter2">Liferay.Service(
	'/assetentry/increment-view-counter',
	{
		className:${className},
		classPK:${classPK}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-AssetEntry-update-entry" description="jsonws-AssetEntry-update-entry" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.AssetEntry.update-entry21">Liferay.Service(
	'/assetentry/update-entry',
	{
		groupId:${groupId},
		className:${className},
		classPK:${classPK},
		classUuid:${classUuid},
		classTypeId:${classTypeId},
		categoryIds:${categoryIds},
		tagNames:${tagNames},
		visible:${visible},
		startDate:${startDate},
		endDate:${endDate},
		expirationDate:${expirationDate},
		mimeType:${mimeType},
		title:${title},
		description:${description},
		summary:${summary},
		url:${url},
		layoutUuid:${layoutUuid},
		height:${height},
		width:${width},
		priority:${priority},
		sync:${sync}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-AssetEntry-update-entry" description="jsonws-AssetEntry-update-entry" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.AssetEntry.update-entry22">Liferay.Service(
	'/assetentry/update-entry',
	{
		groupId:${groupId},
		className:${className},
		classPK:${classPK},
		classUuid:${classUuid},
		classTypeId:${classTypeId},
		categoryIds:${categoryIds},
		tagNames:${tagNames},
		visible:${visible},
		startDate:${startDate},
		endDate:${endDate},
		publishDate:${publishDate},
		expirationDate:${expirationDate},
		mimeType:${mimeType},
		title:${title},
		description:${description},
		summary:${summary},
		url:${url},
		layoutUuid:${layoutUuid},
		height:${height},
		width:${width},
		priority:${priority},
		sync:${sync}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-AssetEntry-update-entry" description="jsonws-AssetEntry-update-entry" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.AssetEntry.update-entry23">Liferay.Service(
	'/assetentry/update-entry',
	{
		groupId:${groupId},
		createDate:${createDate},
		modifiedDate:${modifiedDate},
		className:${className},
		classPK:${classPK},
		classUuid:${classUuid},
		classTypeId:${classTypeId},
		categoryIds:${categoryIds},
		tagNames:${tagNames},
		visible:${visible},
		startDate:${startDate},
		endDate:${endDate},
		expirationDate:${expirationDate},
		mimeType:${mimeType},
		title:${title},
		description:${description},
		summary:${summary},
		url:${url},
		layoutUuid:${layoutUuid},
		height:${height},
		width:${width},
		priority:${priority},
		sync:${sync}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-AssetTag-add-tag" description="jsonws-AssetTag-add-tag" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.AssetTag.add-tag3">Liferay.Service(
	'/assettag/add-tag',
	{
		name:${name},
		tagProperties:${tagProperties},
		serviceContext:${serviceContext}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-AssetTag-delete-tag" description="jsonws-AssetTag-delete-tag" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.AssetTag.delete-tag1">Liferay.Service(
	'/assettag/delete-tag',
	{
		tagId:${tagId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-AssetTag-delete-tags" description="jsonws-AssetTag-delete-tags" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.AssetTag.delete-tags1">Liferay.Service(
	'/assettag/delete-tags',
	{
		tagIds:${tagIds}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-AssetTag-get-group-tags" description="jsonws-AssetTag-get-group-tags" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.AssetTag.get-group-tags1">Liferay.Service(
	'/assettag/get-group-tags',
	{
		groupId:${groupId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-AssetTag-get-group-tags" description="jsonws-AssetTag-get-group-tags" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.AssetTag.get-group-tags4">Liferay.Service(
	'/assettag/get-group-tags',
	{
		groupId:${groupId},
		start:${start},
		end:${end},
		obc:${obc}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-AssetTag-get-group-tags-count" description="jsonws-AssetTag-get-group-tags-count" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.AssetTag.get-group-tags-count1">Liferay.Service(
	'/assettag/get-group-tags-count',
	{
		groupId:${groupId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-AssetTag-get-group-tags-display" description="jsonws-AssetTag-get-group-tags-display" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.AssetTag.get-group-tags-display4">Liferay.Service(
	'/assettag/get-group-tags-display',
	{
		groupId:${groupId},
		name:${name},
		start:${start},
		end:${end}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-AssetTag-get-groups-tags" description="jsonws-AssetTag-get-groups-tags" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.AssetTag.get-groups-tags1">Liferay.Service(
	'/assettag/get-groups-tags',
	{
		groupIds:${groupIds}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-AssetTag-get-json-group-tags" description="jsonws-AssetTag-get-json-group-tags" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.AssetTag.get-json-group-tags4">Liferay.Service(
	'/assettag/get-json-group-tags',
	{
		groupId:${groupId},
		name:${name},
		start:${start},
		end:${end}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-AssetTag-get-tag" description="jsonws-AssetTag-get-tag" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.AssetTag.get-tag1">Liferay.Service(
	'/assettag/get-tag',
	{
		tagId:${tagId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-AssetTag-get-tags" description="jsonws-AssetTag-get-tags" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.AssetTag.get-tags2">Liferay.Service(
	'/assettag/get-tags',
	{
		className:${className},
		classPK:${classPK}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-AssetTag-get-tags" description="jsonws-AssetTag-get-tags" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.AssetTag.get-tags3">Liferay.Service(
	'/assettag/get-tags',
	{
		groupId:${groupId},
		classNameId:${classNameId},
		name:${name}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-AssetTag-get-tags" description="jsonws-AssetTag-get-tags" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.AssetTag.get-tags5">Liferay.Service(
	'/assettag/get-tags',
	{
		groupId:${groupId},
		name:${name},
		tagProperties:${tagProperties},
		start:${start},
		end:${end}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-AssetTag-get-tags" description="jsonws-AssetTag-get-tags" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.AssetTag.get-tags5">Liferay.Service(
	'/assettag/get-tags',
	{
		groupIds:${groupIds},
		name:${name},
		tagProperties:${tagProperties},
		start:${start},
		end:${end}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-AssetTag-get-tags" description="jsonws-AssetTag-get-tags" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.AssetTag.get-tags6">Liferay.Service(
	'/assettag/get-tags',
	{
		groupId:${groupId},
		classNameId:${classNameId},
		name:${name},
		start:${start},
		end:${end},
		obc:${obc}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-AssetTag-get-tags-count" description="jsonws-AssetTag-get-tags-count" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.AssetTag.get-tags-count2">Liferay.Service(
	'/assettag/get-tags-count',
	{
		groupId:${groupId},
		name:${name}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-AssetTag-get-tags-count" description="jsonws-AssetTag-get-tags-count" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.AssetTag.get-tags-count3">Liferay.Service(
	'/assettag/get-tags-count',
	{
		groupId:${groupId},
		classNameId:${classNameId},
		name:${name}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-AssetTag-get-tags-count" description="jsonws-AssetTag-get-tags-count" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.AssetTag.get-tags-count3">Liferay.Service(
	'/assettag/get-tags-count',
	{
		groupId:${groupId},
		name:${name},
		tagProperties:${tagProperties}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-AssetTag-merge-tags" description="jsonws-AssetTag-merge-tags" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.AssetTag.merge-tags3">Liferay.Service(
	'/assettag/merge-tags',
	{
		fromTagId:${fromTagId},
		toTagId:${toTagId},
		overrideProperties:${overrideProperties}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-AssetTag-merge-tags" description="jsonws-AssetTag-merge-tags" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.AssetTag.merge-tags3">Liferay.Service(
	'/assettag/merge-tags',
	{
		fromTagIds:${fromTagIds},
		toTagId:${toTagId},
		overrideProperties:${overrideProperties}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-AssetTag-search" description="jsonws-AssetTag-search" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.AssetTag.search5">Liferay.Service(
	'/assettag/search',
	{
		groupId:${groupId},
		name:${name},
		tagProperties:${tagProperties},
		start:${start},
		end:${end}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-AssetTag-search" description="jsonws-AssetTag-search" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.AssetTag.search5">Liferay.Service(
	'/assettag/search',
	{
		groupIds:${groupIds},
		name:${name},
		tagProperties:${tagProperties},
		start:${start},
		end:${end}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-AssetTag-update-tag" description="jsonws-AssetTag-update-tag" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.AssetTag.update-tag4">Liferay.Service(
	'/assettag/update-tag',
	{
		tagId:${tagId},
		name:${name},
		tagProperties:${tagProperties},
		serviceContext:${serviceContext}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-AssetTagProperty-add-tag-property" description="jsonws-AssetTagProperty-add-tag-property" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.AssetTagProperty.add-tag-property3">Liferay.Service(
	'/assettagproperty/add-tag-property',
	{
		tagId:${tagId},
		key:${key},
		value:${value}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-AssetTagProperty-delete-tag-property" description="jsonws-AssetTagProperty-delete-tag-property" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.AssetTagProperty.delete-tag-property1">Liferay.Service(
	'/assettagproperty/delete-tag-property',
	{
		tagPropertyId:${tagPropertyId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-AssetTagProperty-get-tag-properties" description="jsonws-AssetTagProperty-get-tag-properties" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.AssetTagProperty.get-tag-properties1">Liferay.Service(
	'/assettagproperty/get-tag-properties',
	{
		tagId:${tagId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-AssetTagProperty-get-tag-property-values" description="jsonws-AssetTagProperty-get-tag-property-values" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.AssetTagProperty.get-tag-property-values2">Liferay.Service(
	'/assettagproperty/get-tag-property-values',
	{
		companyId:${companyId},
		key:${key}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-AssetTagProperty-update-tag-property" description="jsonws-AssetTagProperty-update-tag-property" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.AssetTagProperty.update-tag-property3">Liferay.Service(
	'/assettagproperty/update-tag-property',
	{
		tagPropertyId:${tagPropertyId},
		key:${key},
		value:${value}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-AssetVocabulary-add-vocabulary" description="jsonws-AssetVocabulary-add-vocabulary" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.AssetVocabulary.add-vocabulary2">Liferay.Service(
	'/assetvocabulary/add-vocabulary',
	{
		title:${title},
		serviceContext:${serviceContext}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-AssetVocabulary-add-vocabulary" description="jsonws-AssetVocabulary-add-vocabulary" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.AssetVocabulary.add-vocabulary4">Liferay.Service(
	'/assetvocabulary/add-vocabulary',
	{
		titleMap:${titleMap},
		descriptionMap:${descriptionMap},
		settings:${settings},
		serviceContext:${serviceContext}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-AssetVocabulary-add-vocabulary" description="jsonws-AssetVocabulary-add-vocabulary" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.AssetVocabulary.add-vocabulary5">Liferay.Service(
	'/assetvocabulary/add-vocabulary',
	{
		title:${title},
		titleMap:${titleMap},
		descriptionMap:${descriptionMap},
		settings:${settings},
		serviceContext:${serviceContext}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-AssetVocabulary-delete-vocabularies" description="jsonws-AssetVocabulary-delete-vocabularies" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.AssetVocabulary.delete-vocabularies1">Liferay.Service(
	'/assetvocabulary/delete-vocabularies',
	{
		vocabularyIds:${vocabularyIds}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-AssetVocabulary-delete-vocabularies" description="jsonws-AssetVocabulary-delete-vocabularies" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.AssetVocabulary.delete-vocabularies2">Liferay.Service(
	'/assetvocabulary/delete-vocabularies',
	{
		vocabularyIds:${vocabularyIds},
		serviceContext:${serviceContext}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-AssetVocabulary-delete-vocabulary" description="jsonws-AssetVocabulary-delete-vocabulary" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.AssetVocabulary.delete-vocabulary1">Liferay.Service(
	'/assetvocabulary/delete-vocabulary',
	{
		vocabularyId:${vocabularyId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-AssetVocabulary-get-company-vocabularies" description="jsonws-AssetVocabulary-get-company-vocabularies" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.AssetVocabulary.get-company-vocabularies1">Liferay.Service(
	'/assetvocabulary/get-company-vocabularies',
	{
		companyId:${companyId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-AssetVocabulary-get-group-vocabularies" description="jsonws-AssetVocabulary-get-group-vocabularies" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.AssetVocabulary.get-group-vocabularies1">Liferay.Service(
	'/assetvocabulary/get-group-vocabularies',
	{
		groupId:${groupId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-AssetVocabulary-get-group-vocabularies" description="jsonws-AssetVocabulary-get-group-vocabularies" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.AssetVocabulary.get-group-vocabularies2">Liferay.Service(
	'/assetvocabulary/get-group-vocabularies',
	{
		groupId:${groupId},
		createDefaultVocabulary:${createDefaultVocabulary}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-AssetVocabulary-get-group-vocabularies" description="jsonws-AssetVocabulary-get-group-vocabularies" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.AssetVocabulary.get-group-vocabularies4">Liferay.Service(
	'/assetvocabulary/get-group-vocabularies',
	{
		groupId:${groupId},
		start:${start},
		end:${end},
		obc:${obc}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-AssetVocabulary-get-group-vocabularies" description="jsonws-AssetVocabulary-get-group-vocabularies" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.AssetVocabulary.get-group-vocabularies5">Liferay.Service(
	'/assetvocabulary/get-group-vocabularies',
	{
		groupId:${groupId},
		name:${name},
		start:${start},
		end:${end},
		obc:${obc}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-AssetVocabulary-get-group-vocabularies-count" description="jsonws-AssetVocabulary-get-group-vocabularies-count" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.AssetVocabulary.get-group-vocabularies-count1">Liferay.Service(
	'/assetvocabulary/get-group-vocabularies-count',
	{
		groupId:${groupId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-AssetVocabulary-get-group-vocabularies-count" description="jsonws-AssetVocabulary-get-group-vocabularies-count" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.AssetVocabulary.get-group-vocabularies-count2">Liferay.Service(
	'/assetvocabulary/get-group-vocabularies-count',
	{
		groupId:${groupId},
		name:${name}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-AssetVocabulary-get-group-vocabularies-display" description="jsonws-AssetVocabulary-get-group-vocabularies-display" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.AssetVocabulary.get-group-vocabularies-display5">Liferay.Service(
	'/assetvocabulary/get-group-vocabularies-display',
	{
		groupId:${groupId},
		name:${name},
		start:${start},
		end:${end},
		obc:${obc}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-AssetVocabulary-get-group-vocabularies-display" description="jsonws-AssetVocabulary-get-group-vocabularies-display" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.AssetVocabulary.get-group-vocabularies-display6">Liferay.Service(
	'/assetvocabulary/get-group-vocabularies-display',
	{
		groupId:${groupId},
		name:${name},
		start:${start},
		end:${end},
		addDefaultVocabulary:${addDefaultVocabulary},
		obc:${obc}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-AssetVocabulary-get-groups-vocabularies" description="jsonws-AssetVocabulary-get-groups-vocabularies" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.AssetVocabulary.get-groups-vocabularies1">Liferay.Service(
	'/assetvocabulary/get-groups-vocabularies',
	{
		groupIds:${groupIds}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-AssetVocabulary-get-groups-vocabularies" description="jsonws-AssetVocabulary-get-groups-vocabularies" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.AssetVocabulary.get-groups-vocabularies2">Liferay.Service(
	'/assetvocabulary/get-groups-vocabularies',
	{
		groupIds:${groupIds},
		className:${className}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-AssetVocabulary-get-json-group-vocabularies" description="jsonws-AssetVocabulary-get-json-group-vocabularies" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.AssetVocabulary.get-json-group-vocabularies5">Liferay.Service(
	'/assetvocabulary/get-json-group-vocabularies',
	{
		groupId:${groupId},
		name:${name},
		start:${start},
		end:${end},
		obc:${obc}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-AssetVocabulary-get-vocabularies" description="jsonws-AssetVocabulary-get-vocabularies" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.AssetVocabulary.get-vocabularies1">Liferay.Service(
	'/assetvocabulary/get-vocabularies',
	{
		vocabularyIds:${vocabularyIds}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-AssetVocabulary-get-vocabulary" description="jsonws-AssetVocabulary-get-vocabulary" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.AssetVocabulary.get-vocabulary1">Liferay.Service(
	'/assetvocabulary/get-vocabulary',
	{
		vocabularyId:${vocabularyId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-AssetVocabulary-update-vocabulary" description="jsonws-AssetVocabulary-update-vocabulary" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.AssetVocabulary.update-vocabulary5">Liferay.Service(
	'/assetvocabulary/update-vocabulary',
	{
		vocabularyId:${vocabularyId},
		titleMap:${titleMap},
		descriptionMap:${descriptionMap},
		settings:${settings},
		serviceContext:${serviceContext}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-AssetVocabulary-update-vocabulary" description="jsonws-AssetVocabulary-update-vocabulary" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.AssetVocabulary.update-vocabulary6">Liferay.Service(
	'/assetvocabulary/update-vocabulary',
	{
		vocabularyId:${vocabularyId},
		title:${title},
		titleMap:${titleMap},
		descriptionMap:${descriptionMap},
		settings:${settings},
		serviceContext:${serviceContext}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-BackgroundTask-get-background-task-status-json" description="jsonws-BackgroundTask-get-background-task-status-json" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.BackgroundTask.get-background-task-status-json1">Liferay.Service(
	'/backgroundtask/get-background-task-status-json',
	{
		backgroundTaskId:${backgroundTaskId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-BackgroundTask-get-background-tasks-count" description="jsonws-BackgroundTask-get-background-tasks-count" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.BackgroundTask.get-background-tasks-count3">Liferay.Service(
	'/backgroundtask/get-background-tasks-count',
	{
		groupId:${groupId},
		taskExecutorClassName:${taskExecutorClassName},
		completed:${completed}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-BlogsEntry-delete-entry" description="jsonws-BlogsEntry-delete-entry" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.BlogsEntry.delete-entry1">Liferay.Service(
	'/blogsentry/delete-entry',
	{
		entryId:${entryId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-BlogsEntry-get-company-entries" description="jsonws-BlogsEntry-get-company-entries" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.BlogsEntry.get-company-entries4">Liferay.Service(
	'/blogsentry/get-company-entries',
	{
		companyId:${companyId},
		displayDate:${displayDate},
		status:${status},
		max:${max}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-BlogsEntry-get-company-entries-rss" description="jsonws-BlogsEntry-get-company-entries-rss" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.BlogsEntry.get-company-entries-rss10">Liferay.Service(
	'/blogsentry/get-company-entries-rss',
	{
		companyId:${companyId},
		displayDate:${displayDate},
		status:${status},
		max:${max},
		type:${type},
		version:${version},
		displayStyle:${displayStyle},
		feedURL:${feedURL},
		entryURL:${entryURL},
		themeDisplay:${themeDisplay}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-BlogsEntry-get-entry" description="jsonws-BlogsEntry-get-entry" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.BlogsEntry.get-entry1">Liferay.Service(
	'/blogsentry/get-entry',
	{
		entryId:${entryId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-BlogsEntry-get-entry" description="jsonws-BlogsEntry-get-entry" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.BlogsEntry.get-entry2">Liferay.Service(
	'/blogsentry/get-entry',
	{
		groupId:${groupId},
		urlTitle:${urlTitle}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-BlogsEntry-get-group-entries" description="jsonws-BlogsEntry-get-group-entries" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.BlogsEntry.get-group-entries3">Liferay.Service(
	'/blogsentry/get-group-entries',
	{
		groupId:${groupId},
		status:${status},
		max:${max}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-BlogsEntry-get-group-entries" description="jsonws-BlogsEntry-get-group-entries" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.BlogsEntry.get-group-entries4">Liferay.Service(
	'/blogsentry/get-group-entries',
	{
		groupId:${groupId},
		displayDate:${displayDate},
		status:${status},
		max:${max}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-BlogsEntry-get-group-entries" description="jsonws-BlogsEntry-get-group-entries" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.BlogsEntry.get-group-entries4">Liferay.Service(
	'/blogsentry/get-group-entries',
	{
		groupId:${groupId},
		status:${status},
		start:${start},
		end:${end}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-BlogsEntry-get-group-entries" description="jsonws-BlogsEntry-get-group-entries" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.BlogsEntry.get-group-entries5">Liferay.Service(
	'/blogsentry/get-group-entries',
	{
		groupId:${groupId},
		displayDate:${displayDate},
		status:${status},
		start:${start},
		end:${end}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-BlogsEntry-get-group-entries-count" description="jsonws-BlogsEntry-get-group-entries-count" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.BlogsEntry.get-group-entries-count2">Liferay.Service(
	'/blogsentry/get-group-entries-count',
	{
		groupId:${groupId},
		status:${status}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-BlogsEntry-get-group-entries-count" description="jsonws-BlogsEntry-get-group-entries-count" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.BlogsEntry.get-group-entries-count3">Liferay.Service(
	'/blogsentry/get-group-entries-count',
	{
		groupId:${groupId},
		displayDate:${displayDate},
		status:${status}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-BlogsEntry-get-group-entries-rss" description="jsonws-BlogsEntry-get-group-entries-rss" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.BlogsEntry.get-group-entries-rss10">Liferay.Service(
	'/blogsentry/get-group-entries-rss',
	{
		groupId:${groupId},
		displayDate:${displayDate},
		status:${status},
		max:${max},
		type:${type},
		version:${version},
		displayStyle:${displayStyle},
		feedURL:${feedURL},
		entryURL:${entryURL},
		themeDisplay:${themeDisplay}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-BlogsEntry-get-groups-entries" description="jsonws-BlogsEntry-get-groups-entries" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.BlogsEntry.get-groups-entries5">Liferay.Service(
	'/blogsentry/get-groups-entries',
	{
		companyId:${companyId},
		groupId:${groupId},
		displayDate:${displayDate},
		status:${status},
		max:${max}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-BlogsEntry-get-organization-entries" description="jsonws-BlogsEntry-get-organization-entries" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.BlogsEntry.get-organization-entries4">Liferay.Service(
	'/blogsentry/get-organization-entries',
	{
		organizationId:${organizationId},
		displayDate:${displayDate},
		status:${status},
		max:${max}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-BlogsEntry-get-organization-entries-rss" description="jsonws-BlogsEntry-get-organization-entries-rss" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.BlogsEntry.get-organization-entries-rss10">Liferay.Service(
	'/blogsentry/get-organization-entries-rss',
	{
		organizationId:${organizationId},
		displayDate:${displayDate},
		status:${status},
		max:${max},
		type:${type},
		version:${version},
		displayStyle:${displayStyle},
		feedURL:${feedURL},
		entryURL:${entryURL},
		themeDisplay:${themeDisplay}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-BlogsEntry-move-entry-to-trash" description="jsonws-BlogsEntry-move-entry-to-trash" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.BlogsEntry.move-entry-to-trash1">Liferay.Service(
	'/blogsentry/move-entry-to-trash',
	{
		entryId:${entryId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-BlogsEntry-restore-entry-from-trash" description="jsonws-BlogsEntry-restore-entry-from-trash" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.BlogsEntry.restore-entry-from-trash1">Liferay.Service(
	'/blogsentry/restore-entry-from-trash',
	{
		entryId:${entryId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-BlogsEntry-subscribe" description="jsonws-BlogsEntry-subscribe" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.BlogsEntry.subscribe1">Liferay.Service(
	'/blogsentry/subscribe',
	{
		groupId:${groupId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-BlogsEntry-unsubscribe" description="jsonws-BlogsEntry-unsubscribe" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.BlogsEntry.unsubscribe1">Liferay.Service(
	'/blogsentry/unsubscribe',
	{
		groupId:${groupId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-BookmarksEntry-add-entry" description="jsonws-BookmarksEntry-add-entry" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.BookmarksEntry.add-entry6">Liferay.Service(
	'/bookmarksentry/add-entry',
	{
		groupId:${groupId},
		folderId:${folderId},
		name:${name},
		url:${url},
		description:${description},
		serviceContext:${serviceContext}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-BookmarksEntry-delete-entry" description="jsonws-BookmarksEntry-delete-entry" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.BookmarksEntry.delete-entry1">Liferay.Service(
	'/bookmarksentry/delete-entry',
	{
		entryId:${entryId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-BookmarksEntry-get-entries" description="jsonws-BookmarksEntry-get-entries" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.BookmarksEntry.get-entries4">Liferay.Service(
	'/bookmarksentry/get-entries',
	{
		groupId:${groupId},
		folderId:${folderId},
		start:${start},
		end:${end}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-BookmarksEntry-get-entries" description="jsonws-BookmarksEntry-get-entries" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.BookmarksEntry.get-entries5">Liferay.Service(
	'/bookmarksentry/get-entries',
	{
		groupId:${groupId},
		folderId:${folderId},
		start:${start},
		end:${end},
		orderByComparator:${orderByComparator}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-BookmarksEntry-get-entries-count" description="jsonws-BookmarksEntry-get-entries-count" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.BookmarksEntry.get-entries-count2">Liferay.Service(
	'/bookmarksentry/get-entries-count',
	{
		groupId:${groupId},
		folderId:${folderId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-BookmarksEntry-get-entries-count" description="jsonws-BookmarksEntry-get-entries-count" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.BookmarksEntry.get-entries-count3">Liferay.Service(
	'/bookmarksentry/get-entries-count',
	{
		groupId:${groupId},
		folderId:${folderId},
		status:${status}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-BookmarksEntry-get-entry" description="jsonws-BookmarksEntry-get-entry" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.BookmarksEntry.get-entry1">Liferay.Service(
	'/bookmarksentry/get-entry',
	{
		entryId:${entryId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-BookmarksEntry-get-folders-entries-count" description="jsonws-BookmarksEntry-get-folders-entries-count" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.BookmarksEntry.get-folders-entries-count2">Liferay.Service(
	'/bookmarksentry/get-folders-entries-count',
	{
		groupId:${groupId},
		folderIds:${folderIds}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-BookmarksEntry-get-group-entries" description="jsonws-BookmarksEntry-get-group-entries" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.BookmarksEntry.get-group-entries3">Liferay.Service(
	'/bookmarksentry/get-group-entries',
	{
		groupId:${groupId},
		start:${start},
		end:${end}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-BookmarksEntry-get-group-entries" description="jsonws-BookmarksEntry-get-group-entries" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.BookmarksEntry.get-group-entries4">Liferay.Service(
	'/bookmarksentry/get-group-entries',
	{
		groupId:${groupId},
		userId:${userId},
		start:${start},
		end:${end}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-BookmarksEntry-get-group-entries" description="jsonws-BookmarksEntry-get-group-entries" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.BookmarksEntry.get-group-entries5">Liferay.Service(
	'/bookmarksentry/get-group-entries',
	{
		groupId:${groupId},
		userId:${userId},
		rootFolderId:${rootFolderId},
		start:${start},
		end:${end}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-BookmarksEntry-get-group-entries-count" description="jsonws-BookmarksEntry-get-group-entries-count" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.BookmarksEntry.get-group-entries-count1">Liferay.Service(
	'/bookmarksentry/get-group-entries-count',
	{
		groupId:${groupId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-BookmarksEntry-get-group-entries-count" description="jsonws-BookmarksEntry-get-group-entries-count" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.BookmarksEntry.get-group-entries-count2">Liferay.Service(
	'/bookmarksentry/get-group-entries-count',
	{
		groupId:${groupId},
		userId:${userId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-BookmarksEntry-get-group-entries-count" description="jsonws-BookmarksEntry-get-group-entries-count" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.BookmarksEntry.get-group-entries-count3">Liferay.Service(
	'/bookmarksentry/get-group-entries-count',
	{
		groupId:${groupId},
		userId:${userId},
		rootFolderId:${rootFolderId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-BookmarksEntry-move-entry" description="jsonws-BookmarksEntry-move-entry" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.BookmarksEntry.move-entry2">Liferay.Service(
	'/bookmarksentry/move-entry',
	{
		entryId:${entryId},
		parentFolderId:${parentFolderId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-BookmarksEntry-move-entry-from-trash" description="jsonws-BookmarksEntry-move-entry-from-trash" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.BookmarksEntry.move-entry-from-trash2">Liferay.Service(
	'/bookmarksentry/move-entry-from-trash',
	{
		entryId:${entryId},
		parentFolderId:${parentFolderId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-BookmarksEntry-move-entry-to-trash" description="jsonws-BookmarksEntry-move-entry-to-trash" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.BookmarksEntry.move-entry-to-trash1">Liferay.Service(
	'/bookmarksentry/move-entry-to-trash',
	{
		entryId:${entryId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-BookmarksEntry-open-entry" description="jsonws-BookmarksEntry-open-entry" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.BookmarksEntry.open-entry1">Liferay.Service(
	'/bookmarksentry/open-entry',
	{
		entry:${entry}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-BookmarksEntry-open-entry" description="jsonws-BookmarksEntry-open-entry" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.BookmarksEntry.open-entry1">Liferay.Service(
	'/bookmarksentry/open-entry',
	{
		entryId:${entryId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-BookmarksEntry-restore-entry-from-trash" description="jsonws-BookmarksEntry-restore-entry-from-trash" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.BookmarksEntry.restore-entry-from-trash1">Liferay.Service(
	'/bookmarksentry/restore-entry-from-trash',
	{
		entryId:${entryId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-BookmarksEntry-search" description="jsonws-BookmarksEntry-search" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.BookmarksEntry.search5">Liferay.Service(
	'/bookmarksentry/search',
	{
		groupId:${groupId},
		creatorUserId:${creatorUserId},
		status:${status},
		start:${start},
		end:${end}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-BookmarksEntry-subscribe-entry" description="jsonws-BookmarksEntry-subscribe-entry" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.BookmarksEntry.subscribe-entry1">Liferay.Service(
	'/bookmarksentry/subscribe-entry',
	{
		entryId:${entryId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-BookmarksEntry-unsubscribe-entry" description="jsonws-BookmarksEntry-unsubscribe-entry" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.BookmarksEntry.unsubscribe-entry1">Liferay.Service(
	'/bookmarksentry/unsubscribe-entry',
	{
		entryId:${entryId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-BookmarksEntry-update-entry" description="jsonws-BookmarksEntry-update-entry" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.BookmarksEntry.update-entry7">Liferay.Service(
	'/bookmarksentry/update-entry',
	{
		entryId:${entryId},
		groupId:${groupId},
		folderId:${folderId},
		name:${name},
		url:${url},
		description:${description},
		serviceContext:${serviceContext}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-BookmarksFolder-add-folder" description="jsonws-BookmarksFolder-add-folder" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.BookmarksFolder.add-folder4">Liferay.Service(
	'/bookmarksfolder/add-folder',
	{
		parentFolderId:${parentFolderId},
		name:${name},
		description:${description},
		serviceContext:${serviceContext}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-BookmarksFolder-delete-folder" description="jsonws-BookmarksFolder-delete-folder" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.BookmarksFolder.delete-folder1">Liferay.Service(
	'/bookmarksfolder/delete-folder',
	{
		folderId:${folderId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-BookmarksFolder-delete-folder" description="jsonws-BookmarksFolder-delete-folder" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.BookmarksFolder.delete-folder2">Liferay.Service(
	'/bookmarksfolder/delete-folder',
	{
		folderId:${folderId},
		includeTrashedEntries:${includeTrashedEntries}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-BookmarksFolder-get-folder" description="jsonws-BookmarksFolder-get-folder" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.BookmarksFolder.get-folder1">Liferay.Service(
	'/bookmarksfolder/get-folder',
	{
		folderId:${folderId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-BookmarksFolder-get-folder-ids" description="jsonws-BookmarksFolder-get-folder-ids" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.BookmarksFolder.get-folder-ids2">Liferay.Service(
	'/bookmarksfolder/get-folder-ids',
	{
		groupId:${groupId},
		folderId:${folderId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-BookmarksFolder-get-folders" description="jsonws-BookmarksFolder-get-folders" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.BookmarksFolder.get-folders1">Liferay.Service(
	'/bookmarksfolder/get-folders',
	{
		groupId:${groupId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-BookmarksFolder-get-folders" description="jsonws-BookmarksFolder-get-folders" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.BookmarksFolder.get-folders2">Liferay.Service(
	'/bookmarksfolder/get-folders',
	{
		groupId:${groupId},
		parentFolderId:${parentFolderId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-BookmarksFolder-get-folders" description="jsonws-BookmarksFolder-get-folders" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.BookmarksFolder.get-folders4">Liferay.Service(
	'/bookmarksfolder/get-folders',
	{
		groupId:${groupId},
		parentFolderId:${parentFolderId},
		start:${start},
		end:${end}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-BookmarksFolder-get-folders" description="jsonws-BookmarksFolder-get-folders" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.BookmarksFolder.get-folders5">Liferay.Service(
	'/bookmarksfolder/get-folders',
	{
		groupId:${groupId},
		parentFolderId:${parentFolderId},
		status:${status},
		start:${start},
		end:${end}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-BookmarksFolder-get-folders-and-entries" description="jsonws-BookmarksFolder-get-folders-and-entries" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.BookmarksFolder.get-folders-and-entries2">Liferay.Service(
	'/bookmarksfolder/get-folders-and-entries',
	{
		groupId:${groupId},
		folderId:${folderId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-BookmarksFolder-get-folders-and-entries" description="jsonws-BookmarksFolder-get-folders-and-entries" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.BookmarksFolder.get-folders-and-entries3">Liferay.Service(
	'/bookmarksfolder/get-folders-and-entries',
	{
		groupId:${groupId},
		folderId:${folderId},
		status:${status}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-BookmarksFolder-get-folders-and-entries" description="jsonws-BookmarksFolder-get-folders-and-entries" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.BookmarksFolder.get-folders-and-entries5">Liferay.Service(
	'/bookmarksfolder/get-folders-and-entries',
	{
		groupId:${groupId},
		folderId:${folderId},
		status:${status},
		start:${start},
		end:${end}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-BookmarksFolder-get-folders-and-entries-count" description="jsonws-BookmarksFolder-get-folders-and-entries-count" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.BookmarksFolder.get-folders-and-entries-count2">Liferay.Service(
	'/bookmarksfolder/get-folders-and-entries-count',
	{
		groupId:${groupId},
		folderId:${folderId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-BookmarksFolder-get-folders-and-entries-count" description="jsonws-BookmarksFolder-get-folders-and-entries-count" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.BookmarksFolder.get-folders-and-entries-count3">Liferay.Service(
	'/bookmarksfolder/get-folders-and-entries-count',
	{
		groupId:${groupId},
		folderId:${folderId},
		status:${status}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-BookmarksFolder-get-folders-count" description="jsonws-BookmarksFolder-get-folders-count" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.BookmarksFolder.get-folders-count2">Liferay.Service(
	'/bookmarksfolder/get-folders-count',
	{
		groupId:${groupId},
		parentFolderId:${parentFolderId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-BookmarksFolder-get-folders-count" description="jsonws-BookmarksFolder-get-folders-count" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.BookmarksFolder.get-folders-count3">Liferay.Service(
	'/bookmarksfolder/get-folders-count',
	{
		groupId:${groupId},
		parentFolderId:${parentFolderId},
		status:${status}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-BookmarksFolder-get-subfolder-ids" description="jsonws-BookmarksFolder-get-subfolder-ids" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.BookmarksFolder.get-subfolder-ids3">Liferay.Service(
	'/bookmarksfolder/get-subfolder-ids',
	{
		folderIds:${folderIds},
		groupId:${groupId},
		folderId:${folderId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-BookmarksFolder-get-subfolder-ids" description="jsonws-BookmarksFolder-get-subfolder-ids" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.BookmarksFolder.get-subfolder-ids3">Liferay.Service(
	'/bookmarksfolder/get-subfolder-ids',
	{
		groupId:${groupId},
		folderId:${folderId},
		recurse:${recurse}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-BookmarksFolder-move-folder" description="jsonws-BookmarksFolder-move-folder" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.BookmarksFolder.move-folder2">Liferay.Service(
	'/bookmarksfolder/move-folder',
	{
		folderId:${folderId},
		parentFolderId:${parentFolderId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-BookmarksFolder-move-folder-from-trash" description="jsonws-BookmarksFolder-move-folder-from-trash" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.BookmarksFolder.move-folder-from-trash2">Liferay.Service(
	'/bookmarksfolder/move-folder-from-trash',
	{
		folderId:${folderId},
		parentFolderId:${parentFolderId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-BookmarksFolder-move-folder-to-trash" description="jsonws-BookmarksFolder-move-folder-to-trash" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.BookmarksFolder.move-folder-to-trash1">Liferay.Service(
	'/bookmarksfolder/move-folder-to-trash',
	{
		folderId:${folderId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-BookmarksFolder-restore-folder-from-trash" description="jsonws-BookmarksFolder-restore-folder-from-trash" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.BookmarksFolder.restore-folder-from-trash1">Liferay.Service(
	'/bookmarksfolder/restore-folder-from-trash',
	{
		folderId:${folderId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-BookmarksFolder-subscribe-folder" description="jsonws-BookmarksFolder-subscribe-folder" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.BookmarksFolder.subscribe-folder2">Liferay.Service(
	'/bookmarksfolder/subscribe-folder',
	{
		groupId:${groupId},
		folderId:${folderId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-BookmarksFolder-unsubscribe-folder" description="jsonws-BookmarksFolder-unsubscribe-folder" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.BookmarksFolder.unsubscribe-folder2">Liferay.Service(
	'/bookmarksfolder/unsubscribe-folder',
	{
		groupId:${groupId},
		folderId:${folderId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-BookmarksFolder-update-folder" description="jsonws-BookmarksFolder-update-folder" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.BookmarksFolder.update-folder6">Liferay.Service(
	'/bookmarksfolder/update-folder',
	{
		folderId:${folderId},
		parentFolderId:${parentFolderId},
		name:${name},
		description:${description},
		mergeWithParentFolder:${mergeWithParentFolder},
		serviceContext:${serviceContext}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-ClassName-fetch-class-name" description="jsonws-ClassName-fetch-class-name" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.ClassName.fetch-class-name1">Liferay.Service(
	'/classname/fetch-class-name',
	{
		value:${value}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-ClassName-fetch-class-name-id" description="jsonws-ClassName-fetch-class-name-id" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.ClassName.fetch-class-name-id1">Liferay.Service(
	'/classname/fetch-class-name-id',
	{
		clazz:${clazz}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-ClassName-fetch-class-name-id" description="jsonws-ClassName-fetch-class-name-id" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.ClassName.fetch-class-name-id1">Liferay.Service(
	'/classname/fetch-class-name-id',
	{
		value:${value}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-Company-delete-logo" description="jsonws-Company-delete-logo" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.Company.delete-logo1">Liferay.Service(
	'/company/delete-logo',
	{
		companyId:${companyId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-Company-get-company-by-id" description="jsonws-Company-get-company-by-id" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.Company.get-company-by-id1">Liferay.Service(
	'/company/get-company-by-id',
	{
		companyId:${companyId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-Company-get-company-by-logo-id" description="jsonws-Company-get-company-by-logo-id" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.Company.get-company-by-logo-id1">Liferay.Service(
	'/company/get-company-by-logo-id',
	{
		logoId:${logoId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-Company-get-company-by-mx" description="jsonws-Company-get-company-by-mx" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.Company.get-company-by-mx1">Liferay.Service(
	'/company/get-company-by-mx',
	{
		mx:${mx}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-Company-get-company-by-virtual-host" description="jsonws-Company-get-company-by-virtual-host" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.Company.get-company-by-virtual-host1">Liferay.Service(
	'/company/get-company-by-virtual-host',
	{
		virtualHost:${virtualHost}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-Company-get-company-by-web-id" description="jsonws-Company-get-company-by-web-id" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.Company.get-company-by-web-id1">Liferay.Service(
	'/company/get-company-by-web-id',
	{
		webId:${webId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-Company-update-company" description="jsonws-Company-update-company" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.Company.update-company13">Liferay.Service(
	'/company/update-company',
	{
		companyId:${companyId},
		virtualHost:${virtualHost},
		mx:${mx},
		homeURL:${homeURL},
		name:${name},
		legalName:${legalName},
		legalId:${legalId},
		legalType:${legalType},
		sicCode:${sicCode},
		tickerSymbol:${tickerSymbol},
		industry:${industry},
		type:${type},
		size:${size}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-Company-update-company" description="jsonws-Company-update-company" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.Company.update-company5">Liferay.Service(
	'/company/update-company',
	{
		companyId:${companyId},
		virtualHost:${virtualHost},
		mx:${mx},
		maxUsers:${maxUsers},
		active:${active}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-Company-update-display" description="jsonws-Company-update-display" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.Company.update-display3">Liferay.Service(
	'/company/update-display',
	{
		companyId:${companyId},
		languageId:${languageId},
		timeZoneId:${timeZoneId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-Company-update-logo" description="jsonws-Company-update-logo" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.Company.update-logo2">Liferay.Service(
	'/company/update-logo',
	{
		companyId:${companyId},
		bytes:${bytes}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-Contact-get-contact" description="jsonws-Contact-get-contact" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.Contact.get-contact1">Liferay.Service(
	'/contact/get-contact',
	{
		contactId:${contactId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-Contact-get-contacts" description="jsonws-Contact-get-contacts" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.Contact.get-contacts5">Liferay.Service(
	'/contact/get-contacts',
	{
		classNameId:${classNameId},
		classPK:${classPK},
		start:${start},
		end:${end},
		orderByComparator:${orderByComparator}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-Contact-get-contacts-count" description="jsonws-Contact-get-contacts-count" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.Contact.get-contacts-count2">Liferay.Service(
	'/contact/get-contacts-count',
	{
		classNameId:${classNameId},
		classPK:${classPK}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-Country-add-country" description="jsonws-Country-add-country" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.Country.add-country6">Liferay.Service(
	'/country/add-country',
	{
		name:${name},
		a2:${a2},
		a3:${a3},
		number:${number},
		idd:${idd},
		active:${active}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-Country-fetch-country" description="jsonws-Country-fetch-country" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.Country.fetch-country1">Liferay.Service(
	'/country/fetch-country',
	{
		countryId:${countryId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-Country-fetch-country-by-a2" description="jsonws-Country-fetch-country-by-a2" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.Country.fetch-country-by-a21">Liferay.Service(
	'/country/fetch-country-by-a2',
	{
		a2:${a2}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-Country-fetch-country-by-a3" description="jsonws-Country-fetch-country-by-a3" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.Country.fetch-country-by-a31">Liferay.Service(
	'/country/fetch-country-by-a3',
	{
		a3:${a3}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-Country-get-countries" description="jsonws-Country-get-countries" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.Country.get-countries">Liferay.Service(
	'/country/get-countries',
	{

	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-Country-get-countries" description="jsonws-Country-get-countries" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.Country.get-countries1">Liferay.Service(
	'/country/get-countries',
	{
		active:${active}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-Country-get-country" description="jsonws-Country-get-country" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.Country.get-country1">Liferay.Service(
	'/country/get-country',
	{
		countryId:${countryId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-Country-get-country-by-a2" description="jsonws-Country-get-country-by-a2" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.Country.get-country-by-a21">Liferay.Service(
	'/country/get-country-by-a2',
	{
		a2:${a2}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-Country-get-country-by-a3" description="jsonws-Country-get-country-by-a3" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.Country.get-country-by-a31">Liferay.Service(
	'/country/get-country-by-a3',
	{
		a3:${a3}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-Country-get-country-by-name" description="jsonws-Country-get-country-by-name" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.Country.get-country-by-name1">Liferay.Service(
	'/country/get-country-by-name',
	{
		name:${name}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DDLRecord-add-record" description="jsonws-DDLRecord-add-record" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DDLRecord.add-record5">Liferay.Service(
	'/ddlrecord/add-record',
	{
		groupId:${groupId},
		recordSetId:${recordSetId},
		displayIndex:${displayIndex},
		fields:${fields},
		serviceContext:${serviceContext}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DDLRecord-add-record" description="jsonws-DDLRecord-add-record" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DDLRecord.add-record5">Liferay.Service(
	'/ddlrecord/add-record',
	{
		groupId:${groupId},
		recordSetId:${recordSetId},
		displayIndex:${displayIndex},
		fieldsMap:${fieldsMap},
		serviceContext:${serviceContext}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DDLRecord-delete-record-locale" description="jsonws-DDLRecord-delete-record-locale" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DDLRecord.delete-record-locale3">Liferay.Service(
	'/ddlrecord/delete-record-locale',
	{
		recordId:${recordId},
		locale:${locale},
		serviceContext:${serviceContext}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DDLRecord-get-record" description="jsonws-DDLRecord-get-record" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DDLRecord.get-record1">Liferay.Service(
	'/ddlrecord/get-record',
	{
		recordId:${recordId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DDLRecord-update-record" description="jsonws-DDLRecord-update-record" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DDLRecord.update-record5">Liferay.Service(
	'/ddlrecord/update-record',
	{
		recordId:${recordId},
		displayIndex:${displayIndex},
		fieldsMap:${fieldsMap},
		mergeFields:${mergeFields},
		serviceContext:${serviceContext}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DDLRecord-update-record" description="jsonws-DDLRecord-update-record" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DDLRecord.update-record6">Liferay.Service(
	'/ddlrecord/update-record',
	{
		recordId:${recordId},
		majorVersion:${majorVersion},
		displayIndex:${displayIndex},
		fields:${fields},
		mergeFields:${mergeFields},
		serviceContext:${serviceContext}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DDLRecordSet-add-record-set" description="jsonws-DDLRecordSet-add-record-set" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DDLRecordSet.add-record-set8">Liferay.Service(
	'/ddlrecordset/add-record-set',
	{
		groupId:${groupId},
		ddmStructureId:${ddmStructureId},
		recordSetKey:${recordSetKey},
		nameMap:${nameMap},
		descriptionMap:${descriptionMap},
		minDisplayRows:${minDisplayRows},
		scope:${scope},
		serviceContext:${serviceContext}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DDLRecordSet-delete-record-set" description="jsonws-DDLRecordSet-delete-record-set" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DDLRecordSet.delete-record-set1">Liferay.Service(
	'/ddlrecordset/delete-record-set',
	{
		recordSetId:${recordSetId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DDLRecordSet-get-record-set" description="jsonws-DDLRecordSet-get-record-set" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DDLRecordSet.get-record-set1">Liferay.Service(
	'/ddlrecordset/get-record-set',
	{
		recordSetId:${recordSetId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DDLRecordSet-search" description="jsonws-DDLRecordSet-search" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DDLRecordSet.search7">Liferay.Service(
	'/ddlrecordset/search',
	{
		companyId:${companyId},
		groupId:${groupId},
		keywords:${keywords},
		scope:${scope},
		start:${start},
		end:${end},
		orderByComparator:${orderByComparator}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DDLRecordSet-search" description="jsonws-DDLRecordSet-search" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DDLRecordSet.search9">Liferay.Service(
	'/ddlrecordset/search',
	{
		companyId:${companyId},
		groupId:${groupId},
		name:${name},
		description:${description},
		scope:${scope},
		andOperator:${andOperator},
		start:${start},
		end:${end},
		orderByComparator:${orderByComparator}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DDLRecordSet-search-count" description="jsonws-DDLRecordSet-search-count" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DDLRecordSet.search-count4">Liferay.Service(
	'/ddlrecordset/search-count',
	{
		companyId:${companyId},
		groupId:${groupId},
		keywords:${keywords},
		scope:${scope}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DDLRecordSet-search-count" description="jsonws-DDLRecordSet-search-count" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DDLRecordSet.search-count6">Liferay.Service(
	'/ddlrecordset/search-count',
	{
		companyId:${companyId},
		groupId:${groupId},
		name:${name},
		description:${description},
		scope:${scope},
		andOperator:${andOperator}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DDLRecordSet-update-min-display-rows" description="jsonws-DDLRecordSet-update-min-display-rows" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DDLRecordSet.update-min-display-rows3">Liferay.Service(
	'/ddlrecordset/update-min-display-rows',
	{
		recordSetId:${recordSetId},
		minDisplayRows:${minDisplayRows},
		serviceContext:${serviceContext}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DDLRecordSet-update-record-set" description="jsonws-DDLRecordSet-update-record-set" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DDLRecordSet.update-record-set6">Liferay.Service(
	'/ddlrecordset/update-record-set',
	{
		recordSetId:${recordSetId},
		ddmStructureId:${ddmStructureId},
		nameMap:${nameMap},
		descriptionMap:${descriptionMap},
		minDisplayRows:${minDisplayRows},
		serviceContext:${serviceContext}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DDLRecordSet-update-record-set" description="jsonws-DDLRecordSet-update-record-set" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DDLRecordSet.update-record-set7">Liferay.Service(
	'/ddlrecordset/update-record-set',
	{
		groupId:${groupId},
		ddmStructureId:${ddmStructureId},
		recordSetKey:${recordSetKey},
		nameMap:${nameMap},
		descriptionMap:${descriptionMap},
		minDisplayRows:${minDisplayRows},
		serviceContext:${serviceContext}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DDMStructure-add-structure" description="jsonws-DDMStructure-add-structure" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DDMStructure.add-structure10">Liferay.Service(
	'/ddmstructure/add-structure',
	{
		groupId:${groupId},
		parentStructureId:${parentStructureId},
		classNameId:${classNameId},
		structureKey:${structureKey},
		nameMap:${nameMap},
		descriptionMap:${descriptionMap},
		xsd:${xsd},
		storageType:${storageType},
		type:${type},
		serviceContext:${serviceContext}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DDMStructure-add-structure" description="jsonws-DDMStructure-add-structure" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DDMStructure.add-structure11">Liferay.Service(
	'/ddmstructure/add-structure',
	{
		userId:${userId},
		groupId:${groupId},
		parentStructureKey:${parentStructureKey},
		classNameId:${classNameId},
		structureKey:${structureKey},
		nameMap:${nameMap},
		descriptionMap:${descriptionMap},
		xsd:${xsd},
		storageType:${storageType},
		type:${type},
		serviceContext:${serviceContext}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DDMStructure-add-structure" description="jsonws-DDMStructure-add-structure" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DDMStructure.add-structure7">Liferay.Service(
	'/ddmstructure/add-structure',
	{
		userId:${userId},
		groupId:${groupId},
		classNameId:${classNameId},
		nameMap:${nameMap},
		descriptionMap:${descriptionMap},
		xsd:${xsd},
		serviceContext:${serviceContext}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DDMStructure-copy-structure" description="jsonws-DDMStructure-copy-structure" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DDMStructure.copy-structure2">Liferay.Service(
	'/ddmstructure/copy-structure',
	{
		structureId:${structureId},
		serviceContext:${serviceContext}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DDMStructure-copy-structure" description="jsonws-DDMStructure-copy-structure" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DDMStructure.copy-structure4">Liferay.Service(
	'/ddmstructure/copy-structure',
	{
		structureId:${structureId},
		nameMap:${nameMap},
		descriptionMap:${descriptionMap},
		serviceContext:${serviceContext}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DDMStructure-delete-structure" description="jsonws-DDMStructure-delete-structure" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DDMStructure.delete-structure1">Liferay.Service(
	'/ddmstructure/delete-structure',
	{
		structureId:${structureId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DDMStructure-fetch-structure" description="jsonws-DDMStructure-fetch-structure" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DDMStructure.fetch-structure3">Liferay.Service(
	'/ddmstructure/fetch-structure',
	{
		groupId:${groupId},
		classNameId:${classNameId},
		structureKey:${structureKey}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DDMStructure-get-structure" description="jsonws-DDMStructure-get-structure" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DDMStructure.get-structure1">Liferay.Service(
	'/ddmstructure/get-structure',
	{
		structureId:${structureId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DDMStructure-get-structure" description="jsonws-DDMStructure-get-structure" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DDMStructure.get-structure3">Liferay.Service(
	'/ddmstructure/get-structure',
	{
		groupId:${groupId},
		classNameId:${classNameId},
		structureKey:${structureKey}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DDMStructure-get-structure" description="jsonws-DDMStructure-get-structure" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DDMStructure.get-structure4">Liferay.Service(
	'/ddmstructure/get-structure',
	{
		groupId:${groupId},
		classNameId:${classNameId},
		structureKey:${structureKey},
		includeGlobalStructures:${includeGlobalStructures}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DDMStructure-get-structures" description="jsonws-DDMStructure-get-structures" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DDMStructure.get-structures1">Liferay.Service(
	'/ddmstructure/get-structures',
	{
		groupId:${groupId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DDMStructure-get-structures" description="jsonws-DDMStructure-get-structures" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DDMStructure.get-structures1">Liferay.Service(
	'/ddmstructure/get-structures',
	{
		groupIds:${groupIds}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DDMStructure-search" description="jsonws-DDMStructure-search" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DDMStructure.search11">Liferay.Service(
	'/ddmstructure/search',
	{
		companyId:${companyId},
		groupIds:${groupIds},
		classNameIds:${classNameIds},
		name:${name},
		description:${description},
		storageType:${storageType},
		type:${type},
		andOperator:${andOperator},
		start:${start},
		end:${end},
		orderByComparator:${orderByComparator}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DDMStructure-search" description="jsonws-DDMStructure-search" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DDMStructure.search7">Liferay.Service(
	'/ddmstructure/search',
	{
		companyId:${companyId},
		groupIds:${groupIds},
		classNameIds:${classNameIds},
		keywords:${keywords},
		start:${start},
		end:${end},
		orderByComparator:${orderByComparator}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DDMStructure-search-count" description="jsonws-DDMStructure-search-count" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DDMStructure.search-count4">Liferay.Service(
	'/ddmstructure/search-count',
	{
		companyId:${companyId},
		groupIds:${groupIds},
		classNameIds:${classNameIds},
		keywords:${keywords}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DDMStructure-search-count" description="jsonws-DDMStructure-search-count" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DDMStructure.search-count8">Liferay.Service(
	'/ddmstructure/search-count',
	{
		companyId:${companyId},
		groupIds:${groupIds},
		classNameIds:${classNameIds},
		name:${name},
		description:${description},
		storageType:${storageType},
		type:${type},
		andOperator:${andOperator}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DDMStructure-update-structure" description="jsonws-DDMStructure-update-structure" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DDMStructure.update-structure6">Liferay.Service(
	'/ddmstructure/update-structure',
	{
		structureId:${structureId},
		parentStructureId:${parentStructureId},
		nameMap:${nameMap},
		descriptionMap:${descriptionMap},
		xsd:${xsd},
		serviceContext:${serviceContext}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DDMStructure-update-structure" description="jsonws-DDMStructure-update-structure" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DDMStructure.update-structure8">Liferay.Service(
	'/ddmstructure/update-structure',
	{
		groupId:${groupId},
		parentStructureId:${parentStructureId},
		classNameId:${classNameId},
		structureKey:${structureKey},
		nameMap:${nameMap},
		descriptionMap:${descriptionMap},
		xsd:${xsd},
		serviceContext:${serviceContext}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DDMTemplate-add-template" description="jsonws-DDMTemplate-add-template" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DDMTemplate.add-template10">Liferay.Service(
	'/ddmtemplate/add-template',
	{
		groupId:${groupId},
		classNameId:${classNameId},
		classPK:${classPK},
		nameMap:${nameMap},
		descriptionMap:${descriptionMap},
		type:${type},
		mode:${mode},
		language:${language},
		script:${script},
		serviceContext:${serviceContext}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DDMTemplate-add-template" description="jsonws-DDMTemplate-add-template" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DDMTemplate.add-template15">Liferay.Service(
	'/ddmtemplate/add-template',
	{
		groupId:${groupId},
		classNameId:${classNameId},
		classPK:${classPK},
		templateKey:${templateKey},
		nameMap:${nameMap},
		descriptionMap:${descriptionMap},
		type:${type},
		mode:${mode},
		language:${language},
		script:${script},
		cacheable:${cacheable},
		smallImage:${smallImage},
		smallImageURL:${smallImageURL},
		smallImageFile:${smallImageFile},
		serviceContext:${serviceContext}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DDMTemplate-copy-template" description="jsonws-DDMTemplate-copy-template" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DDMTemplate.copy-template2">Liferay.Service(
	'/ddmtemplate/copy-template',
	{
		templateId:${templateId},
		serviceContext:${serviceContext}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DDMTemplate-copy-template" description="jsonws-DDMTemplate-copy-template" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DDMTemplate.copy-template4">Liferay.Service(
	'/ddmtemplate/copy-template',
	{
		templateId:${templateId},
		nameMap:${nameMap},
		descriptionMap:${descriptionMap},
		serviceContext:${serviceContext}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DDMTemplate-copy-templates" description="jsonws-DDMTemplate-copy-templates" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DDMTemplate.copy-templates5">Liferay.Service(
	'/ddmtemplate/copy-templates',
	{
		classNameId:${classNameId},
		classPK:${classPK},
		newClassPK:${newClassPK},
		type:${type},
		serviceContext:${serviceContext}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DDMTemplate-delete-template" description="jsonws-DDMTemplate-delete-template" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DDMTemplate.delete-template1">Liferay.Service(
	'/ddmtemplate/delete-template',
	{
		templateId:${templateId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DDMTemplate-fetch-template" description="jsonws-DDMTemplate-fetch-template" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DDMTemplate.fetch-template3">Liferay.Service(
	'/ddmtemplate/fetch-template',
	{
		groupId:${groupId},
		classNameId:${classNameId},
		templateKey:${templateKey}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DDMTemplate-get-template" description="jsonws-DDMTemplate-get-template" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DDMTemplate.get-template1">Liferay.Service(
	'/ddmtemplate/get-template',
	{
		templateId:${templateId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DDMTemplate-get-template" description="jsonws-DDMTemplate-get-template" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DDMTemplate.get-template3">Liferay.Service(
	'/ddmtemplate/get-template',
	{
		groupId:${groupId},
		classNameId:${classNameId},
		templateKey:${templateKey}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DDMTemplate-get-template" description="jsonws-DDMTemplate-get-template" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DDMTemplate.get-template4">Liferay.Service(
	'/ddmtemplate/get-template',
	{
		groupId:${groupId},
		classNameId:${classNameId},
		templateKey:${templateKey},
		includeGlobalTemplates:${includeGlobalTemplates}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DDMTemplate-get-templates" description="jsonws-DDMTemplate-get-templates" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DDMTemplate.get-templates2">Liferay.Service(
	'/ddmtemplate/get-templates',
	{
		groupId:${groupId},
		classNameId:${classNameId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DDMTemplate-get-templates" description="jsonws-DDMTemplate-get-templates" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DDMTemplate.get-templates3">Liferay.Service(
	'/ddmtemplate/get-templates',
	{
		groupId:${groupId},
		classNameId:${classNameId},
		classPK:${classPK}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DDMTemplate-get-templates" description="jsonws-DDMTemplate-get-templates" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DDMTemplate.get-templates4">Liferay.Service(
	'/ddmtemplate/get-templates',
	{
		groupId:${groupId},
		classNameId:${classNameId},
		classPK:${classPK},
		type:${type}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DDMTemplate-get-templates" description="jsonws-DDMTemplate-get-templates" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DDMTemplate.get-templates5">Liferay.Service(
	'/ddmtemplate/get-templates',
	{
		groupId:${groupId},
		classNameId:${classNameId},
		classPK:${classPK},
		type:${type},
		mode:${mode}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DDMTemplate-get-templates-by-class-pk" description="jsonws-DDMTemplate-get-templates-by-class-pk" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DDMTemplate.get-templates-by-class-pk2">Liferay.Service(
	'/ddmtemplate/get-templates-by-class-pk',
	{
		groupId:${groupId},
		classPK:${classPK}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DDMTemplate-get-templates-by-structure-class-name-id" description="jsonws-DDMTemplate-get-templates-by-structure-class-name-id" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DDMTemplate.get-templates-by-structure-class-name-id5">Liferay.Service(
	'/ddmtemplate/get-templates-by-structure-class-name-id',
	{
		groupId:${groupId},
		structureClassNameId:${structureClassNameId},
		start:${start},
		end:${end},
		orderByComparator:${orderByComparator}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DDMTemplate-get-templates-by-structure-class-name-id-count" description="jsonws-DDMTemplate-get-templates-by-structure-class-name-id-count" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DDMTemplate.get-templates-by-structure-class-name-id-count2">Liferay.Service(
	'/ddmtemplate/get-templates-by-structure-class-name-id-count',
	{
		groupId:${groupId},
		structureClassNameId:${structureClassNameId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DDMTemplate-search" description="jsonws-DDMTemplate-search" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DDMTemplate.search10">Liferay.Service(
	'/ddmtemplate/search',
	{
		companyId:${companyId},
		groupId:${groupId},
		classNameId:${classNameId},
		classPK:${classPK},
		keywords:${keywords},
		type:${type},
		mode:${mode},
		start:${start},
		end:${end},
		orderByComparator:${orderByComparator}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DDMTemplate-search" description="jsonws-DDMTemplate-search" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DDMTemplate.search10">Liferay.Service(
	'/ddmtemplate/search',
	{
		companyId:${companyId},
		groupIds:${groupIds},
		classNameIds:${classNameIds},
		classPKs:${classPKs},
		keywords:${keywords},
		type:${type},
		mode:${mode},
		start:${start},
		end:${end},
		orderByComparator:${orderByComparator}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DDMTemplate-search" description="jsonws-DDMTemplate-search" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DDMTemplate.search13">Liferay.Service(
	'/ddmtemplate/search',
	{
		companyId:${companyId},
		groupId:${groupId},
		classNameId:${classNameId},
		classPK:${classPK},
		name:${name},
		description:${description},
		type:${type},
		mode:${mode},
		language:${language},
		andOperator:${andOperator},
		start:${start},
		end:${end},
		orderByComparator:${orderByComparator}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DDMTemplate-search" description="jsonws-DDMTemplate-search" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DDMTemplate.search13">Liferay.Service(
	'/ddmtemplate/search',
	{
		companyId:${companyId},
		groupIds:${groupIds},
		classNameIds:${classNameIds},
		classPKs:${classPKs},
		name:${name},
		description:${description},
		type:${type},
		mode:${mode},
		language:${language},
		andOperator:${andOperator},
		start:${start},
		end:${end},
		orderByComparator:${orderByComparator}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DDMTemplate-search-count" description="jsonws-DDMTemplate-search-count" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DDMTemplate.search-count10">Liferay.Service(
	'/ddmtemplate/search-count',
	{
		companyId:${companyId},
		groupId:${groupId},
		classNameId:${classNameId},
		classPK:${classPK},
		name:${name},
		description:${description},
		type:${type},
		mode:${mode},
		language:${language},
		andOperator:${andOperator}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DDMTemplate-search-count" description="jsonws-DDMTemplate-search-count" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DDMTemplate.search-count10">Liferay.Service(
	'/ddmtemplate/search-count',
	{
		companyId:${companyId},
		groupIds:${groupIds},
		classNameIds:${classNameIds},
		classPKs:${classPKs},
		name:${name},
		description:${description},
		type:${type},
		mode:${mode},
		language:${language},
		andOperator:${andOperator}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DDMTemplate-search-count" description="jsonws-DDMTemplate-search-count" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DDMTemplate.search-count7">Liferay.Service(
	'/ddmtemplate/search-count',
	{
		companyId:${companyId},
		groupId:${groupId},
		classNameId:${classNameId},
		classPK:${classPK},
		keywords:${keywords},
		type:${type},
		mode:${mode}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DDMTemplate-search-count" description="jsonws-DDMTemplate-search-count" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DDMTemplate.search-count7">Liferay.Service(
	'/ddmtemplate/search-count',
	{
		companyId:${companyId},
		groupIds:${groupIds},
		classNameIds:${classNameIds},
		classPKs:${classPKs},
		keywords:${keywords},
		type:${type},
		mode:${mode}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DDMTemplate-update-template" description="jsonws-DDMTemplate-update-template" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DDMTemplate.update-template13">Liferay.Service(
	'/ddmtemplate/update-template',
	{
		templateId:${templateId},
		classPK:${classPK},
		nameMap:${nameMap},
		descriptionMap:${descriptionMap},
		type:${type},
		mode:${mode},
		language:${language},
		script:${script},
		cacheable:${cacheable},
		smallImage:${smallImage},
		smallImageURL:${smallImageURL},
		smallImageFile:${smallImageFile},
		serviceContext:${serviceContext}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DLApp-add-file-entry" description="jsonws-DLApp-add-file-entry" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DLApp.add-file-entry9">Liferay.Service(
	'/dlapp/add-file-entry',
	{
		repositoryId:${repositoryId},
		folderId:${folderId},
		sourceFileName:${sourceFileName},
		mimeType:${mimeType},
		title:${title},
		description:${description},
		changeLog:${changeLog},
		bytes:${bytes},
		serviceContext:${serviceContext}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DLApp-add-file-entry" description="jsonws-DLApp-add-file-entry" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DLApp.add-file-entry9">Liferay.Service(
	'/dlapp/add-file-entry',
	{
		repositoryId:${repositoryId},
		folderId:${folderId},
		sourceFileName:${sourceFileName},
		mimeType:${mimeType},
		title:${title},
		description:${description},
		changeLog:${changeLog},
		file:${file},
		serviceContext:${serviceContext}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DLApp-add-file-shortcut" description="jsonws-DLApp-add-file-shortcut" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DLApp.add-file-shortcut4">Liferay.Service(
	'/dlapp/add-file-shortcut',
	{
		repositoryId:${repositoryId},
		folderId:${folderId},
		toFileEntryId:${toFileEntryId},
		serviceContext:${serviceContext}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DLApp-add-folder" description="jsonws-DLApp-add-folder" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DLApp.add-folder5">Liferay.Service(
	'/dlapp/add-folder',
	{
		repositoryId:${repositoryId},
		parentFolderId:${parentFolderId},
		name:${name},
		description:${description},
		serviceContext:${serviceContext}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DLApp-add-temp-file-entry" description="jsonws-DLApp-add-temp-file-entry" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DLApp.add-temp-file-entry6">Liferay.Service(
	'/dlapp/add-temp-file-entry',
	{
		groupId:${groupId},
		folderId:${folderId},
		fileName:${fileName},
		tempFolderName:${tempFolderName},
		file:${file},
		mimeType:${mimeType}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DLApp-cancel-check-out" description="jsonws-DLApp-cancel-check-out" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DLApp.cancel-check-out1">Liferay.Service(
	'/dlapp/cancel-check-out',
	{
		fileEntryId:${fileEntryId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DLApp-check-in-file-entry" description="jsonws-DLApp-check-in-file-entry" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DLApp.check-in-file-entry2">Liferay.Service(
	'/dlapp/check-in-file-entry',
	{
		fileEntryId:${fileEntryId},
		lockUuid:${lockUuid}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DLApp-check-in-file-entry" description="jsonws-DLApp-check-in-file-entry" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DLApp.check-in-file-entry3">Liferay.Service(
	'/dlapp/check-in-file-entry',
	{
		fileEntryId:${fileEntryId},
		lockUuid:${lockUuid},
		serviceContext:${serviceContext}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DLApp-check-in-file-entry" description="jsonws-DLApp-check-in-file-entry" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DLApp.check-in-file-entry4">Liferay.Service(
	'/dlapp/check-in-file-entry',
	{
		fileEntryId:${fileEntryId},
		majorVersion:${majorVersion},
		changeLog:${changeLog},
		serviceContext:${serviceContext}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DLApp-check-out-file-entry" description="jsonws-DLApp-check-out-file-entry" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DLApp.check-out-file-entry2">Liferay.Service(
	'/dlapp/check-out-file-entry',
	{
		fileEntryId:${fileEntryId},
		serviceContext:${serviceContext}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DLApp-check-out-file-entry" description="jsonws-DLApp-check-out-file-entry" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DLApp.check-out-file-entry4">Liferay.Service(
	'/dlapp/check-out-file-entry',
	{
		fileEntryId:${fileEntryId},
		owner:${owner},
		expirationTime:${expirationTime},
		serviceContext:${serviceContext}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DLApp-copy-folder" description="jsonws-DLApp-copy-folder" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DLApp.copy-folder6">Liferay.Service(
	'/dlapp/copy-folder',
	{
		repositoryId:${repositoryId},
		sourceFolderId:${sourceFolderId},
		parentFolderId:${parentFolderId},
		name:${name},
		description:${description},
		serviceContext:${serviceContext}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DLApp-delete-file-entry" description="jsonws-DLApp-delete-file-entry" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DLApp.delete-file-entry1">Liferay.Service(
	'/dlapp/delete-file-entry',
	{
		fileEntryId:${fileEntryId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DLApp-delete-file-entry-by-title" description="jsonws-DLApp-delete-file-entry-by-title" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DLApp.delete-file-entry-by-title3">Liferay.Service(
	'/dlapp/delete-file-entry-by-title',
	{
		repositoryId:${repositoryId},
		folderId:${folderId},
		title:${title}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DLApp-delete-file-shortcut" description="jsonws-DLApp-delete-file-shortcut" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DLApp.delete-file-shortcut1">Liferay.Service(
	'/dlapp/delete-file-shortcut',
	{
		fileShortcutId:${fileShortcutId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DLApp-delete-file-version" description="jsonws-DLApp-delete-file-version" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DLApp.delete-file-version2">Liferay.Service(
	'/dlapp/delete-file-version',
	{
		fileEntryId:${fileEntryId},
		version:${version}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DLApp-delete-folder" description="jsonws-DLApp-delete-folder" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DLApp.delete-folder1">Liferay.Service(
	'/dlapp/delete-folder',
	{
		folderId:${folderId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DLApp-delete-folder" description="jsonws-DLApp-delete-folder" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DLApp.delete-folder3">Liferay.Service(
	'/dlapp/delete-folder',
	{
		repositoryId:${repositoryId},
		parentFolderId:${parentFolderId},
		name:${name}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DLApp-delete-temp-file-entry" description="jsonws-DLApp-delete-temp-file-entry" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DLApp.delete-temp-file-entry4">Liferay.Service(
	'/dlapp/delete-temp-file-entry',
	{
		groupId:${groupId},
		folderId:${folderId},
		fileName:${fileName},
		tempFolderName:${tempFolderName}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DLApp-get-file-entries" description="jsonws-DLApp-get-file-entries" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DLApp.get-file-entries2">Liferay.Service(
	'/dlapp/get-file-entries',
	{
		repositoryId:${repositoryId},
		folderId:${folderId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DLApp-get-file-entries" description="jsonws-DLApp-get-file-entries" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DLApp.get-file-entries3">Liferay.Service(
	'/dlapp/get-file-entries',
	{
		repositoryId:${repositoryId},
		folderId:${folderId},
		fileEntryTypeId:${fileEntryTypeId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DLApp-get-file-entries" description="jsonws-DLApp-get-file-entries" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DLApp.get-file-entries3">Liferay.Service(
	'/dlapp/get-file-entries',
	{
		repositoryId:${repositoryId},
		folderId:${folderId},
		mimeTypes:${mimeTypes}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DLApp-get-file-entries" description="jsonws-DLApp-get-file-entries" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DLApp.get-file-entries4">Liferay.Service(
	'/dlapp/get-file-entries',
	{
		repositoryId:${repositoryId},
		folderId:${folderId},
		start:${start},
		end:${end}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DLApp-get-file-entries" description="jsonws-DLApp-get-file-entries" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DLApp.get-file-entries5">Liferay.Service(
	'/dlapp/get-file-entries',
	{
		repositoryId:${repositoryId},
		folderId:${folderId},
		fileEntryTypeId:${fileEntryTypeId},
		start:${start},
		end:${end}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DLApp-get-file-entries" description="jsonws-DLApp-get-file-entries" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DLApp.get-file-entries5">Liferay.Service(
	'/dlapp/get-file-entries',
	{
		repositoryId:${repositoryId},
		folderId:${folderId},
		start:${start},
		end:${end},
		obc:${obc}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DLApp-get-file-entries" description="jsonws-DLApp-get-file-entries" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DLApp.get-file-entries6">Liferay.Service(
	'/dlapp/get-file-entries',
	{
		repositoryId:${repositoryId},
		folderId:${folderId},
		fileEntryTypeId:${fileEntryTypeId},
		start:${start},
		end:${end},
		obc:${obc}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DLApp-get-file-entries-and-file-shortcuts" description="jsonws-DLApp-get-file-entries-and-file-shortcuts" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DLApp.get-file-entries-and-file-shortcuts5">Liferay.Service(
	'/dlapp/get-file-entries-and-file-shortcuts',
	{
		repositoryId:${repositoryId},
		folderId:${folderId},
		status:${status},
		start:${start},
		end:${end}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DLApp-get-file-entries-and-file-shortcuts-count" description="jsonws-DLApp-get-file-entries-and-file-shortcuts-count" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DLApp.get-file-entries-and-file-shortcuts-count3">Liferay.Service(
	'/dlapp/get-file-entries-and-file-shortcuts-count',
	{
		repositoryId:${repositoryId},
		folderId:${folderId},
		status:${status}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DLApp-get-file-entries-and-file-shortcuts-count" description="jsonws-DLApp-get-file-entries-and-file-shortcuts-count" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DLApp.get-file-entries-and-file-shortcuts-count4">Liferay.Service(
	'/dlapp/get-file-entries-and-file-shortcuts-count',
	{
		repositoryId:${repositoryId},
		folderId:${folderId},
		status:${status},
		mimeTypes:${mimeTypes}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DLApp-get-file-entries-count" description="jsonws-DLApp-get-file-entries-count" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DLApp.get-file-entries-count2">Liferay.Service(
	'/dlapp/get-file-entries-count',
	{
		repositoryId:${repositoryId},
		folderId:${folderId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DLApp-get-file-entries-count" description="jsonws-DLApp-get-file-entries-count" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DLApp.get-file-entries-count3">Liferay.Service(
	'/dlapp/get-file-entries-count',
	{
		repositoryId:${repositoryId},
		folderId:${folderId},
		fileEntryTypeId:${fileEntryTypeId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DLApp-get-file-entry" description="jsonws-DLApp-get-file-entry" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DLApp.get-file-entry1">Liferay.Service(
	'/dlapp/get-file-entry',
	{
		fileEntryId:${fileEntryId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DLApp-get-file-entry" description="jsonws-DLApp-get-file-entry" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DLApp.get-file-entry3">Liferay.Service(
	'/dlapp/get-file-entry',
	{
		groupId:${groupId},
		folderId:${folderId},
		title:${title}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DLApp-get-file-entry-by-uuid-and-group-id" description="jsonws-DLApp-get-file-entry-by-uuid-and-group-id" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DLApp.get-file-entry-by-uuid-and-group-id2">Liferay.Service(
	'/dlapp/get-file-entry-by-uuid-and-group-id',
	{
		uuid:${uuid},
		groupId:${groupId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DLApp-get-file-shortcut" description="jsonws-DLApp-get-file-shortcut" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DLApp.get-file-shortcut1">Liferay.Service(
	'/dlapp/get-file-shortcut',
	{
		fileShortcutId:${fileShortcutId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DLApp-get-folder" description="jsonws-DLApp-get-folder" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DLApp.get-folder1">Liferay.Service(
	'/dlapp/get-folder',
	{
		folderId:${folderId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DLApp-get-folder" description="jsonws-DLApp-get-folder" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DLApp.get-folder3">Liferay.Service(
	'/dlapp/get-folder',
	{
		repositoryId:${repositoryId},
		parentFolderId:${parentFolderId},
		name:${name}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DLApp-get-folders" description="jsonws-DLApp-get-folders" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DLApp.get-folders2">Liferay.Service(
	'/dlapp/get-folders',
	{
		repositoryId:${repositoryId},
		parentFolderId:${parentFolderId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DLApp-get-folders" description="jsonws-DLApp-get-folders" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DLApp.get-folders3">Liferay.Service(
	'/dlapp/get-folders',
	{
		repositoryId:${repositoryId},
		parentFolderId:${parentFolderId},
		includeMountFolders:${includeMountFolders}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DLApp-get-folders" description="jsonws-DLApp-get-folders" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DLApp.get-folders4">Liferay.Service(
	'/dlapp/get-folders',
	{
		repositoryId:${repositoryId},
		parentFolderId:${parentFolderId},
		start:${start},
		end:${end}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DLApp-get-folders" description="jsonws-DLApp-get-folders" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DLApp.get-folders5">Liferay.Service(
	'/dlapp/get-folders',
	{
		repositoryId:${repositoryId},
		parentFolderId:${parentFolderId},
		includeMountFolders:${includeMountFolders},
		start:${start},
		end:${end}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DLApp-get-folders" description="jsonws-DLApp-get-folders" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DLApp.get-folders5">Liferay.Service(
	'/dlapp/get-folders',
	{
		repositoryId:${repositoryId},
		parentFolderId:${parentFolderId},
		start:${start},
		end:${end},
		obc:${obc}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DLApp-get-folders" description="jsonws-DLApp-get-folders" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DLApp.get-folders6">Liferay.Service(
	'/dlapp/get-folders',
	{
		repositoryId:${repositoryId},
		parentFolderId:${parentFolderId},
		includeMountFolders:${includeMountFolders},
		start:${start},
		end:${end},
		obc:${obc}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DLApp-get-folders" description="jsonws-DLApp-get-folders" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DLApp.get-folders7">Liferay.Service(
	'/dlapp/get-folders',
	{
		repositoryId:${repositoryId},
		parentFolderId:${parentFolderId},
		status:${status},
		includeMountFolders:${includeMountFolders},
		start:${start},
		end:${end},
		obc:${obc}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DLApp-get-folders-and-file-entries-and-file-shortcuts" description="jsonws-DLApp-get-folders-and-file-entries-and-file-shortcuts" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DLApp.get-folders-and-file-entries-and-file-shortcuts6">Liferay.Service(
	'/dlapp/get-folders-and-file-entries-and-file-shortcuts',
	{
		repositoryId:${repositoryId},
		folderId:${folderId},
		status:${status},
		includeMountFolders:${includeMountFolders},
		start:${start},
		end:${end}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DLApp-get-folders-and-file-entries-and-file-shortcuts" description="jsonws-DLApp-get-folders-and-file-entries-and-file-shortcuts" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DLApp.get-folders-and-file-entries-and-file-shortcuts7">Liferay.Service(
	'/dlapp/get-folders-and-file-entries-and-file-shortcuts',
	{
		repositoryId:${repositoryId},
		folderId:${folderId},
		status:${status},
		includeMountFolders:${includeMountFolders},
		start:${start},
		end:${end},
		obc:${obc}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DLApp-get-folders-and-file-entries-and-file-shortcuts" description="jsonws-DLApp-get-folders-and-file-entries-and-file-shortcuts" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DLApp.get-folders-and-file-entries-and-file-shortcuts8">Liferay.Service(
	'/dlapp/get-folders-and-file-entries-and-file-shortcuts',
	{
		repositoryId:${repositoryId},
		folderId:${folderId},
		status:${status},
		mimeTypes:${mimeTypes},
		includeMountFolders:${includeMountFolders},
		start:${start},
		end:${end},
		obc:${obc}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DLApp-get-folders-and-file-entries-and-file-shortcuts-count" description="jsonws-DLApp-get-folders-and-file-entries-and-file-shortcuts-count" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DLApp.get-folders-and-file-entries-and-file-shortcuts-count4">Liferay.Service(
	'/dlapp/get-folders-and-file-entries-and-file-shortcuts-count',
	{
		repositoryId:${repositoryId},
		folderId:${folderId},
		status:${status},
		includeMountFolders:${includeMountFolders}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DLApp-get-folders-and-file-entries-and-file-shortcuts-count" description="jsonws-DLApp-get-folders-and-file-entries-and-file-shortcuts-count" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DLApp.get-folders-and-file-entries-and-file-shortcuts-count5">Liferay.Service(
	'/dlapp/get-folders-and-file-entries-and-file-shortcuts-count',
	{
		repositoryId:${repositoryId},
		folderId:${folderId},
		status:${status},
		mimeTypes:${mimeTypes},
		includeMountFolders:${includeMountFolders}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DLApp-get-folders-count" description="jsonws-DLApp-get-folders-count" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DLApp.get-folders-count2">Liferay.Service(
	'/dlapp/get-folders-count',
	{
		repositoryId:${repositoryId},
		parentFolderId:${parentFolderId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DLApp-get-folders-count" description="jsonws-DLApp-get-folders-count" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DLApp.get-folders-count3">Liferay.Service(
	'/dlapp/get-folders-count',
	{
		repositoryId:${repositoryId},
		parentFolderId:${parentFolderId},
		includeMountFolders:${includeMountFolders}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DLApp-get-folders-count" description="jsonws-DLApp-get-folders-count" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DLApp.get-folders-count4">Liferay.Service(
	'/dlapp/get-folders-count',
	{
		repositoryId:${repositoryId},
		parentFolderId:${parentFolderId},
		status:${status},
		includeMountFolders:${includeMountFolders}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DLApp-get-folders-file-entries-count" description="jsonws-DLApp-get-folders-file-entries-count" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DLApp.get-folders-file-entries-count3">Liferay.Service(
	'/dlapp/get-folders-file-entries-count',
	{
		repositoryId:${repositoryId},
		folderIds:${folderIds},
		status:${status}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DLApp-get-group-file-entries" description="jsonws-DLApp-get-group-file-entries" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DLApp.get-group-file-entries4">Liferay.Service(
	'/dlapp/get-group-file-entries',
	{
		groupId:${groupId},
		userId:${userId},
		start:${start},
		end:${end}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DLApp-get-group-file-entries" description="jsonws-DLApp-get-group-file-entries" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DLApp.get-group-file-entries5">Liferay.Service(
	'/dlapp/get-group-file-entries',
	{
		groupId:${groupId},
		userId:${userId},
		rootFolderId:${rootFolderId},
		start:${start},
		end:${end}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DLApp-get-group-file-entries" description="jsonws-DLApp-get-group-file-entries" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DLApp.get-group-file-entries5">Liferay.Service(
	'/dlapp/get-group-file-entries',
	{
		groupId:${groupId},
		userId:${userId},
		start:${start},
		end:${end},
		obc:${obc}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DLApp-get-group-file-entries" description="jsonws-DLApp-get-group-file-entries" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DLApp.get-group-file-entries6">Liferay.Service(
	'/dlapp/get-group-file-entries',
	{
		groupId:${groupId},
		userId:${userId},
		rootFolderId:${rootFolderId},
		start:${start},
		end:${end},
		obc:${obc}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DLApp-get-group-file-entries" description="jsonws-DLApp-get-group-file-entries" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DLApp.get-group-file-entries8">Liferay.Service(
	'/dlapp/get-group-file-entries',
	{
		groupId:${groupId},
		userId:${userId},
		rootFolderId:${rootFolderId},
		mimeTypes:${mimeTypes},
		status:${status},
		start:${start},
		end:${end},
		obc:${obc}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DLApp-get-group-file-entries-count" description="jsonws-DLApp-get-group-file-entries-count" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DLApp.get-group-file-entries-count2">Liferay.Service(
	'/dlapp/get-group-file-entries-count',
	{
		groupId:${groupId},
		userId:${userId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DLApp-get-group-file-entries-count" description="jsonws-DLApp-get-group-file-entries-count" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DLApp.get-group-file-entries-count3">Liferay.Service(
	'/dlapp/get-group-file-entries-count',
	{
		groupId:${groupId},
		userId:${userId},
		rootFolderId:${rootFolderId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DLApp-get-group-file-entries-count" description="jsonws-DLApp-get-group-file-entries-count" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DLApp.get-group-file-entries-count5">Liferay.Service(
	'/dlapp/get-group-file-entries-count',
	{
		groupId:${groupId},
		userId:${userId},
		rootFolderId:${rootFolderId},
		mimeTypes:${mimeTypes},
		status:${status}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DLApp-get-mount-folders" description="jsonws-DLApp-get-mount-folders" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DLApp.get-mount-folders2">Liferay.Service(
	'/dlapp/get-mount-folders',
	{
		repositoryId:${repositoryId},
		parentFolderId:${parentFolderId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DLApp-get-mount-folders" description="jsonws-DLApp-get-mount-folders" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DLApp.get-mount-folders4">Liferay.Service(
	'/dlapp/get-mount-folders',
	{
		repositoryId:${repositoryId},
		parentFolderId:${parentFolderId},
		start:${start},
		end:${end}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DLApp-get-mount-folders" description="jsonws-DLApp-get-mount-folders" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DLApp.get-mount-folders5">Liferay.Service(
	'/dlapp/get-mount-folders',
	{
		repositoryId:${repositoryId},
		parentFolderId:${parentFolderId},
		start:${start},
		end:${end},
		obc:${obc}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DLApp-get-mount-folders-count" description="jsonws-DLApp-get-mount-folders-count" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DLApp.get-mount-folders-count2">Liferay.Service(
	'/dlapp/get-mount-folders-count',
	{
		repositoryId:${repositoryId},
		parentFolderId:${parentFolderId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DLApp-get-subfolder-ids" description="jsonws-DLApp-get-subfolder-ids" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DLApp.get-subfolder-ids2">Liferay.Service(
	'/dlapp/get-subfolder-ids',
	{
		repositoryId:${repositoryId},
		folderId:${folderId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DLApp-get-subfolder-ids" description="jsonws-DLApp-get-subfolder-ids" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DLApp.get-subfolder-ids3">Liferay.Service(
	'/dlapp/get-subfolder-ids',
	{
		repositoryId:${repositoryId},
		folderId:${folderId},
		recurse:${recurse}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DLApp-get-subfolder-ids" description="jsonws-DLApp-get-subfolder-ids" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DLApp.get-subfolder-ids3">Liferay.Service(
	'/dlapp/get-subfolder-ids',
	{
		repositoryId:${repositoryId},
		folderIds:${folderIds},
		folderId:${folderId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DLApp-get-temp-file-entry-names" description="jsonws-DLApp-get-temp-file-entry-names" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DLApp.get-temp-file-entry-names3">Liferay.Service(
	'/dlapp/get-temp-file-entry-names',
	{
		groupId:${groupId},
		folderId:${folderId},
		tempFolderName:${tempFolderName}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DLApp-lock-file-entry" description="jsonws-DLApp-lock-file-entry" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DLApp.lock-file-entry1">Liferay.Service(
	'/dlapp/lock-file-entry',
	{
		fileEntryId:${fileEntryId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DLApp-lock-file-entry" description="jsonws-DLApp-lock-file-entry" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DLApp.lock-file-entry3">Liferay.Service(
	'/dlapp/lock-file-entry',
	{
		fileEntryId:${fileEntryId},
		owner:${owner},
		expirationTime:${expirationTime}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DLApp-lock-folder" description="jsonws-DLApp-lock-folder" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DLApp.lock-folder2">Liferay.Service(
	'/dlapp/lock-folder',
	{
		repositoryId:${repositoryId},
		folderId:${folderId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DLApp-lock-folder" description="jsonws-DLApp-lock-folder" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DLApp.lock-folder5">Liferay.Service(
	'/dlapp/lock-folder',
	{
		repositoryId:${repositoryId},
		folderId:${folderId},
		owner:${owner},
		inheritable:${inheritable},
		expirationTime:${expirationTime}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DLApp-move-file-entry" description="jsonws-DLApp-move-file-entry" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DLApp.move-file-entry3">Liferay.Service(
	'/dlapp/move-file-entry',
	{
		fileEntryId:${fileEntryId},
		newFolderId:${newFolderId},
		serviceContext:${serviceContext}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DLApp-move-file-entry-from-trash" description="jsonws-DLApp-move-file-entry-from-trash" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DLApp.move-file-entry-from-trash3">Liferay.Service(
	'/dlapp/move-file-entry-from-trash',
	{
		fileEntryId:${fileEntryId},
		newFolderId:${newFolderId},
		serviceContext:${serviceContext}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DLApp-move-file-entry-to-trash" description="jsonws-DLApp-move-file-entry-to-trash" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DLApp.move-file-entry-to-trash1">Liferay.Service(
	'/dlapp/move-file-entry-to-trash',
	{
		fileEntryId:${fileEntryId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DLApp-move-file-shortcut-from-trash" description="jsonws-DLApp-move-file-shortcut-from-trash" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DLApp.move-file-shortcut-from-trash3">Liferay.Service(
	'/dlapp/move-file-shortcut-from-trash',
	{
		fileShortcutId:${fileShortcutId},
		newFolderId:${newFolderId},
		serviceContext:${serviceContext}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DLApp-move-file-shortcut-to-trash" description="jsonws-DLApp-move-file-shortcut-to-trash" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DLApp.move-file-shortcut-to-trash1">Liferay.Service(
	'/dlapp/move-file-shortcut-to-trash',
	{
		fileShortcutId:${fileShortcutId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DLApp-move-folder" description="jsonws-DLApp-move-folder" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DLApp.move-folder3">Liferay.Service(
	'/dlapp/move-folder',
	{
		folderId:${folderId},
		parentFolderId:${parentFolderId},
		serviceContext:${serviceContext}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DLApp-move-folder-from-trash" description="jsonws-DLApp-move-folder-from-trash" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DLApp.move-folder-from-trash3">Liferay.Service(
	'/dlapp/move-folder-from-trash',
	{
		folderId:${folderId},
		parentFolderId:${parentFolderId},
		serviceContext:${serviceContext}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DLApp-move-folder-to-trash" description="jsonws-DLApp-move-folder-to-trash" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DLApp.move-folder-to-trash1">Liferay.Service(
	'/dlapp/move-folder-to-trash',
	{
		folderId:${folderId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DLApp-refresh-file-entry-lock" description="jsonws-DLApp-refresh-file-entry-lock" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DLApp.refresh-file-entry-lock3">Liferay.Service(
	'/dlapp/refresh-file-entry-lock',
	{
		lockUuid:${lockUuid},
		companyId:${companyId},
		expirationTime:${expirationTime}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DLApp-refresh-folder-lock" description="jsonws-DLApp-refresh-folder-lock" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DLApp.refresh-folder-lock3">Liferay.Service(
	'/dlapp/refresh-folder-lock',
	{
		lockUuid:${lockUuid},
		companyId:${companyId},
		expirationTime:${expirationTime}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DLApp-restore-file-entry-from-trash" description="jsonws-DLApp-restore-file-entry-from-trash" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DLApp.restore-file-entry-from-trash1">Liferay.Service(
	'/dlapp/restore-file-entry-from-trash',
	{
		fileEntryId:${fileEntryId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DLApp-restore-file-shortcut-from-trash" description="jsonws-DLApp-restore-file-shortcut-from-trash" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DLApp.restore-file-shortcut-from-trash1">Liferay.Service(
	'/dlapp/restore-file-shortcut-from-trash',
	{
		fileShortcutId:${fileShortcutId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DLApp-restore-folder-from-trash" description="jsonws-DLApp-restore-folder-from-trash" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DLApp.restore-folder-from-trash1">Liferay.Service(
	'/dlapp/restore-folder-from-trash',
	{
		folderId:${folderId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DLApp-revert-file-entry" description="jsonws-DLApp-revert-file-entry" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DLApp.revert-file-entry3">Liferay.Service(
	'/dlapp/revert-file-entry',
	{
		fileEntryId:${fileEntryId},
		version:${version},
		serviceContext:${serviceContext}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DLApp-search" description="jsonws-DLApp-search" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DLApp.search2">Liferay.Service(
	'/dlapp/search',
	{
		repositoryId:${repositoryId},
		searchContext:${searchContext}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DLApp-search" description="jsonws-DLApp-search" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DLApp.search3">Liferay.Service(
	'/dlapp/search',
	{
		repositoryId:${repositoryId},
		searchContext:${searchContext},
		query:${query}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DLApp-search" description="jsonws-DLApp-search" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DLApp.search5">Liferay.Service(
	'/dlapp/search',
	{
		repositoryId:${repositoryId},
		creatorUserId:${creatorUserId},
		status:${status},
		start:${start},
		end:${end}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DLApp-search" description="jsonws-DLApp-search" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DLApp.search7">Liferay.Service(
	'/dlapp/search',
	{
		repositoryId:${repositoryId},
		creatorUserId:${creatorUserId},
		folderId:${folderId},
		mimeTypes:${mimeTypes},
		status:${status},
		start:${start},
		end:${end}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DLApp-subscribe-file-entry-type" description="jsonws-DLApp-subscribe-file-entry-type" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DLApp.subscribe-file-entry-type2">Liferay.Service(
	'/dlapp/subscribe-file-entry-type',
	{
		groupId:${groupId},
		fileEntryTypeId:${fileEntryTypeId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DLApp-subscribe-folder" description="jsonws-DLApp-subscribe-folder" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DLApp.subscribe-folder2">Liferay.Service(
	'/dlapp/subscribe-folder',
	{
		groupId:${groupId},
		folderId:${folderId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DLApp-unlock-file-entry" description="jsonws-DLApp-unlock-file-entry" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DLApp.unlock-file-entry1">Liferay.Service(
	'/dlapp/unlock-file-entry',
	{
		fileEntryId:${fileEntryId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DLApp-unlock-file-entry" description="jsonws-DLApp-unlock-file-entry" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DLApp.unlock-file-entry2">Liferay.Service(
	'/dlapp/unlock-file-entry',
	{
		fileEntryId:${fileEntryId},
		lockUuid:${lockUuid}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DLApp-unlock-folder" description="jsonws-DLApp-unlock-folder" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DLApp.unlock-folder3">Liferay.Service(
	'/dlapp/unlock-folder',
	{
		repositoryId:${repositoryId},
		folderId:${folderId},
		lockUuid:${lockUuid}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DLApp-unlock-folder" description="jsonws-DLApp-unlock-folder" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DLApp.unlock-folder4">Liferay.Service(
	'/dlapp/unlock-folder',
	{
		repositoryId:${repositoryId},
		parentFolderId:${parentFolderId},
		name:${name},
		lockUuid:${lockUuid}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DLApp-unsubscribe-file-entry-type" description="jsonws-DLApp-unsubscribe-file-entry-type" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DLApp.unsubscribe-file-entry-type2">Liferay.Service(
	'/dlapp/unsubscribe-file-entry-type',
	{
		groupId:${groupId},
		fileEntryTypeId:${fileEntryTypeId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DLApp-unsubscribe-folder" description="jsonws-DLApp-unsubscribe-folder" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DLApp.unsubscribe-folder2">Liferay.Service(
	'/dlapp/unsubscribe-folder',
	{
		groupId:${groupId},
		folderId:${folderId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DLApp-update-file-entry" description="jsonws-DLApp-update-file-entry" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DLApp.update-file-entry9">Liferay.Service(
	'/dlapp/update-file-entry',
	{
		fileEntryId:${fileEntryId},
		sourceFileName:${sourceFileName},
		mimeType:${mimeType},
		title:${title},
		description:${description},
		changeLog:${changeLog},
		majorVersion:${majorVersion},
		bytes:${bytes},
		serviceContext:${serviceContext}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DLApp-update-file-entry" description="jsonws-DLApp-update-file-entry" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DLApp.update-file-entry9">Liferay.Service(
	'/dlapp/update-file-entry',
	{
		fileEntryId:${fileEntryId},
		sourceFileName:${sourceFileName},
		mimeType:${mimeType},
		title:${title},
		description:${description},
		changeLog:${changeLog},
		majorVersion:${majorVersion},
		file:${file},
		serviceContext:${serviceContext}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DLApp-update-file-entry-and-check-in" description="jsonws-DLApp-update-file-entry-and-check-in" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DLApp.update-file-entry-and-check-in9">Liferay.Service(
	'/dlapp/update-file-entry-and-check-in',
	{
		fileEntryId:${fileEntryId},
		sourceFileName:${sourceFileName},
		mimeType:${mimeType},
		title:${title},
		description:${description},
		changeLog:${changeLog},
		majorVersion:${majorVersion},
		file:${file},
		serviceContext:${serviceContext}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DLApp-update-file-shortcut" description="jsonws-DLApp-update-file-shortcut" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DLApp.update-file-shortcut4">Liferay.Service(
	'/dlapp/update-file-shortcut',
	{
		fileShortcutId:${fileShortcutId},
		folderId:${folderId},
		toFileEntryId:${toFileEntryId},
		serviceContext:${serviceContext}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DLApp-update-folder" description="jsonws-DLApp-update-folder" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DLApp.update-folder4">Liferay.Service(
	'/dlapp/update-folder',
	{
		folderId:${folderId},
		name:${name},
		description:${description},
		serviceContext:${serviceContext}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DLApp-verify-file-entry-check-out" description="jsonws-DLApp-verify-file-entry-check-out" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DLApp.verify-file-entry-check-out3">Liferay.Service(
	'/dlapp/verify-file-entry-check-out',
	{
		repositoryId:${repositoryId},
		fileEntryId:${fileEntryId},
		lockUuid:${lockUuid}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DLApp-verify-file-entry-lock" description="jsonws-DLApp-verify-file-entry-lock" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DLApp.verify-file-entry-lock3">Liferay.Service(
	'/dlapp/verify-file-entry-lock',
	{
		repositoryId:${repositoryId},
		fileEntryId:${fileEntryId},
		lockUuid:${lockUuid}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DLApp-verify-inheritable-lock" description="jsonws-DLApp-verify-inheritable-lock" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DLApp.verify-inheritable-lock3">Liferay.Service(
	'/dlapp/verify-inheritable-lock',
	{
		repositoryId:${repositoryId},
		folderId:${folderId},
		lockUuid:${lockUuid}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DLFileEntry-cancel-check-out" description="jsonws-DLFileEntry-cancel-check-out" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DLFileEntry.cancel-check-out1">Liferay.Service(
	'/dlfileentry/cancel-check-out',
	{
		fileEntryId:${fileEntryId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DLFileEntry-check-in-file-entry" description="jsonws-DLFileEntry-check-in-file-entry" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DLFileEntry.check-in-file-entry2">Liferay.Service(
	'/dlfileentry/check-in-file-entry',
	{
		fileEntryId:${fileEntryId},
		lockUuid:${lockUuid}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DLFileEntry-check-in-file-entry" description="jsonws-DLFileEntry-check-in-file-entry" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DLFileEntry.check-in-file-entry3">Liferay.Service(
	'/dlfileentry/check-in-file-entry',
	{
		fileEntryId:${fileEntryId},
		lockUuid:${lockUuid},
		serviceContext:${serviceContext}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DLFileEntry-check-in-file-entry" description="jsonws-DLFileEntry-check-in-file-entry" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DLFileEntry.check-in-file-entry4">Liferay.Service(
	'/dlfileentry/check-in-file-entry',
	{
		fileEntryId:${fileEntryId},
		major:${major},
		changeLog:${changeLog},
		serviceContext:${serviceContext}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DLFileEntry-check-out-file-entry" description="jsonws-DLFileEntry-check-out-file-entry" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DLFileEntry.check-out-file-entry1">Liferay.Service(
	'/dlfileentry/check-out-file-entry',
	{
		fileEntryId:${fileEntryId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DLFileEntry-check-out-file-entry" description="jsonws-DLFileEntry-check-out-file-entry" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DLFileEntry.check-out-file-entry2">Liferay.Service(
	'/dlfileentry/check-out-file-entry',
	{
		fileEntryId:${fileEntryId},
		serviceContext:${serviceContext}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DLFileEntry-check-out-file-entry" description="jsonws-DLFileEntry-check-out-file-entry" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DLFileEntry.check-out-file-entry3">Liferay.Service(
	'/dlfileentry/check-out-file-entry',
	{
		fileEntryId:${fileEntryId},
		owner:${owner},
		expirationTime:${expirationTime}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DLFileEntry-check-out-file-entry" description="jsonws-DLFileEntry-check-out-file-entry" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DLFileEntry.check-out-file-entry4">Liferay.Service(
	'/dlfileentry/check-out-file-entry',
	{
		fileEntryId:${fileEntryId},
		owner:${owner},
		expirationTime:${expirationTime},
		serviceContext:${serviceContext}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DLFileEntry-copy-file-entry" description="jsonws-DLFileEntry-copy-file-entry" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DLFileEntry.copy-file-entry5">Liferay.Service(
	'/dlfileentry/copy-file-entry',
	{
		groupId:${groupId},
		repositoryId:${repositoryId},
		fileEntryId:${fileEntryId},
		destFolderId:${destFolderId},
		serviceContext:${serviceContext}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DLFileEntry-delete-file-entry" description="jsonws-DLFileEntry-delete-file-entry" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DLFileEntry.delete-file-entry1">Liferay.Service(
	'/dlfileentry/delete-file-entry',
	{
		fileEntryId:${fileEntryId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DLFileEntry-delete-file-entry" description="jsonws-DLFileEntry-delete-file-entry" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DLFileEntry.delete-file-entry3">Liferay.Service(
	'/dlfileentry/delete-file-entry',
	{
		groupId:${groupId},
		folderId:${folderId},
		title:${title}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DLFileEntry-delete-file-version" description="jsonws-DLFileEntry-delete-file-version" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DLFileEntry.delete-file-version2">Liferay.Service(
	'/dlfileentry/delete-file-version',
	{
		fileEntryId:${fileEntryId},
		version:${version}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DLFileEntry-fetch-file-entry-by-image-id" description="jsonws-DLFileEntry-fetch-file-entry-by-image-id" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DLFileEntry.fetch-file-entry-by-image-id1">Liferay.Service(
	'/dlfileentry/fetch-file-entry-by-image-id',
	{
		imageId:${imageId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DLFileEntry-get-file-entries" description="jsonws-DLFileEntry-get-file-entries" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DLFileEntry.get-file-entries5">Liferay.Service(
	'/dlfileentry/get-file-entries',
	{
		groupId:${groupId},
		folderId:${folderId},
		start:${start},
		end:${end},
		obc:${obc}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DLFileEntry-get-file-entries" description="jsonws-DLFileEntry-get-file-entries" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DLFileEntry.get-file-entries6">Liferay.Service(
	'/dlfileentry/get-file-entries',
	{
		groupId:${groupId},
		folderId:${folderId},
		fileEntryTypeId:${fileEntryTypeId},
		start:${start},
		end:${end},
		obc:${obc}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DLFileEntry-get-file-entries" description="jsonws-DLFileEntry-get-file-entries" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DLFileEntry.get-file-entries6">Liferay.Service(
	'/dlfileentry/get-file-entries',
	{
		groupId:${groupId},
		folderId:${folderId},
		mimeTypes:${mimeTypes},
		start:${start},
		end:${end},
		obc:${obc}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DLFileEntry-get-file-entries" description="jsonws-DLFileEntry-get-file-entries" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DLFileEntry.get-file-entries6">Liferay.Service(
	'/dlfileentry/get-file-entries',
	{
		groupId:${groupId},
		folderId:${folderId},
		status:${status},
		start:${start},
		end:${end},
		obc:${obc}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DLFileEntry-get-file-entries-count" description="jsonws-DLFileEntry-get-file-entries-count" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DLFileEntry.get-file-entries-count2">Liferay.Service(
	'/dlfileentry/get-file-entries-count',
	{
		groupId:${groupId},
		folderId:${folderId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DLFileEntry-get-file-entries-count" description="jsonws-DLFileEntry-get-file-entries-count" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DLFileEntry.get-file-entries-count3">Liferay.Service(
	'/dlfileentry/get-file-entries-count',
	{
		groupId:${groupId},
		folderId:${folderId},
		fileEntryTypeId:${fileEntryTypeId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DLFileEntry-get-file-entries-count" description="jsonws-DLFileEntry-get-file-entries-count" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DLFileEntry.get-file-entries-count3">Liferay.Service(
	'/dlfileentry/get-file-entries-count',
	{
		groupId:${groupId},
		folderId:${folderId},
		mimeTypes:${mimeTypes}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DLFileEntry-get-file-entries-count" description="jsonws-DLFileEntry-get-file-entries-count" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DLFileEntry.get-file-entries-count3">Liferay.Service(
	'/dlfileentry/get-file-entries-count',
	{
		groupId:${groupId},
		folderId:${folderId},
		status:${status}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DLFileEntry-get-file-entry" description="jsonws-DLFileEntry-get-file-entry" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DLFileEntry.get-file-entry1">Liferay.Service(
	'/dlfileentry/get-file-entry',
	{
		fileEntryId:${fileEntryId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DLFileEntry-get-file-entry" description="jsonws-DLFileEntry-get-file-entry" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DLFileEntry.get-file-entry3">Liferay.Service(
	'/dlfileentry/get-file-entry',
	{
		groupId:${groupId},
		folderId:${folderId},
		title:${title}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DLFileEntry-get-file-entry-by-uuid-and-group-id" description="jsonws-DLFileEntry-get-file-entry-by-uuid-and-group-id" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DLFileEntry.get-file-entry-by-uuid-and-group-id2">Liferay.Service(
	'/dlfileentry/get-file-entry-by-uuid-and-group-id',
	{
		uuid:${uuid},
		groupId:${groupId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DLFileEntry-get-file-entry-lock" description="jsonws-DLFileEntry-get-file-entry-lock" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DLFileEntry.get-file-entry-lock1">Liferay.Service(
	'/dlfileentry/get-file-entry-lock',
	{
		fileEntryId:${fileEntryId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DLFileEntry-get-folders-file-entries-count" description="jsonws-DLFileEntry-get-folders-file-entries-count" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DLFileEntry.get-folders-file-entries-count3">Liferay.Service(
	'/dlfileentry/get-folders-file-entries-count',
	{
		groupId:${groupId},
		folderIds:${folderIds},
		status:${status}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DLFileEntry-get-group-file-entries" description="jsonws-DLFileEntry-get-group-file-entries" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DLFileEntry.get-group-file-entries6">Liferay.Service(
	'/dlfileentry/get-group-file-entries',
	{
		groupId:${groupId},
		userId:${userId},
		rootFolderId:${rootFolderId},
		start:${start},
		end:${end},
		obc:${obc}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DLFileEntry-get-group-file-entries" description="jsonws-DLFileEntry-get-group-file-entries" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DLFileEntry.get-group-file-entries8">Liferay.Service(
	'/dlfileentry/get-group-file-entries',
	{
		groupId:${groupId},
		userId:${userId},
		rootFolderId:${rootFolderId},
		mimeTypes:${mimeTypes},
		status:${status},
		start:${start},
		end:${end},
		obc:${obc}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DLFileEntry-get-group-file-entries-count" description="jsonws-DLFileEntry-get-group-file-entries-count" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DLFileEntry.get-group-file-entries-count3">Liferay.Service(
	'/dlfileentry/get-group-file-entries-count',
	{
		groupId:${groupId},
		userId:${userId},
		rootFolderId:${rootFolderId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DLFileEntry-get-group-file-entries-count" description="jsonws-DLFileEntry-get-group-file-entries-count" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DLFileEntry.get-group-file-entries-count5">Liferay.Service(
	'/dlfileentry/get-group-file-entries-count',
	{
		groupId:${groupId},
		userId:${userId},
		rootFolderId:${rootFolderId},
		mimeTypes:${mimeTypes},
		status:${status}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DLFileEntry-has-file-entry-lock" description="jsonws-DLFileEntry-has-file-entry-lock" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DLFileEntry.has-file-entry-lock1">Liferay.Service(
	'/dlfileentry/has-file-entry-lock',
	{
		fileEntryId:${fileEntryId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DLFileEntry-is-file-entry-checked-out" description="jsonws-DLFileEntry-is-file-entry-checked-out" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DLFileEntry.is-file-entry-checked-out1">Liferay.Service(
	'/dlfileentry/is-file-entry-checked-out',
	{
		fileEntryId:${fileEntryId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DLFileEntry-move-file-entry" description="jsonws-DLFileEntry-move-file-entry" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DLFileEntry.move-file-entry3">Liferay.Service(
	'/dlfileentry/move-file-entry',
	{
		fileEntryId:${fileEntryId},
		newFolderId:${newFolderId},
		serviceContext:${serviceContext}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DLFileEntry-refresh-file-entry-lock" description="jsonws-DLFileEntry-refresh-file-entry-lock" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DLFileEntry.refresh-file-entry-lock3">Liferay.Service(
	'/dlfileentry/refresh-file-entry-lock',
	{
		lockUuid:${lockUuid},
		companyId:${companyId},
		expirationTime:${expirationTime}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DLFileEntry-revert-file-entry" description="jsonws-DLFileEntry-revert-file-entry" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DLFileEntry.revert-file-entry3">Liferay.Service(
	'/dlfileentry/revert-file-entry',
	{
		fileEntryId:${fileEntryId},
		version:${version},
		serviceContext:${serviceContext}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DLFileEntry-search" description="jsonws-DLFileEntry-search" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DLFileEntry.search5">Liferay.Service(
	'/dlfileentry/search',
	{
		groupId:${groupId},
		creatorUserId:${creatorUserId},
		status:${status},
		start:${start},
		end:${end}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DLFileEntry-search" description="jsonws-DLFileEntry-search" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DLFileEntry.search7">Liferay.Service(
	'/dlfileentry/search',
	{
		groupId:${groupId},
		creatorUserId:${creatorUserId},
		folderId:${folderId},
		mimeTypes:${mimeTypes},
		status:${status},
		start:${start},
		end:${end}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DLFileEntry-verify-file-entry-check-out" description="jsonws-DLFileEntry-verify-file-entry-check-out" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DLFileEntry.verify-file-entry-check-out2">Liferay.Service(
	'/dlfileentry/verify-file-entry-check-out',
	{
		fileEntryId:${fileEntryId},
		lockUuid:${lockUuid}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DLFileEntry-verify-file-entry-lock" description="jsonws-DLFileEntry-verify-file-entry-lock" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DLFileEntry.verify-file-entry-lock2">Liferay.Service(
	'/dlfileentry/verify-file-entry-lock',
	{
		fileEntryId:${fileEntryId},
		lockUuid:${lockUuid}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DLFileEntryType-add-file-entry-type" description="jsonws-DLFileEntryType-add-file-entry-type" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DLFileEntryType.add-file-entry-type5">Liferay.Service(
	'/dlfileentrytype/add-file-entry-type',
	{
		groupId:${groupId},
		name:${name},
		description:${description},
		ddmStructureIds:${ddmStructureIds},
		serviceContext:${serviceContext}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DLFileEntryType-add-file-entry-type" description="jsonws-DLFileEntryType-add-file-entry-type" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DLFileEntryType.add-file-entry-type6">Liferay.Service(
	'/dlfileentrytype/add-file-entry-type',
	{
		groupId:${groupId},
		fileEntryTypeKey:${fileEntryTypeKey},
		nameMap:${nameMap},
		descriptionMap:${descriptionMap},
		ddmStructureIds:${ddmStructureIds},
		serviceContext:${serviceContext}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DLFileEntryType-delete-file-entry-type" description="jsonws-DLFileEntryType-delete-file-entry-type" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DLFileEntryType.delete-file-entry-type1">Liferay.Service(
	'/dlfileentrytype/delete-file-entry-type',
	{
		fileEntryTypeId:${fileEntryTypeId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DLFileEntryType-get-file-entry-type" description="jsonws-DLFileEntryType-get-file-entry-type" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DLFileEntryType.get-file-entry-type1">Liferay.Service(
	'/dlfileentrytype/get-file-entry-type',
	{
		fileEntryTypeId:${fileEntryTypeId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DLFileEntryType-get-file-entry-types" description="jsonws-DLFileEntryType-get-file-entry-types" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DLFileEntryType.get-file-entry-types1">Liferay.Service(
	'/dlfileentrytype/get-file-entry-types',
	{
		groupIds:${groupIds}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DLFileEntryType-get-file-entry-types" description="jsonws-DLFileEntryType-get-file-entry-types" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DLFileEntryType.get-file-entry-types3">Liferay.Service(
	'/dlfileentrytype/get-file-entry-types',
	{
		groupIds:${groupIds},
		start:${start},
		end:${end}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DLFileEntryType-get-file-entry-types-count" description="jsonws-DLFileEntryType-get-file-entry-types-count" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DLFileEntryType.get-file-entry-types-count1">Liferay.Service(
	'/dlfileentrytype/get-file-entry-types-count',
	{
		groupIds:${groupIds}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DLFileEntryType-get-folder-file-entry-types" description="jsonws-DLFileEntryType-get-folder-file-entry-types" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DLFileEntryType.get-folder-file-entry-types3">Liferay.Service(
	'/dlfileentrytype/get-folder-file-entry-types',
	{
		groupIds:${groupIds},
		folderId:${folderId},
		inherited:${inherited}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DLFileEntryType-search" description="jsonws-DLFileEntryType-search" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DLFileEntryType.search7">Liferay.Service(
	'/dlfileentrytype/search',
	{
		companyId:${companyId},
		groupIds:${groupIds},
		keywords:${keywords},
		includeBasicFileEntryType:${includeBasicFileEntryType},
		start:${start},
		end:${end},
		orderByComparator:${orderByComparator}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DLFileEntryType-search-count" description="jsonws-DLFileEntryType-search-count" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DLFileEntryType.search-count4">Liferay.Service(
	'/dlfileentrytype/search-count',
	{
		companyId:${companyId},
		groupIds:${groupIds},
		keywords:${keywords},
		includeBasicFileEntryType:${includeBasicFileEntryType}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DLFileEntryType-update-file-entry-type" description="jsonws-DLFileEntryType-update-file-entry-type" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DLFileEntryType.update-file-entry-type5">Liferay.Service(
	'/dlfileentrytype/update-file-entry-type',
	{
		fileEntryTypeId:${fileEntryTypeId},
		name:${name},
		description:${description},
		ddmStructureIds:${ddmStructureIds},
		serviceContext:${serviceContext}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DLFileEntryType-update-file-entry-type" description="jsonws-DLFileEntryType-update-file-entry-type" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DLFileEntryType.update-file-entry-type5">Liferay.Service(
	'/dlfileentrytype/update-file-entry-type',
	{
		fileEntryTypeId:${fileEntryTypeId},
		nameMap:${nameMap},
		descriptionMap:${descriptionMap},
		ddmStructureIds:${ddmStructureIds},
		serviceContext:${serviceContext}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DLFileShortcut-add-file-shortcut" description="jsonws-DLFileShortcut-add-file-shortcut" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DLFileShortcut.add-file-shortcut4">Liferay.Service(
	'/dlfileshortcut/add-file-shortcut',
	{
		groupId:${groupId},
		folderId:${folderId},
		toFileEntryId:${toFileEntryId},
		serviceContext:${serviceContext}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DLFileShortcut-delete-file-shortcut" description="jsonws-DLFileShortcut-delete-file-shortcut" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DLFileShortcut.delete-file-shortcut1">Liferay.Service(
	'/dlfileshortcut/delete-file-shortcut',
	{
		fileShortcutId:${fileShortcutId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DLFileShortcut-get-file-shortcut" description="jsonws-DLFileShortcut-get-file-shortcut" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DLFileShortcut.get-file-shortcut1">Liferay.Service(
	'/dlfileshortcut/get-file-shortcut',
	{
		fileShortcutId:${fileShortcutId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DLFileShortcut-update-file-shortcut" description="jsonws-DLFileShortcut-update-file-shortcut" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DLFileShortcut.update-file-shortcut4">Liferay.Service(
	'/dlfileshortcut/update-file-shortcut',
	{
		fileShortcutId:${fileShortcutId},
		folderId:${folderId},
		toFileEntryId:${toFileEntryId},
		serviceContext:${serviceContext}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DLFileVersion-get-file-version" description="jsonws-DLFileVersion-get-file-version" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DLFileVersion.get-file-version1">Liferay.Service(
	'/dlfileversion/get-file-version',
	{
		fileVersionId:${fileVersionId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DLFileVersion-get-file-versions" description="jsonws-DLFileVersion-get-file-versions" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DLFileVersion.get-file-versions2">Liferay.Service(
	'/dlfileversion/get-file-versions',
	{
		fileEntryId:${fileEntryId},
		status:${status}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DLFileVersion-get-file-versions-count" description="jsonws-DLFileVersion-get-file-versions-count" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DLFileVersion.get-file-versions-count2">Liferay.Service(
	'/dlfileversion/get-file-versions-count',
	{
		fileEntryId:${fileEntryId},
		status:${status}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DLFileVersion-get-latest-file-version" description="jsonws-DLFileVersion-get-latest-file-version" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DLFileVersion.get-latest-file-version1">Liferay.Service(
	'/dlfileversion/get-latest-file-version',
	{
		fileEntryId:${fileEntryId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DLFolder-add-folder" description="jsonws-DLFolder-add-folder" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DLFolder.add-folder7">Liferay.Service(
	'/dlfolder/add-folder',
	{
		groupId:${groupId},
		repositoryId:${repositoryId},
		mountPoint:${mountPoint},
		parentFolderId:${parentFolderId},
		name:${name},
		description:${description},
		serviceContext:${serviceContext}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DLFolder-delete-folder" description="jsonws-DLFolder-delete-folder" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DLFolder.delete-folder1">Liferay.Service(
	'/dlfolder/delete-folder',
	{
		folderId:${folderId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DLFolder-delete-folder" description="jsonws-DLFolder-delete-folder" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DLFolder.delete-folder2">Liferay.Service(
	'/dlfolder/delete-folder',
	{
		folderId:${folderId},
		includeTrashedEntries:${includeTrashedEntries}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DLFolder-delete-folder" description="jsonws-DLFolder-delete-folder" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DLFolder.delete-folder3">Liferay.Service(
	'/dlfolder/delete-folder',
	{
		groupId:${groupId},
		parentFolderId:${parentFolderId},
		name:${name}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DLFolder-get-file-entries-and-file-shortcuts" description="jsonws-DLFolder-get-file-entries-and-file-shortcuts" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DLFolder.get-file-entries-and-file-shortcuts5">Liferay.Service(
	'/dlfolder/get-file-entries-and-file-shortcuts',
	{
		groupId:${groupId},
		folderId:${folderId},
		status:${status},
		start:${start},
		end:${end}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DLFolder-get-file-entries-and-file-shortcuts-count" description="jsonws-DLFolder-get-file-entries-and-file-shortcuts-count" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DLFolder.get-file-entries-and-file-shortcuts-count3">Liferay.Service(
	'/dlfolder/get-file-entries-and-file-shortcuts-count',
	{
		groupId:${groupId},
		folderId:${folderId},
		status:${status}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DLFolder-get-file-entries-and-file-shortcuts-count" description="jsonws-DLFolder-get-file-entries-and-file-shortcuts-count" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DLFolder.get-file-entries-and-file-shortcuts-count4">Liferay.Service(
	'/dlfolder/get-file-entries-and-file-shortcuts-count',
	{
		groupId:${groupId},
		folderId:${folderId},
		status:${status},
		mimeTypes:${mimeTypes}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DLFolder-get-folder" description="jsonws-DLFolder-get-folder" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DLFolder.get-folder1">Liferay.Service(
	'/dlfolder/get-folder',
	{
		folderId:${folderId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DLFolder-get-folder" description="jsonws-DLFolder-get-folder" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DLFolder.get-folder3">Liferay.Service(
	'/dlfolder/get-folder',
	{
		groupId:${groupId},
		parentFolderId:${parentFolderId},
		name:${name}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DLFolder-get-folder-ids" description="jsonws-DLFolder-get-folder-ids" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DLFolder.get-folder-ids2">Liferay.Service(
	'/dlfolder/get-folder-ids',
	{
		groupId:${groupId},
		folderId:${folderId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DLFolder-get-folders" description="jsonws-DLFolder-get-folders" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DLFolder.get-folders5">Liferay.Service(
	'/dlfolder/get-folders',
	{
		groupId:${groupId},
		parentFolderId:${parentFolderId},
		start:${start},
		end:${end},
		obc:${obc}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DLFolder-get-folders" description="jsonws-DLFolder-get-folders" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DLFolder.get-folders7">Liferay.Service(
	'/dlfolder/get-folders',
	{
		groupId:${groupId},
		parentFolderId:${parentFolderId},
		status:${status},
		includeMountfolders:${includeMountfolders},
		start:${start},
		end:${end},
		obc:${obc}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DLFolder-get-folders-and-file-entries-and-file-shortcuts" description="jsonws-DLFolder-get-folders-and-file-entries-and-file-shortcuts" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DLFolder.get-folders-and-file-entries-and-file-shortcuts7">Liferay.Service(
	'/dlfolder/get-folders-and-file-entries-and-file-shortcuts',
	{
		groupId:${groupId},
		folderId:${folderId},
		status:${status},
		includeMountFolders:${includeMountFolders},
		start:${start},
		end:${end},
		obc:${obc}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DLFolder-get-folders-and-file-entries-and-file-shortcuts" description="jsonws-DLFolder-get-folders-and-file-entries-and-file-shortcuts" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DLFolder.get-folders-and-file-entries-and-file-shortcuts8">Liferay.Service(
	'/dlfolder/get-folders-and-file-entries-and-file-shortcuts',
	{
		groupId:${groupId},
		folderId:${folderId},
		status:${status},
		mimeTypes:${mimeTypes},
		includeMountFolders:${includeMountFolders},
		start:${start},
		end:${end},
		obc:${obc}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DLFolder-get-folders-and-file-entries-and-file-shortcuts-count" description="jsonws-DLFolder-get-folders-and-file-entries-and-file-shortcuts-count" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DLFolder.get-folders-and-file-entries-and-file-shortcuts-count4">Liferay.Service(
	'/dlfolder/get-folders-and-file-entries-and-file-shortcuts-count',
	{
		groupId:${groupId},
		folderId:${folderId},
		status:${status},
		includeMountFolders:${includeMountFolders}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DLFolder-get-folders-and-file-entries-and-file-shortcuts-count" description="jsonws-DLFolder-get-folders-and-file-entries-and-file-shortcuts-count" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DLFolder.get-folders-and-file-entries-and-file-shortcuts-count5">Liferay.Service(
	'/dlfolder/get-folders-and-file-entries-and-file-shortcuts-count',
	{
		groupId:${groupId},
		folderId:${folderId},
		status:${status},
		mimeTypes:${mimeTypes},
		includeMountFolders:${includeMountFolders}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DLFolder-get-folders-count" description="jsonws-DLFolder-get-folders-count" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DLFolder.get-folders-count2">Liferay.Service(
	'/dlfolder/get-folders-count',
	{
		groupId:${groupId},
		parentFolderId:${parentFolderId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DLFolder-get-folders-count" description="jsonws-DLFolder-get-folders-count" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DLFolder.get-folders-count4">Liferay.Service(
	'/dlfolder/get-folders-count',
	{
		groupId:${groupId},
		parentFolderId:${parentFolderId},
		status:${status},
		includeMountfolders:${includeMountfolders}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DLFolder-get-mount-folders" description="jsonws-DLFolder-get-mount-folders" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DLFolder.get-mount-folders5">Liferay.Service(
	'/dlfolder/get-mount-folders',
	{
		groupId:${groupId},
		parentFolderId:${parentFolderId},
		start:${start},
		end:${end},
		obc:${obc}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DLFolder-get-mount-folders-count" description="jsonws-DLFolder-get-mount-folders-count" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DLFolder.get-mount-folders-count2">Liferay.Service(
	'/dlfolder/get-mount-folders-count',
	{
		groupId:${groupId},
		parentFolderId:${parentFolderId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DLFolder-get-subfolder-ids" description="jsonws-DLFolder-get-subfolder-ids" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DLFolder.get-subfolder-ids3">Liferay.Service(
	'/dlfolder/get-subfolder-ids',
	{
		folderIds:${folderIds},
		groupId:${groupId},
		folderId:${folderId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DLFolder-get-subfolder-ids" description="jsonws-DLFolder-get-subfolder-ids" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DLFolder.get-subfolder-ids3">Liferay.Service(
	'/dlfolder/get-subfolder-ids',
	{
		groupId:${groupId},
		folderId:${folderId},
		recurse:${recurse}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DLFolder-has-folder-lock" description="jsonws-DLFolder-has-folder-lock" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DLFolder.has-folder-lock1">Liferay.Service(
	'/dlfolder/has-folder-lock',
	{
		folderId:${folderId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DLFolder-has-inheritable-lock" description="jsonws-DLFolder-has-inheritable-lock" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DLFolder.has-inheritable-lock1">Liferay.Service(
	'/dlfolder/has-inheritable-lock',
	{
		folderId:${folderId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DLFolder-is-folder-locked" description="jsonws-DLFolder-is-folder-locked" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DLFolder.is-folder-locked1">Liferay.Service(
	'/dlfolder/is-folder-locked',
	{
		folderId:${folderId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DLFolder-lock-folder" description="jsonws-DLFolder-lock-folder" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DLFolder.lock-folder1">Liferay.Service(
	'/dlfolder/lock-folder',
	{
		folderId:${folderId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DLFolder-lock-folder" description="jsonws-DLFolder-lock-folder" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DLFolder.lock-folder4">Liferay.Service(
	'/dlfolder/lock-folder',
	{
		folderId:${folderId},
		owner:${owner},
		inheritable:${inheritable},
		expirationTime:${expirationTime}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DLFolder-move-folder" description="jsonws-DLFolder-move-folder" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DLFolder.move-folder3">Liferay.Service(
	'/dlfolder/move-folder',
	{
		folderId:${folderId},
		parentFolderId:${parentFolderId},
		serviceContext:${serviceContext}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DLFolder-refresh-folder-lock" description="jsonws-DLFolder-refresh-folder-lock" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DLFolder.refresh-folder-lock3">Liferay.Service(
	'/dlfolder/refresh-folder-lock',
	{
		lockUuid:${lockUuid},
		companyId:${companyId},
		expirationTime:${expirationTime}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DLFolder-unlock-folder" description="jsonws-DLFolder-unlock-folder" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DLFolder.unlock-folder2">Liferay.Service(
	'/dlfolder/unlock-folder',
	{
		folderId:${folderId},
		lockUuid:${lockUuid}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DLFolder-unlock-folder" description="jsonws-DLFolder-unlock-folder" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DLFolder.unlock-folder4">Liferay.Service(
	'/dlfolder/unlock-folder',
	{
		groupId:${groupId},
		parentFolderId:${parentFolderId},
		name:${name},
		lockUuid:${lockUuid}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DLFolder-update-folder" description="jsonws-DLFolder-update-folder" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DLFolder.update-folder7">Liferay.Service(
	'/dlfolder/update-folder',
	{
		folderId:${folderId},
		name:${name},
		description:${description},
		defaultFileEntryTypeId:${defaultFileEntryTypeId},
		fileEntryTypeIds:${fileEntryTypeIds},
		overrideFileEntryTypes:${overrideFileEntryTypes},
		serviceContext:${serviceContext}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-DLFolder-verify-inheritable-lock" description="jsonws-DLFolder-verify-inheritable-lock" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.DLFolder.verify-inheritable-lock2">Liferay.Service(
	'/dlfolder/verify-inheritable-lock',
	{
		folderId:${folderId},
		lockUuid:${lockUuid}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-EmailAddress-add-email-address" description="jsonws-EmailAddress-add-email-address" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.EmailAddress.add-email-address5">Liferay.Service(
	'/emailaddress/add-email-address',
	{
		className:${className},
		classPK:${classPK},
		address:${address},
		typeId:${typeId},
		primary:${primary}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-EmailAddress-add-email-address" description="jsonws-EmailAddress-add-email-address" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.EmailAddress.add-email-address6">Liferay.Service(
	'/emailaddress/add-email-address',
	{
		className:${className},
		classPK:${classPK},
		address:${address},
		typeId:${typeId},
		primary:${primary},
		serviceContext:${serviceContext}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-EmailAddress-delete-email-address" description="jsonws-EmailAddress-delete-email-address" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.EmailAddress.delete-email-address1">Liferay.Service(
	'/emailaddress/delete-email-address',
	{
		emailAddressId:${emailAddressId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-EmailAddress-get-email-address" description="jsonws-EmailAddress-get-email-address" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.EmailAddress.get-email-address1">Liferay.Service(
	'/emailaddress/get-email-address',
	{
		emailAddressId:${emailAddressId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-EmailAddress-get-email-addresses" description="jsonws-EmailAddress-get-email-addresses" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.EmailAddress.get-email-addresses2">Liferay.Service(
	'/emailaddress/get-email-addresses',
	{
		className:${className},
		classPK:${classPK}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-EmailAddress-update-email-address" description="jsonws-EmailAddress-update-email-address" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.EmailAddress.update-email-address4">Liferay.Service(
	'/emailaddress/update-email-address',
	{
		emailAddressId:${emailAddressId},
		address:${address},
		typeId:${typeId},
		primary:${primary}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-ExpandoColumn-add-column" description="jsonws-ExpandoColumn-add-column" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.ExpandoColumn.add-column3">Liferay.Service(
	'/expandocolumn/add-column',
	{
		tableId:${tableId},
		name:${name},
		type:${type}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-ExpandoColumn-add-column" description="jsonws-ExpandoColumn-add-column" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.ExpandoColumn.add-column4">Liferay.Service(
	'/expandocolumn/add-column',
	{
		tableId:${tableId},
		name:${name},
		type:${type},
		defaultData:${defaultData}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-ExpandoColumn-delete-column" description="jsonws-ExpandoColumn-delete-column" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.ExpandoColumn.delete-column1">Liferay.Service(
	'/expandocolumn/delete-column',
	{
		columnId:${columnId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-ExpandoColumn-update-column" description="jsonws-ExpandoColumn-update-column" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.ExpandoColumn.update-column3">Liferay.Service(
	'/expandocolumn/update-column',
	{
		columnId:${columnId},
		name:${name},
		type:${type}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-ExpandoColumn-update-column" description="jsonws-ExpandoColumn-update-column" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.ExpandoColumn.update-column4">Liferay.Service(
	'/expandocolumn/update-column',
	{
		columnId:${columnId},
		name:${name},
		type:${type},
		defaultData:${defaultData}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-ExpandoColumn-update-type-settings" description="jsonws-ExpandoColumn-update-type-settings" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.ExpandoColumn.update-type-settings2">Liferay.Service(
	'/expandocolumn/update-type-settings',
	{
		columnId:${columnId},
		typeSettings:${typeSettings}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-ExpandoValue-add-value" description="jsonws-ExpandoValue-add-value" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.ExpandoValue.add-value6">Liferay.Service(
	'/expandovalue/add-value',
	{
		companyId:${companyId},
		className:${className},
		tableName:${tableName},
		columnName:${columnName},
		classPK:${classPK},
		data:${data}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-ExpandoValue-add-values" description="jsonws-ExpandoValue-add-values" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.ExpandoValue.add-values5">Liferay.Service(
	'/expandovalue/add-values',
	{
		companyId:${companyId},
		className:${className},
		tableName:${tableName},
		classPK:${classPK},
		attributeValues:${attributeValues}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-ExpandoValue-get-data" description="jsonws-ExpandoValue-get-data" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.ExpandoValue.get-data5">Liferay.Service(
	'/expandovalue/get-data',
	{
		companyId:${companyId},
		className:${className},
		tableName:${tableName},
		columnName:${columnName},
		classPK:${classPK}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-ExpandoValue-get-data" description="jsonws-ExpandoValue-get-data" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.ExpandoValue.get-data5">Liferay.Service(
	'/expandovalue/get-data',
	{
		companyId:${companyId},
		className:${className},
		tableName:${tableName},
		columnNames:${columnNames},
		classPK:${classPK}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-ExpandoValue-get-json-data" description="jsonws-ExpandoValue-get-json-data" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.ExpandoValue.get-json-data5">Liferay.Service(
	'/expandovalue/get-json-data',
	{
		companyId:${companyId},
		className:${className},
		tableName:${tableName},
		columnName:${columnName},
		classPK:${classPK}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-FlagsEntry-add-entry" description="jsonws-FlagsEntry-add-entry" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.FlagsEntry.add-entry8">Liferay.Service(
	'/flagsentry/add-entry',
	{
		className:${className},
		classPK:${classPK},
		reporterEmailAddress:${reporterEmailAddress},
		reportedUserId:${reportedUserId},
		contentTitle:${contentTitle},
		contentURL:${contentURL},
		reason:${reason},
		serviceContext:${serviceContext}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-Group-add-group" description="jsonws-Group-add-group" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.Group.add-group11">Liferay.Service(
	'/group/add-group',
	{
		parentGroupId:${parentGroupId},
		liveGroupId:${liveGroupId},
		name:${name},
		description:${description},
		type:${type},
		manualMembership:${manualMembership},
		membershipRestriction:${membershipRestriction},
		friendlyURL:${friendlyURL},
		site:${site},
		active:${active},
		serviceContext:${serviceContext}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-Group-add-group" description="jsonws-Group-add-group" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.Group.add-group7">Liferay.Service(
	'/group/add-group',
	{
		name:${name},
		description:${description},
		type:${type},
		friendlyURL:${friendlyURL},
		site:${site},
		active:${active},
		serviceContext:${serviceContext}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-Group-add-group" description="jsonws-Group-add-group" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.Group.add-group8">Liferay.Service(
	'/group/add-group',
	{
		parentGroupId:${parentGroupId},
		name:${name},
		description:${description},
		type:${type},
		friendlyURL:${friendlyURL},
		site:${site},
		active:${active},
		serviceContext:${serviceContext}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-Group-add-role-groups" description="jsonws-Group-add-role-groups" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.Group.add-role-groups2">Liferay.Service(
	'/group/add-role-groups',
	{
		roleId:${roleId},
		groupIds:${groupIds}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-Group-check-remote-staging-group" description="jsonws-Group-check-remote-staging-group" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.Group.check-remote-staging-group1">Liferay.Service(
	'/group/check-remote-staging-group',
	{
		groupId:${groupId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-Group-delete-group" description="jsonws-Group-delete-group" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.Group.delete-group1">Liferay.Service(
	'/group/delete-group',
	{
		groupId:${groupId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-Group-disable-staging" description="jsonws-Group-disable-staging" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.Group.disable-staging1">Liferay.Service(
	'/group/disable-staging',
	{
		groupId:${groupId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-Group-enable-staging" description="jsonws-Group-enable-staging" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.Group.enable-staging1">Liferay.Service(
	'/group/enable-staging',
	{
		groupId:${groupId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-Group-get-company-group" description="jsonws-Group-get-company-group" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.Group.get-company-group1">Liferay.Service(
	'/group/get-company-group',
	{
		companyId:${companyId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-Group-get-group" description="jsonws-Group-get-group" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.Group.get-group1">Liferay.Service(
	'/group/get-group',
	{
		groupId:${groupId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-Group-get-group" description="jsonws-Group-get-group" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.Group.get-group2">Liferay.Service(
	'/group/get-group',
	{
		companyId:${companyId},
		name:${name}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-Group-get-groups" description="jsonws-Group-get-groups" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.Group.get-groups3">Liferay.Service(
	'/group/get-groups',
	{
		companyId:${companyId},
		parentGroupId:${parentGroupId},
		site:${site}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-Group-get-manageable-site-groups" description="jsonws-Group-get-manageable-site-groups" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.Group.get-manageable-site-groups2">Liferay.Service(
	'/group/get-manageable-site-groups',
	{
		portlets:${portlets},
		max:${max}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-Group-get-manageable-sites" description="jsonws-Group-get-manageable-sites" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.Group.get-manageable-sites2">Liferay.Service(
	'/group/get-manageable-sites',
	{
		portlets:${portlets},
		max:${max}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-Group-get-organizations-groups" description="jsonws-Group-get-organizations-groups" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.Group.get-organizations-groups1">Liferay.Service(
	'/group/get-organizations-groups',
	{
		organizations:${organizations}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-Group-get-user-group" description="jsonws-Group-get-user-group" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.Group.get-user-group2">Liferay.Service(
	'/group/get-user-group',
	{
		companyId:${companyId},
		userId:${userId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-Group-get-user-groups-groups" description="jsonws-Group-get-user-groups-groups" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.Group.get-user-groups-groups1">Liferay.Service(
	'/group/get-user-groups-groups',
	{
		userGroups:${userGroups}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-Group-get-user-organizations-groups" description="jsonws-Group-get-user-organizations-groups" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.Group.get-user-organizations-groups3">Liferay.Service(
	'/group/get-user-organizations-groups',
	{
		userId:${userId},
		start:${start},
		end:${end}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-Group-get-user-places" description="jsonws-Group-get-user-places" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.Group.get-user-places2">Liferay.Service(
	'/group/get-user-places',
	{
		classNames:${classNames},
		max:${max}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-Group-get-user-places" description="jsonws-Group-get-user-places" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.Group.get-user-places3">Liferay.Service(
	'/group/get-user-places',
	{
		userId:${userId},
		classNames:${classNames},
		max:${max}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-Group-get-user-places" description="jsonws-Group-get-user-places" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.Group.get-user-places4">Liferay.Service(
	'/group/get-user-places',
	{
		userId:${userId},
		classNames:${classNames},
		includeControlPanel:${includeControlPanel},
		max:${max}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-Group-get-user-places-count" description="jsonws-Group-get-user-places-count" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.Group.get-user-places-count">Liferay.Service(
	'/group/get-user-places-count',
	{

	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-Group-get-user-sites" description="jsonws-Group-get-user-sites" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.Group.get-user-sites">Liferay.Service(
	'/group/get-user-sites',
	{

	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-Group-get-user-sites-groups" description="jsonws-Group-get-user-sites-groups" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.Group.get-user-sites-groups">Liferay.Service(
	'/group/get-user-sites-groups',
	{

	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-Group-get-user-sites-groups" description="jsonws-Group-get-user-sites-groups" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.Group.get-user-sites-groups2">Liferay.Service(
	'/group/get-user-sites-groups',
	{
		classNames:${classNames},
		max:${max}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-Group-get-user-sites-groups" description="jsonws-Group-get-user-sites-groups" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.Group.get-user-sites-groups3">Liferay.Service(
	'/group/get-user-sites-groups',
	{
		userId:${userId},
		classNames:${classNames},
		max:${max}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-Group-get-user-sites-groups" description="jsonws-Group-get-user-sites-groups" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.Group.get-user-sites-groups4">Liferay.Service(
	'/group/get-user-sites-groups',
	{
		userId:${userId},
		classNames:${classNames},
		includeControlPanel:${includeControlPanel},
		max:${max}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-Group-get-user-sites-groups-count" description="jsonws-Group-get-user-sites-groups-count" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.Group.get-user-sites-groups-count">Liferay.Service(
	'/group/get-user-sites-groups-count',
	{

	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-Group-has-user-group" description="jsonws-Group-has-user-group" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.Group.has-user-group2">Liferay.Service(
	'/group/has-user-group',
	{
		userId:${userId},
		groupId:${groupId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-Group-search" description="jsonws-Group-search" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.Group.search6">Liferay.Service(
	'/group/search',
	{
		companyId:${companyId},
		name:${name},
		description:${description},
		params:${params},
		start:${start},
		end:${end}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-Group-search-count" description="jsonws-Group-search-count" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.Group.search-count4">Liferay.Service(
	'/group/search-count',
	{
		companyId:${companyId},
		name:${name},
		description:${description},
		params:${params}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-Group-set-role-groups" description="jsonws-Group-set-role-groups" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.Group.set-role-groups2">Liferay.Service(
	'/group/set-role-groups',
	{
		roleId:${roleId},
		groupIds:${groupIds}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-Group-unset-role-groups" description="jsonws-Group-unset-role-groups" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.Group.unset-role-groups2">Liferay.Service(
	'/group/unset-role-groups',
	{
		roleId:${roleId},
		groupIds:${groupIds}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-Group-update-friendly-url" description="jsonws-Group-update-friendly-url" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.Group.update-friendly-url2">Liferay.Service(
	'/group/update-friendly-url',
	{
		groupId:${groupId},
		friendlyURL:${friendlyURL}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-Group-update-group" description="jsonws-Group-update-group" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.Group.update-group10">Liferay.Service(
	'/group/update-group',
	{
		groupId:${groupId},
		parentGroupId:${parentGroupId},
		name:${name},
		description:${description},
		type:${type},
		manualMembership:${manualMembership},
		membershipRestriction:${membershipRestriction},
		friendlyURL:${friendlyURL},
		active:${active},
		serviceContext:${serviceContext}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-Group-update-group" description="jsonws-Group-update-group" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.Group.update-group2">Liferay.Service(
	'/group/update-group',
	{
		groupId:${groupId},
		typeSettings:${typeSettings}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-Group-update-staged-portlets" description="jsonws-Group-update-staged-portlets" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.Group.update-staged-portlets2">Liferay.Service(
	'/group/update-staged-portlets',
	{
		groupId:${groupId},
		stagedPortletIds:${stagedPortletIds}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-Image-get-image" description="jsonws-Image-get-image" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.Image.get-image1">Liferay.Service(
	'/image/get-image',
	{
		imageId:${imageId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-JournalArticle-add-article" description="jsonws-JournalArticle-add-article" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.JournalArticle.add-article33">Liferay.Service(
	'/journalarticle/add-article',
	{
		groupId:${groupId},
		folderId:${folderId},
		classNameId:${classNameId},
		classPK:${classPK},
		articleId:${articleId},
		autoArticleId:${autoArticleId},
		titleMap:${titleMap},
		descriptionMap:${descriptionMap},
		content:${content},
		type:${type},
		ddmStructureKey:${ddmStructureKey},
		ddmTemplateKey:${ddmTemplateKey},
		layoutUuid:${layoutUuid},
		displayDateMonth:${displayDateMonth},
		displayDateDay:${displayDateDay},
		displayDateYear:${displayDateYear},
		displayDateHour:${displayDateHour},
		displayDateMinute:${displayDateMinute},
		expirationDateMonth:${expirationDateMonth},
		expirationDateDay:${expirationDateDay},
		expirationDateYear:${expirationDateYear},
		expirationDateHour:${expirationDateHour},
		expirationDateMinute:${expirationDateMinute},
		neverExpire:${neverExpire},
		reviewDateMonth:${reviewDateMonth},
		reviewDateDay:${reviewDateDay},
		reviewDateYear:${reviewDateYear},
		reviewDateHour:${reviewDateHour},
		reviewDateMinute:${reviewDateMinute},
		neverReview:${neverReview},
		indexable:${indexable},
		articleURL:${articleURL},
		serviceContext:${serviceContext}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-JournalArticle-add-article" description="jsonws-JournalArticle-add-article" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.JournalArticle.add-article37">Liferay.Service(
	'/journalarticle/add-article',
	{
		groupId:${groupId},
		folderId:${folderId},
		classNameId:${classNameId},
		classPK:${classPK},
		articleId:${articleId},
		autoArticleId:${autoArticleId},
		titleMap:${titleMap},
		descriptionMap:${descriptionMap},
		content:${content},
		type:${type},
		ddmStructureKey:${ddmStructureKey},
		ddmTemplateKey:${ddmTemplateKey},
		layoutUuid:${layoutUuid},
		displayDateMonth:${displayDateMonth},
		displayDateDay:${displayDateDay},
		displayDateYear:${displayDateYear},
		displayDateHour:${displayDateHour},
		displayDateMinute:${displayDateMinute},
		expirationDateMonth:${expirationDateMonth},
		expirationDateDay:${expirationDateDay},
		expirationDateYear:${expirationDateYear},
		expirationDateHour:${expirationDateHour},
		expirationDateMinute:${expirationDateMinute},
		neverExpire:${neverExpire},
		reviewDateMonth:${reviewDateMonth},
		reviewDateDay:${reviewDateDay},
		reviewDateYear:${reviewDateYear},
		reviewDateHour:${reviewDateHour},
		reviewDateMinute:${reviewDateMinute},
		neverReview:${neverReview},
		indexable:${indexable},
		smallImage:${smallImage},
		smallImageURL:${smallImageURL},
		smallFile:${smallFile},
		images:${images},
		articleURL:${articleURL},
		serviceContext:${serviceContext}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-JournalArticle-copy-article" description="jsonws-JournalArticle-copy-article" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.JournalArticle.copy-article5">Liferay.Service(
	'/journalarticle/copy-article',
	{
		groupId:${groupId},
		oldArticleId:${oldArticleId},
		newArticleId:${newArticleId},
		autoArticleId:${autoArticleId},
		version:${version}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-JournalArticle-delete-article" description="jsonws-JournalArticle-delete-article" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.JournalArticle.delete-article4">Liferay.Service(
	'/journalarticle/delete-article',
	{
		groupId:${groupId},
		articleId:${articleId},
		articleURL:${articleURL},
		serviceContext:${serviceContext}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-JournalArticle-delete-article" description="jsonws-JournalArticle-delete-article" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.JournalArticle.delete-article5">Liferay.Service(
	'/journalarticle/delete-article',
	{
		groupId:${groupId},
		articleId:${articleId},
		version:${version},
		articleURL:${articleURL},
		serviceContext:${serviceContext}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-JournalArticle-expire-article" description="jsonws-JournalArticle-expire-article" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.JournalArticle.expire-article4">Liferay.Service(
	'/journalarticle/expire-article',
	{
		groupId:${groupId},
		articleId:${articleId},
		articleURL:${articleURL},
		serviceContext:${serviceContext}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-JournalArticle-expire-article" description="jsonws-JournalArticle-expire-article" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.JournalArticle.expire-article5">Liferay.Service(
	'/journalarticle/expire-article',
	{
		groupId:${groupId},
		articleId:${articleId},
		version:${version},
		articleURL:${articleURL},
		serviceContext:${serviceContext}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-JournalArticle-get-article" description="jsonws-JournalArticle-get-article" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.JournalArticle.get-article1">Liferay.Service(
	'/journalarticle/get-article',
	{
		id:${id}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-JournalArticle-get-article" description="jsonws-JournalArticle-get-article" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.JournalArticle.get-article2">Liferay.Service(
	'/journalarticle/get-article',
	{
		groupId:${groupId},
		articleId:${articleId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-JournalArticle-get-article" description="jsonws-JournalArticle-get-article" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.JournalArticle.get-article3">Liferay.Service(
	'/journalarticle/get-article',
	{
		groupId:${groupId},
		articleId:${articleId},
		version:${version}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-JournalArticle-get-article" description="jsonws-JournalArticle-get-article" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.JournalArticle.get-article3">Liferay.Service(
	'/journalarticle/get-article',
	{
		groupId:${groupId},
		className:${className},
		classPK:${classPK}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-JournalArticle-get-article-by-url-title" description="jsonws-JournalArticle-get-article-by-url-title" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.JournalArticle.get-article-by-url-title2">Liferay.Service(
	'/journalarticle/get-article-by-url-title',
	{
		groupId:${groupId},
		urlTitle:${urlTitle}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-JournalArticle-get-article-content" description="jsonws-JournalArticle-get-article-content" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.JournalArticle.get-article-content4">Liferay.Service(
	'/journalarticle/get-article-content',
	{
		groupId:${groupId},
		articleId:${articleId},
		languageId:${languageId},
		themeDisplay:${themeDisplay}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-JournalArticle-get-article-content" description="jsonws-JournalArticle-get-article-content" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.JournalArticle.get-article-content5">Liferay.Service(
	'/journalarticle/get-article-content',
	{
		groupId:${groupId},
		articleId:${articleId},
		version:${version},
		languageId:${languageId},
		themeDisplay:${themeDisplay}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-JournalArticle-get-articles" description="jsonws-JournalArticle-get-articles" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.JournalArticle.get-articles2">Liferay.Service(
	'/journalarticle/get-articles',
	{
		groupId:${groupId},
		folderId:${folderId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-JournalArticle-get-articles" description="jsonws-JournalArticle-get-articles" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.JournalArticle.get-articles5">Liferay.Service(
	'/journalarticle/get-articles',
	{
		groupId:${groupId},
		folderId:${folderId},
		start:${start},
		end:${end},
		obc:${obc}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-JournalArticle-get-articles-by-article-id" description="jsonws-JournalArticle-get-articles-by-article-id" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.JournalArticle.get-articles-by-article-id5">Liferay.Service(
	'/journalarticle/get-articles-by-article-id',
	{
		groupId:${groupId},
		articleId:${articleId},
		start:${start},
		end:${end},
		obc:${obc}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-JournalArticle-get-articles-by-layout-uuid" description="jsonws-JournalArticle-get-articles-by-layout-uuid" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.JournalArticle.get-articles-by-layout-uuid2">Liferay.Service(
	'/journalarticle/get-articles-by-layout-uuid',
	{
		groupId:${groupId},
		layoutUuid:${layoutUuid}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-JournalArticle-get-articles-by-structure-id" description="jsonws-JournalArticle-get-articles-by-structure-id" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.JournalArticle.get-articles-by-structure-id5">Liferay.Service(
	'/journalarticle/get-articles-by-structure-id',
	{
		groupId:${groupId},
		ddmStructureKey:${ddmStructureKey},
		start:${start},
		end:${end},
		obc:${obc}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-JournalArticle-get-articles-by-structure-id" description="jsonws-JournalArticle-get-articles-by-structure-id" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.JournalArticle.get-articles-by-structure-id7">Liferay.Service(
	'/journalarticle/get-articles-by-structure-id',
	{
		groupId:${groupId},
		classNameId:${classNameId},
		ddmStructureKey:${ddmStructureKey},
		status:${status},
		start:${start},
		end:${end},
		obc:${obc}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-JournalArticle-get-articles-count" description="jsonws-JournalArticle-get-articles-count" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.JournalArticle.get-articles-count2">Liferay.Service(
	'/journalarticle/get-articles-count',
	{
		groupId:${groupId},
		folderId:${folderId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-JournalArticle-get-articles-count" description="jsonws-JournalArticle-get-articles-count" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.JournalArticle.get-articles-count3">Liferay.Service(
	'/journalarticle/get-articles-count',
	{
		groupId:${groupId},
		folderId:${folderId},
		status:${status}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-JournalArticle-get-articles-count-by-article-id" description="jsonws-JournalArticle-get-articles-count-by-article-id" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.JournalArticle.get-articles-count-by-article-id2">Liferay.Service(
	'/journalarticle/get-articles-count-by-article-id',
	{
		groupId:${groupId},
		articleId:${articleId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-JournalArticle-get-articles-count-by-structure-id" description="jsonws-JournalArticle-get-articles-count-by-structure-id" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.JournalArticle.get-articles-count-by-structure-id2">Liferay.Service(
	'/journalarticle/get-articles-count-by-structure-id',
	{
		groupId:${groupId},
		ddmStructureKey:${ddmStructureKey}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-JournalArticle-get-articles-count-by-structure-id" description="jsonws-JournalArticle-get-articles-count-by-structure-id" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.JournalArticle.get-articles-count-by-structure-id4">Liferay.Service(
	'/journalarticle/get-articles-count-by-structure-id',
	{
		groupId:${groupId},
		classNameId:${classNameId},
		ddmStructureKey:${ddmStructureKey},
		status:${status}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-JournalArticle-get-display-article-by-url-title" description="jsonws-JournalArticle-get-display-article-by-url-title" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.JournalArticle.get-display-article-by-url-title2">Liferay.Service(
	'/journalarticle/get-display-article-by-url-title',
	{
		groupId:${groupId},
		urlTitle:${urlTitle}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-JournalArticle-get-folders-and-articles-count" description="jsonws-JournalArticle-get-folders-and-articles-count" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.JournalArticle.get-folders-and-articles-count2">Liferay.Service(
	'/journalarticle/get-folders-and-articles-count',
	{
		groupId:${groupId},
		folderIds:${folderIds}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-JournalArticle-get-group-articles" description="jsonws-JournalArticle-get-group-articles" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.JournalArticle.get-group-articles6">Liferay.Service(
	'/journalarticle/get-group-articles',
	{
		groupId:${groupId},
		userId:${userId},
		rootFolderId:${rootFolderId},
		start:${start},
		end:${end},
		orderByComparator:${orderByComparator}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-JournalArticle-get-group-articles" description="jsonws-JournalArticle-get-group-articles" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.JournalArticle.get-group-articles7">Liferay.Service(
	'/journalarticle/get-group-articles',
	{
		groupId:${groupId},
		userId:${userId},
		rootFolderId:${rootFolderId},
		status:${status},
		start:${start},
		end:${end},
		orderByComparator:${orderByComparator}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-JournalArticle-get-group-articles-count" description="jsonws-JournalArticle-get-group-articles-count" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.JournalArticle.get-group-articles-count3">Liferay.Service(
	'/journalarticle/get-group-articles-count',
	{
		groupId:${groupId},
		userId:${userId},
		rootFolderId:${rootFolderId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-JournalArticle-get-group-articles-count" description="jsonws-JournalArticle-get-group-articles-count" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.JournalArticle.get-group-articles-count4">Liferay.Service(
	'/journalarticle/get-group-articles-count',
	{
		groupId:${groupId},
		userId:${userId},
		rootFolderId:${rootFolderId},
		status:${status}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-JournalArticle-get-latest-article" description="jsonws-JournalArticle-get-latest-article" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.JournalArticle.get-latest-article1">Liferay.Service(
	'/journalarticle/get-latest-article',
	{
		resourcePrimKey:${resourcePrimKey}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-JournalArticle-get-latest-article" description="jsonws-JournalArticle-get-latest-article" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.JournalArticle.get-latest-article3">Liferay.Service(
	'/journalarticle/get-latest-article',
	{
		groupId:${groupId},
		articleId:${articleId},
		status:${status}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-JournalArticle-get-latest-article" description="jsonws-JournalArticle-get-latest-article" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.JournalArticle.get-latest-article3">Liferay.Service(
	'/journalarticle/get-latest-article',
	{
		groupId:${groupId},
		className:${className},
		classPK:${classPK}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-JournalArticle-move-article" description="jsonws-JournalArticle-move-article" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.JournalArticle.move-article3">Liferay.Service(
	'/journalarticle/move-article',
	{
		groupId:${groupId},
		articleId:${articleId},
		newFolderId:${newFolderId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-JournalArticle-move-article-from-trash" description="jsonws-JournalArticle-move-article-from-trash" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.JournalArticle.move-article-from-trash4">Liferay.Service(
	'/journalarticle/move-article-from-trash',
	{
		groupId:${groupId},
		articleId:${articleId},
		newFolderId:${newFolderId},
		serviceContext:${serviceContext}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-JournalArticle-move-article-from-trash" description="jsonws-JournalArticle-move-article-from-trash" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.JournalArticle.move-article-from-trash4">Liferay.Service(
	'/journalarticle/move-article-from-trash',
	{
		groupId:${groupId},
		resourcePrimKey:${resourcePrimKey},
		newFolderId:${newFolderId},
		serviceContext:${serviceContext}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-JournalArticle-move-article-to-trash" description="jsonws-JournalArticle-move-article-to-trash" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.JournalArticle.move-article-to-trash2">Liferay.Service(
	'/journalarticle/move-article-to-trash',
	{
		groupId:${groupId},
		articleId:${articleId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-JournalArticle-remove-article-locale" description="jsonws-JournalArticle-remove-article-locale" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.JournalArticle.remove-article-locale2">Liferay.Service(
	'/journalarticle/remove-article-locale',
	{
		companyId:${companyId},
		languageId:${languageId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-JournalArticle-remove-article-locale" description="jsonws-JournalArticle-remove-article-locale" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.JournalArticle.remove-article-locale4">Liferay.Service(
	'/journalarticle/remove-article-locale',
	{
		groupId:${groupId},
		articleId:${articleId},
		version:${version},
		languageId:${languageId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-JournalArticle-restore-article-from-trash" description="jsonws-JournalArticle-restore-article-from-trash" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.JournalArticle.restore-article-from-trash1">Liferay.Service(
	'/journalarticle/restore-article-from-trash',
	{
		resourcePrimKey:${resourcePrimKey}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-JournalArticle-restore-article-from-trash" description="jsonws-JournalArticle-restore-article-from-trash" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.JournalArticle.restore-article-from-trash2">Liferay.Service(
	'/journalarticle/restore-article-from-trash',
	{
		groupId:${groupId},
		articleId:${articleId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-JournalArticle-search" description="jsonws-JournalArticle-search" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.JournalArticle.search16">Liferay.Service(
	'/journalarticle/search',
	{
		companyId:${companyId},
		groupId:${groupId},
		folderIds:${folderIds},
		classNameId:${classNameId},
		keywords:${keywords},
		version:${version},
		type:${type},
		ddmStructureKey:${ddmStructureKey},
		ddmTemplateKey:${ddmTemplateKey},
		displayDateGT:${displayDateGT},
		displayDateLT:${displayDateLT},
		status:${status},
		reviewDate:${reviewDate},
		start:${start},
		end:${end},
		obc:${obc}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-JournalArticle-search" description="jsonws-JournalArticle-search" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.JournalArticle.search20">Liferay.Service(
	'/journalarticle/search',
	{
		companyId:${companyId},
		groupId:${groupId},
		folderIds:${folderIds},
		classNameId:${classNameId},
		articleId:${articleId},
		version:${version},
		title:${title},
		description:${description},
		content:${content},
		type:${type},
		ddmStructureKey:${ddmStructureKey},
		ddmTemplateKey:${ddmTemplateKey},
		displayDateGT:${displayDateGT},
		displayDateLT:${displayDateLT},
		status:${status},
		reviewDate:${reviewDate},
		andOperator:${andOperator},
		start:${start},
		end:${end},
		obc:${obc}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-JournalArticle-search" description="jsonws-JournalArticle-search" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.JournalArticle.search20">Liferay.Service(
	'/journalarticle/search',
	{
		companyId:${companyId},
		groupId:${groupId},
		folderIds:${folderIds},
		classNameId:${classNameId},
		articleId:${articleId},
		version:${version},
		title:${title},
		description:${description},
		content:${content},
		type:${type},
		ddmStructureKeys:${ddmStructureKeys},
		ddmTemplateKeys:${ddmTemplateKeys},
		displayDateGT:${displayDateGT},
		displayDateLT:${displayDateLT},
		status:${status},
		reviewDate:${reviewDate},
		andOperator:${andOperator},
		start:${start},
		end:${end},
		obc:${obc}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-JournalArticle-search" description="jsonws-JournalArticle-search" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.JournalArticle.search5">Liferay.Service(
	'/journalarticle/search',
	{
		groupId:${groupId},
		creatorUserId:${creatorUserId},
		status:${status},
		start:${start},
		end:${end}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-JournalArticle-search-count" description="jsonws-JournalArticle-search-count" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.JournalArticle.search-count13">Liferay.Service(
	'/journalarticle/search-count',
	{
		companyId:${companyId},
		groupId:${groupId},
		folderIds:${folderIds},
		classNameId:${classNameId},
		keywords:${keywords},
		version:${version},
		type:${type},
		ddmStructureKey:${ddmStructureKey},
		ddmTemplateKey:${ddmTemplateKey},
		displayDateGT:${displayDateGT},
		displayDateLT:${displayDateLT},
		status:${status},
		reviewDate:${reviewDate}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-JournalArticle-search-count" description="jsonws-JournalArticle-search-count" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.JournalArticle.search-count17">Liferay.Service(
	'/journalarticle/search-count',
	{
		companyId:${companyId},
		groupId:${groupId},
		folderIds:${folderIds},
		classNameId:${classNameId},
		articleId:${articleId},
		version:${version},
		title:${title},
		description:${description},
		content:${content},
		type:${type},
		ddmStructureKey:${ddmStructureKey},
		ddmTemplateKey:${ddmTemplateKey},
		displayDateGT:${displayDateGT},
		displayDateLT:${displayDateLT},
		status:${status},
		reviewDate:${reviewDate},
		andOperator:${andOperator}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-JournalArticle-search-count" description="jsonws-JournalArticle-search-count" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.JournalArticle.search-count17">Liferay.Service(
	'/journalarticle/search-count',
	{
		companyId:${companyId},
		groupId:${groupId},
		folderIds:${folderIds},
		classNameId:${classNameId},
		articleId:${articleId},
		version:${version},
		title:${title},
		description:${description},
		content:${content},
		type:${type},
		ddmStructureKeys:${ddmStructureKeys},
		ddmTemplateKeys:${ddmTemplateKeys},
		displayDateGT:${displayDateGT},
		displayDateLT:${displayDateLT},
		status:${status},
		reviewDate:${reviewDate},
		andOperator:${andOperator}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-JournalArticle-subscribe" description="jsonws-JournalArticle-subscribe" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.JournalArticle.subscribe1">Liferay.Service(
	'/journalarticle/subscribe',
	{
		groupId:${groupId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-JournalArticle-unsubscribe" description="jsonws-JournalArticle-unsubscribe" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.JournalArticle.unsubscribe1">Liferay.Service(
	'/journalarticle/unsubscribe',
	{
		groupId:${groupId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-JournalArticle-update-article" description="jsonws-JournalArticle-update-article" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.JournalArticle.update-article10">Liferay.Service(
	'/journalarticle/update-article',
	{
		userId:${userId},
		groupId:${groupId},
		folderId:${folderId},
		articleId:${articleId},
		version:${version},
		titleMap:${titleMap},
		descriptionMap:${descriptionMap},
		content:${content},
		layoutUuid:${layoutUuid},
		serviceContext:${serviceContext}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-JournalArticle-update-article" description="jsonws-JournalArticle-update-article" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.JournalArticle.update-article35">Liferay.Service(
	'/journalarticle/update-article',
	{
		groupId:${groupId},
		folderId:${folderId},
		articleId:${articleId},
		version:${version},
		titleMap:${titleMap},
		descriptionMap:${descriptionMap},
		content:${content},
		type:${type},
		ddmStructureKey:${ddmStructureKey},
		ddmTemplateKey:${ddmTemplateKey},
		layoutUuid:${layoutUuid},
		displayDateMonth:${displayDateMonth},
		displayDateDay:${displayDateDay},
		displayDateYear:${displayDateYear},
		displayDateHour:${displayDateHour},
		displayDateMinute:${displayDateMinute},
		expirationDateMonth:${expirationDateMonth},
		expirationDateDay:${expirationDateDay},
		expirationDateYear:${expirationDateYear},
		expirationDateHour:${expirationDateHour},
		expirationDateMinute:${expirationDateMinute},
		neverExpire:${neverExpire},
		reviewDateMonth:${reviewDateMonth},
		reviewDateDay:${reviewDateDay},
		reviewDateYear:${reviewDateYear},
		reviewDateHour:${reviewDateHour},
		reviewDateMinute:${reviewDateMinute},
		neverReview:${neverReview},
		indexable:${indexable},
		smallImage:${smallImage},
		smallImageURL:${smallImageURL},
		smallFile:${smallFile},
		images:${images},
		articleURL:${articleURL},
		serviceContext:${serviceContext}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-JournalArticle-update-article" description="jsonws-JournalArticle-update-article" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.JournalArticle.update-article6">Liferay.Service(
	'/journalarticle/update-article',
	{
		groupId:${groupId},
		folderId:${folderId},
		articleId:${articleId},
		version:${version},
		content:${content},
		serviceContext:${serviceContext}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-JournalArticle-update-article-translation" description="jsonws-JournalArticle-update-article-translation" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.JournalArticle.update-article-translation8">Liferay.Service(
	'/journalarticle/update-article-translation',
	{
		groupId:${groupId},
		articleId:${articleId},
		version:${version},
		locale:${locale},
		title:${title},
		description:${description},
		content:${content},
		images:${images}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-JournalArticle-update-article-translation" description="jsonws-JournalArticle-update-article-translation" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.JournalArticle.update-article-translation9">Liferay.Service(
	'/journalarticle/update-article-translation',
	{
		groupId:${groupId},
		articleId:${articleId},
		version:${version},
		locale:${locale},
		title:${title},
		description:${description},
		content:${content},
		images:${images},
		serviceContext:${serviceContext}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-JournalArticle-update-content" description="jsonws-JournalArticle-update-content" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.JournalArticle.update-content4">Liferay.Service(
	'/journalarticle/update-content',
	{
		groupId:${groupId},
		articleId:${articleId},
		version:${version},
		content:${content}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-JournalArticle-update-status" description="jsonws-JournalArticle-update-status" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.JournalArticle.update-status6">Liferay.Service(
	'/journalarticle/update-status',
	{
		groupId:${groupId},
		articleId:${articleId},
		version:${version},
		status:${status},
		articleURL:${articleURL},
		serviceContext:${serviceContext}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-JournalFeed-add-feed" description="jsonws-JournalFeed-add-feed" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.JournalFeed.add-feed18">Liferay.Service(
	'/journalfeed/add-feed',
	{
		groupId:${groupId},
		feedId:${feedId},
		autoFeedId:${autoFeedId},
		name:${name},
		description:${description},
		type:${type},
		structureId:${structureId},
		templateId:${templateId},
		rendererTemplateId:${rendererTemplateId},
		delta:${delta},
		orderByCol:${orderByCol},
		orderByType:${orderByType},
		targetLayoutFriendlyUrl:${targetLayoutFriendlyUrl},
		targetPortletId:${targetPortletId},
		contentField:${contentField},
		feedType:${feedType},
		feedVersion:${feedVersion},
		serviceContext:${serviceContext}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-JournalFeed-delete-feed" description="jsonws-JournalFeed-delete-feed" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.JournalFeed.delete-feed1">Liferay.Service(
	'/journalfeed/delete-feed',
	{
		feedId:${feedId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-JournalFeed-delete-feed" description="jsonws-JournalFeed-delete-feed" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.JournalFeed.delete-feed2">Liferay.Service(
	'/journalfeed/delete-feed',
	{
		groupId:${groupId},
		feedId:${feedId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-JournalFeed-get-feed" description="jsonws-JournalFeed-get-feed" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.JournalFeed.get-feed1">Liferay.Service(
	'/journalfeed/get-feed',
	{
		feedId:${feedId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-JournalFeed-get-feed" description="jsonws-JournalFeed-get-feed" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.JournalFeed.get-feed2">Liferay.Service(
	'/journalfeed/get-feed',
	{
		groupId:${groupId},
		feedId:${feedId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-JournalFeed-update-feed" description="jsonws-JournalFeed-update-feed" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.JournalFeed.update-feed17">Liferay.Service(
	'/journalfeed/update-feed',
	{
		groupId:${groupId},
		feedId:${feedId},
		name:${name},
		description:${description},
		type:${type},
		structureId:${structureId},
		templateId:${templateId},
		rendererTemplateId:${rendererTemplateId},
		delta:${delta},
		orderByCol:${orderByCol},
		orderByType:${orderByType},
		targetLayoutFriendlyUrl:${targetLayoutFriendlyUrl},
		targetPortletId:${targetPortletId},
		contentField:${contentField},
		feedType:${feedType},
		feedVersion:${feedVersion},
		serviceContext:${serviceContext}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-JournalFolder-add-folder" description="jsonws-JournalFolder-add-folder" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.JournalFolder.add-folder5">Liferay.Service(
	'/journalfolder/add-folder',
	{
		groupId:${groupId},
		parentFolderId:${parentFolderId},
		name:${name},
		description:${description},
		serviceContext:${serviceContext}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-JournalFolder-delete-folder" description="jsonws-JournalFolder-delete-folder" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.JournalFolder.delete-folder1">Liferay.Service(
	'/journalfolder/delete-folder',
	{
		folderId:${folderId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-JournalFolder-delete-folder" description="jsonws-JournalFolder-delete-folder" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.JournalFolder.delete-folder2">Liferay.Service(
	'/journalfolder/delete-folder',
	{
		folderId:${folderId},
		includeTrashedEntries:${includeTrashedEntries}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-JournalFolder-get-folder" description="jsonws-JournalFolder-get-folder" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.JournalFolder.get-folder1">Liferay.Service(
	'/journalfolder/get-folder',
	{
		folderId:${folderId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-JournalFolder-get-folder-ids" description="jsonws-JournalFolder-get-folder-ids" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.JournalFolder.get-folder-ids2">Liferay.Service(
	'/journalfolder/get-folder-ids',
	{
		groupId:${groupId},
		folderId:${folderId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-JournalFolder-get-folders" description="jsonws-JournalFolder-get-folders" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.JournalFolder.get-folders1">Liferay.Service(
	'/journalfolder/get-folders',
	{
		groupId:${groupId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-JournalFolder-get-folders" description="jsonws-JournalFolder-get-folders" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.JournalFolder.get-folders2">Liferay.Service(
	'/journalfolder/get-folders',
	{
		groupId:${groupId},
		parentFolderId:${parentFolderId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-JournalFolder-get-folders" description="jsonws-JournalFolder-get-folders" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.JournalFolder.get-folders3">Liferay.Service(
	'/journalfolder/get-folders',
	{
		groupId:${groupId},
		parentFolderId:${parentFolderId},
		status:${status}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-JournalFolder-get-folders" description="jsonws-JournalFolder-get-folders" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.JournalFolder.get-folders4">Liferay.Service(
	'/journalfolder/get-folders',
	{
		groupId:${groupId},
		parentFolderId:${parentFolderId},
		start:${start},
		end:${end}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-JournalFolder-get-folders" description="jsonws-JournalFolder-get-folders" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.JournalFolder.get-folders5">Liferay.Service(
	'/journalfolder/get-folders',
	{
		groupId:${groupId},
		parentFolderId:${parentFolderId},
		status:${status},
		start:${start},
		end:${end}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-JournalFolder-get-folders-and-articles" description="jsonws-JournalFolder-get-folders-and-articles" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.JournalFolder.get-folders-and-articles5">Liferay.Service(
	'/journalfolder/get-folders-and-articles',
	{
		groupId:${groupId},
		folderId:${folderId},
		start:${start},
		end:${end},
		obc:${obc}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-JournalFolder-get-folders-and-articles" description="jsonws-JournalFolder-get-folders-and-articles" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.JournalFolder.get-folders-and-articles6">Liferay.Service(
	'/journalfolder/get-folders-and-articles',
	{
		groupId:${groupId},
		folderId:${folderId},
		status:${status},
		start:${start},
		end:${end},
		obc:${obc}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-JournalFolder-get-folders-and-articles-count" description="jsonws-JournalFolder-get-folders-and-articles-count" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.JournalFolder.get-folders-and-articles-count2">Liferay.Service(
	'/journalfolder/get-folders-and-articles-count',
	{
		groupId:${groupId},
		folderId:${folderId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-JournalFolder-get-folders-and-articles-count" description="jsonws-JournalFolder-get-folders-and-articles-count" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.JournalFolder.get-folders-and-articles-count3">Liferay.Service(
	'/journalfolder/get-folders-and-articles-count',
	{
		groupId:${groupId},
		folderId:${folderId},
		status:${status}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-JournalFolder-get-folders-and-articles-count" description="jsonws-JournalFolder-get-folders-and-articles-count" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.JournalFolder.get-folders-and-articles-count3">Liferay.Service(
	'/journalfolder/get-folders-and-articles-count',
	{
		groupId:${groupId},
		folderIds:${folderIds},
		status:${status}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-JournalFolder-get-folders-count" description="jsonws-JournalFolder-get-folders-count" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.JournalFolder.get-folders-count2">Liferay.Service(
	'/journalfolder/get-folders-count',
	{
		groupId:${groupId},
		parentFolderId:${parentFolderId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-JournalFolder-get-folders-count" description="jsonws-JournalFolder-get-folders-count" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.JournalFolder.get-folders-count3">Liferay.Service(
	'/journalfolder/get-folders-count',
	{
		groupId:${groupId},
		parentFolderId:${parentFolderId},
		status:${status}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-JournalFolder-get-subfolder-ids" description="jsonws-JournalFolder-get-subfolder-ids" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.JournalFolder.get-subfolder-ids3">Liferay.Service(
	'/journalfolder/get-subfolder-ids',
	{
		folderIds:${folderIds},
		groupId:${groupId},
		folderId:${folderId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-JournalFolder-get-subfolder-ids" description="jsonws-JournalFolder-get-subfolder-ids" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.JournalFolder.get-subfolder-ids3">Liferay.Service(
	'/journalfolder/get-subfolder-ids',
	{
		groupId:${groupId},
		folderId:${folderId},
		recurse:${recurse}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-JournalFolder-move-folder" description="jsonws-JournalFolder-move-folder" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.JournalFolder.move-folder3">Liferay.Service(
	'/journalfolder/move-folder',
	{
		folderId:${folderId},
		parentFolderId:${parentFolderId},
		serviceContext:${serviceContext}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-JournalFolder-move-folder-from-trash" description="jsonws-JournalFolder-move-folder-from-trash" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.JournalFolder.move-folder-from-trash3">Liferay.Service(
	'/journalfolder/move-folder-from-trash',
	{
		folderId:${folderId},
		parentFolderId:${parentFolderId},
		serviceContext:${serviceContext}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-JournalFolder-move-folder-to-trash" description="jsonws-JournalFolder-move-folder-to-trash" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.JournalFolder.move-folder-to-trash1">Liferay.Service(
	'/journalfolder/move-folder-to-trash',
	{
		folderId:${folderId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-JournalFolder-restore-folder-from-trash" description="jsonws-JournalFolder-restore-folder-from-trash" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.JournalFolder.restore-folder-from-trash1">Liferay.Service(
	'/journalfolder/restore-folder-from-trash',
	{
		folderId:${folderId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-JournalFolder-update-folder" description="jsonws-JournalFolder-update-folder" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.JournalFolder.update-folder6">Liferay.Service(
	'/journalfolder/update-folder',
	{
		folderId:${folderId},
		parentFolderId:${parentFolderId},
		name:${name},
		description:${description},
		mergeWithParentFolder:${mergeWithParentFolder},
		serviceContext:${serviceContext}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-JournalStructure-add-structure" description="jsonws-JournalStructure-add-structure" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.JournalStructure.add-structure8">Liferay.Service(
	'/journalstructure/add-structure',
	{
		groupId:${groupId},
		structureId:${structureId},
		autoStructureId:${autoStructureId},
		parentStructureId:${parentStructureId},
		nameMap:${nameMap},
		descriptionMap:${descriptionMap},
		xsd:${xsd},
		serviceContext:${serviceContext}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-JournalStructure-copy-structure" description="jsonws-JournalStructure-copy-structure" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.JournalStructure.copy-structure4">Liferay.Service(
	'/journalstructure/copy-structure',
	{
		groupId:${groupId},
		oldStructureId:${oldStructureId},
		newStructureId:${newStructureId},
		autoStructureId:${autoStructureId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-JournalStructure-delete-structure" description="jsonws-JournalStructure-delete-structure" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.JournalStructure.delete-structure2">Liferay.Service(
	'/journalstructure/delete-structure',
	{
		groupId:${groupId},
		structureId:${structureId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-JournalStructure-get-structure" description="jsonws-JournalStructure-get-structure" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.JournalStructure.get-structure2">Liferay.Service(
	'/journalstructure/get-structure',
	{
		groupId:${groupId},
		structureId:${structureId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-JournalStructure-get-structure" description="jsonws-JournalStructure-get-structure" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.JournalStructure.get-structure3">Liferay.Service(
	'/journalstructure/get-structure',
	{
		groupId:${groupId},
		structureId:${structureId},
		includeGlobalStructures:${includeGlobalStructures}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-JournalStructure-get-structures" description="jsonws-JournalStructure-get-structures" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.JournalStructure.get-structures1">Liferay.Service(
	'/journalstructure/get-structures',
	{
		groupId:${groupId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-JournalStructure-get-structures" description="jsonws-JournalStructure-get-structures" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.JournalStructure.get-structures1">Liferay.Service(
	'/journalstructure/get-structures',
	{
		groupIds:${groupIds}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-JournalStructure-search" description="jsonws-JournalStructure-search" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.JournalStructure.search6">Liferay.Service(
	'/journalstructure/search',
	{
		companyId:${companyId},
		groupIds:${groupIds},
		keywords:${keywords},
		start:${start},
		end:${end},
		obc:${obc}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-JournalStructure-search" description="jsonws-JournalStructure-search" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.JournalStructure.search9">Liferay.Service(
	'/journalstructure/search',
	{
		companyId:${companyId},
		groupIds:${groupIds},
		structureId:${structureId},
		name:${name},
		description:${description},
		andOperator:${andOperator},
		start:${start},
		end:${end},
		obc:${obc}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-JournalStructure-search-count" description="jsonws-JournalStructure-search-count" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.JournalStructure.search-count3">Liferay.Service(
	'/journalstructure/search-count',
	{
		companyId:${companyId},
		groupIds:${groupIds},
		keywords:${keywords}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-JournalStructure-search-count" description="jsonws-JournalStructure-search-count" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.JournalStructure.search-count6">Liferay.Service(
	'/journalstructure/search-count',
	{
		companyId:${companyId},
		groupIds:${groupIds},
		structureId:${structureId},
		name:${name},
		description:${description},
		andOperator:${andOperator}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-JournalStructure-update-structure" description="jsonws-JournalStructure-update-structure" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.JournalStructure.update-structure7">Liferay.Service(
	'/journalstructure/update-structure',
	{
		groupId:${groupId},
		structureId:${structureId},
		parentStructureId:${parentStructureId},
		nameMap:${nameMap},
		descriptionMap:${descriptionMap},
		xsd:${xsd},
		serviceContext:${serviceContext}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-JournalTemplate-add-template" description="jsonws-JournalTemplate-add-template" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.JournalTemplate.add-template11">Liferay.Service(
	'/journaltemplate/add-template',
	{
		groupId:${groupId},
		templateId:${templateId},
		autoTemplateId:${autoTemplateId},
		structureId:${structureId},
		nameMap:${nameMap},
		descriptionMap:${descriptionMap},
		xsl:${xsl},
		formatXsl:${formatXsl},
		langType:${langType},
		cacheable:${cacheable},
		serviceContext:${serviceContext}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-JournalTemplate-add-template" description="jsonws-JournalTemplate-add-template" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.JournalTemplate.add-template14">Liferay.Service(
	'/journaltemplate/add-template',
	{
		groupId:${groupId},
		templateId:${templateId},
		autoTemplateId:${autoTemplateId},
		structureId:${structureId},
		nameMap:${nameMap},
		descriptionMap:${descriptionMap},
		xsl:${xsl},
		formatXsl:${formatXsl},
		langType:${langType},
		cacheable:${cacheable},
		smallImage:${smallImage},
		smallImageURL:${smallImageURL},
		smallFile:${smallFile},
		serviceContext:${serviceContext}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-JournalTemplate-copy-template" description="jsonws-JournalTemplate-copy-template" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.JournalTemplate.copy-template4">Liferay.Service(
	'/journaltemplate/copy-template',
	{
		groupId:${groupId},
		oldTemplateId:${oldTemplateId},
		newTemplateId:${newTemplateId},
		autoTemplateId:${autoTemplateId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-JournalTemplate-delete-template" description="jsonws-JournalTemplate-delete-template" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.JournalTemplate.delete-template2">Liferay.Service(
	'/journaltemplate/delete-template',
	{
		groupId:${groupId},
		templateId:${templateId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-JournalTemplate-get-structure-templates" description="jsonws-JournalTemplate-get-structure-templates" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.JournalTemplate.get-structure-templates2">Liferay.Service(
	'/journaltemplate/get-structure-templates',
	{
		groupId:${groupId},
		structureId:${structureId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-JournalTemplate-get-template" description="jsonws-JournalTemplate-get-template" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.JournalTemplate.get-template2">Liferay.Service(
	'/journaltemplate/get-template',
	{
		groupId:${groupId},
		templateId:${templateId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-JournalTemplate-get-template" description="jsonws-JournalTemplate-get-template" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.JournalTemplate.get-template3">Liferay.Service(
	'/journaltemplate/get-template',
	{
		groupId:${groupId},
		templateId:${templateId},
		includeGlobalTemplates:${includeGlobalTemplates}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-JournalTemplate-search" description="jsonws-JournalTemplate-search" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.JournalTemplate.search11">Liferay.Service(
	'/journaltemplate/search',
	{
		companyId:${companyId},
		groupIds:${groupIds},
		templateId:${templateId},
		structureId:${structureId},
		structureIdComparator:${structureIdComparator},
		name:${name},
		description:${description},
		andOperator:${andOperator},
		start:${start},
		end:${end},
		obc:${obc}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-JournalTemplate-search" description="jsonws-JournalTemplate-search" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.JournalTemplate.search8">Liferay.Service(
	'/journaltemplate/search',
	{
		companyId:${companyId},
		groupIds:${groupIds},
		keywords:${keywords},
		structureId:${structureId},
		structureIdComparator:${structureIdComparator},
		start:${start},
		end:${end},
		obc:${obc}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-JournalTemplate-search-count" description="jsonws-JournalTemplate-search-count" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.JournalTemplate.search-count5">Liferay.Service(
	'/journaltemplate/search-count',
	{
		companyId:${companyId},
		groupIds:${groupIds},
		keywords:${keywords},
		structureId:${structureId},
		structureIdComparator:${structureIdComparator}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-JournalTemplate-search-count" description="jsonws-JournalTemplate-search-count" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.JournalTemplate.search-count8">Liferay.Service(
	'/journaltemplate/search-count',
	{
		companyId:${companyId},
		groupIds:${groupIds},
		templateId:${templateId},
		structureId:${structureId},
		structureIdComparator:${structureIdComparator},
		name:${name},
		description:${description},
		andOperator:${andOperator}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-JournalTemplate-update-template" description="jsonws-JournalTemplate-update-template" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.JournalTemplate.update-template10">Liferay.Service(
	'/journaltemplate/update-template',
	{
		groupId:${groupId},
		templateId:${templateId},
		structureId:${structureId},
		nameMap:${nameMap},
		descriptionMap:${descriptionMap},
		xsl:${xsl},
		formatXsl:${formatXsl},
		langType:${langType},
		cacheable:${cacheable},
		serviceContext:${serviceContext}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-JournalTemplate-update-template" description="jsonws-JournalTemplate-update-template" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.JournalTemplate.update-template13">Liferay.Service(
	'/journaltemplate/update-template',
	{
		groupId:${groupId},
		templateId:${templateId},
		structureId:${structureId},
		nameMap:${nameMap},
		descriptionMap:${descriptionMap},
		xsl:${xsl},
		formatXsl:${formatXsl},
		langType:${langType},
		cacheable:${cacheable},
		smallImage:${smallImage},
		smallImageURL:${smallImageURL},
		smallFile:${smallFile},
		serviceContext:${serviceContext}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-Layout-add-layout" description="jsonws-Layout-add-layout" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.Layout.add-layout10">Liferay.Service(
	'/layout/add-layout',
	{
		groupId:${groupId},
		privateLayout:${privateLayout},
		parentLayoutId:${parentLayoutId},
		name:${name},
		title:${title},
		description:${description},
		type:${type},
		hidden:${hidden},
		friendlyURL:${friendlyURL},
		serviceContext:${serviceContext}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-Layout-add-layout" description="jsonws-Layout-add-layout" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.Layout.add-layout12">Liferay.Service(
	'/layout/add-layout',
	{
		groupId:${groupId},
		privateLayout:${privateLayout},
		parentLayoutId:${parentLayoutId},
		localeNamesMap:${localeNamesMap},
		localeTitlesMap:${localeTitlesMap},
		descriptionMap:${descriptionMap},
		keywordsMap:${keywordsMap},
		robotsMap:${robotsMap},
		type:${type},
		hidden:${hidden},
		friendlyURL:${friendlyURL},
		serviceContext:${serviceContext}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-Layout-add-layout" description="jsonws-Layout-add-layout" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.Layout.add-layout13">Liferay.Service(
	'/layout/add-layout',
	{
		groupId:${groupId},
		privateLayout:${privateLayout},
		parentLayoutId:${parentLayoutId},
		localeNamesMap:${localeNamesMap},
		localeTitlesMap:${localeTitlesMap},
		descriptionMap:${descriptionMap},
		keywordsMap:${keywordsMap},
		robotsMap:${robotsMap},
		type:${type},
		typeSettings:${typeSettings},
		hidden:${hidden},
		friendlyURLMap:${friendlyURLMap},
		serviceContext:${serviceContext}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-Layout-delete-layout" description="jsonws-Layout-delete-layout" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.Layout.delete-layout2">Liferay.Service(
	'/layout/delete-layout',
	{
		plid:${plid},
		serviceContext:${serviceContext}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-Layout-delete-layout" description="jsonws-Layout-delete-layout" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.Layout.delete-layout4">Liferay.Service(
	'/layout/delete-layout',
	{
		groupId:${groupId},
		privateLayout:${privateLayout},
		layoutId:${layoutId},
		serviceContext:${serviceContext}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-Layout-delete-temp-file-entry" description="jsonws-Layout-delete-temp-file-entry" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.Layout.delete-temp-file-entry3">Liferay.Service(
	'/layout/delete-temp-file-entry',
	{
		groupId:${groupId},
		fileName:${fileName},
		tempFolderName:${tempFolderName}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-Layout-export-layouts" description="jsonws-Layout-export-layouts" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.Layout.export-layouts5">Liferay.Service(
	'/layout/export-layouts',
	{
		groupId:${groupId},
		privateLayout:${privateLayout},
		parameterMap:${parameterMap},
		startDate:${startDate},
		endDate:${endDate}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-Layout-export-layouts" description="jsonws-Layout-export-layouts" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.Layout.export-layouts6">Liferay.Service(
	'/layout/export-layouts',
	{
		groupId:${groupId},
		privateLayout:${privateLayout},
		layoutIds:${layoutIds},
		parameterMap:${parameterMap},
		startDate:${startDate},
		endDate:${endDate}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-Layout-export-layouts-as-file" description="jsonws-Layout-export-layouts-as-file" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.Layout.export-layouts-as-file6">Liferay.Service(
	'/layout/export-layouts-as-file',
	{
		groupId:${groupId},
		privateLayout:${privateLayout},
		layoutIds:${layoutIds},
		parameterMap:${parameterMap},
		startDate:${startDate},
		endDate:${endDate}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-Layout-export-layouts-as-file-in-background" description="jsonws-Layout-export-layouts-as-file-in-background" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.Layout.export-layouts-as-file-in-background8">Liferay.Service(
	'/layout/export-layouts-as-file-in-background',
	{
		taskName:${taskName},
		groupId:${groupId},
		privateLayout:${privateLayout},
		layoutIds:${layoutIds},
		parameterMap:${parameterMap},
		startDate:${startDate},
		endDate:${endDate},
		fileName:${fileName}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-Layout-export-portlet-info" description="jsonws-Layout-export-portlet-info" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.Layout.export-portlet-info5">Liferay.Service(
	'/layout/export-portlet-info',
	{
		companyId:${companyId},
		portletId:${portletId},
		parameterMap:${parameterMap},
		startDate:${startDate},
		endDate:${endDate}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-Layout-export-portlet-info" description="jsonws-Layout-export-portlet-info" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.Layout.export-portlet-info6">Liferay.Service(
	'/layout/export-portlet-info',
	{
		plid:${plid},
		groupId:${groupId},
		portletId:${portletId},
		parameterMap:${parameterMap},
		startDate:${startDate},
		endDate:${endDate}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-Layout-export-portlet-info-as-file" description="jsonws-Layout-export-portlet-info-as-file" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.Layout.export-portlet-info-as-file4">Liferay.Service(
	'/layout/export-portlet-info-as-file',
	{
		portletId:${portletId},
		parameterMap:${parameterMap},
		startDate:${startDate},
		endDate:${endDate}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-Layout-export-portlet-info-as-file" description="jsonws-Layout-export-portlet-info-as-file" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.Layout.export-portlet-info-as-file6">Liferay.Service(
	'/layout/export-portlet-info-as-file',
	{
		plid:${plid},
		groupId:${groupId},
		portletId:${portletId},
		parameterMap:${parameterMap},
		startDate:${startDate},
		endDate:${endDate}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-Layout-export-portlet-info-as-file-in-background" description="jsonws-Layout-export-portlet-info-as-file-in-background" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.Layout.export-portlet-info-as-file-in-background6">Liferay.Service(
	'/layout/export-portlet-info-as-file-in-background',
	{
		taskName:${taskName},
		portletId:${portletId},
		parameterMap:${parameterMap},
		startDate:${startDate},
		endDate:${endDate},
		fileName:${fileName}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-Layout-export-portlet-info-as-file-in-background" description="jsonws-Layout-export-portlet-info-as-file-in-background" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.Layout.export-portlet-info-as-file-in-background8">Liferay.Service(
	'/layout/export-portlet-info-as-file-in-background',
	{
		taskName:${taskName},
		plid:${plid},
		groupId:${groupId},
		portletId:${portletId},
		parameterMap:${parameterMap},
		startDate:${startDate},
		endDate:${endDate},
		fileName:${fileName}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-Layout-get-ancestor-layouts" description="jsonws-Layout-get-ancestor-layouts" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.Layout.get-ancestor-layouts1">Liferay.Service(
	'/layout/get-ancestor-layouts',
	{
		plid:${plid}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-Layout-get-default-plid" description="jsonws-Layout-get-default-plid" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.Layout.get-default-plid3">Liferay.Service(
	'/layout/get-default-plid',
	{
		groupId:${groupId},
		scopeGroupId:${scopeGroupId},
		portletId:${portletId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-Layout-get-default-plid" description="jsonws-Layout-get-default-plid" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.Layout.get-default-plid4">Liferay.Service(
	'/layout/get-default-plid',
	{
		groupId:${groupId},
		scopeGroupId:${scopeGroupId},
		privateLayout:${privateLayout},
		portletId:${portletId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-Layout-get-layout-by-uuid-and-group-id" description="jsonws-Layout-get-layout-by-uuid-and-group-id" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.Layout.get-layout-by-uuid-and-group-id3">Liferay.Service(
	'/layout/get-layout-by-uuid-and-group-id',
	{
		uuid:${uuid},
		groupId:${groupId},
		privateLayout:${privateLayout}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-Layout-get-layout-name" description="jsonws-Layout-get-layout-name" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.Layout.get-layout-name4">Liferay.Service(
	'/layout/get-layout-name',
	{
		groupId:${groupId},
		privateLayout:${privateLayout},
		layoutId:${layoutId},
		languageId:${languageId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-Layout-get-layout-references" description="jsonws-Layout-get-layout-references" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.Layout.get-layout-references4">Liferay.Service(
	'/layout/get-layout-references',
	{
		companyId:${companyId},
		portletId:${portletId},
		preferencesKey:${preferencesKey},
		preferencesValue:${preferencesValue}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-Layout-get-layouts" description="jsonws-Layout-get-layouts" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.Layout.get-layouts2">Liferay.Service(
	'/layout/get-layouts',
	{
		groupId:${groupId},
		privateLayout:${privateLayout}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-Layout-get-layouts" description="jsonws-Layout-get-layouts" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.Layout.get-layouts3">Liferay.Service(
	'/layout/get-layouts',
	{
		groupId:${groupId},
		privateLayout:${privateLayout},
		parentLayoutId:${parentLayoutId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-Layout-get-layouts" description="jsonws-Layout-get-layouts" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.Layout.get-layouts6">Liferay.Service(
	'/layout/get-layouts',
	{
		groupId:${groupId},
		privateLayout:${privateLayout},
		parentLayoutId:${parentLayoutId},
		incomplete:${incomplete},
		start:${start},
		end:${end}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-Layout-get-temp-file-entry-names" description="jsonws-Layout-get-temp-file-entry-names" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.Layout.get-temp-file-entry-names2">Liferay.Service(
	'/layout/get-temp-file-entry-names',
	{
		groupId:${groupId},
		tempFolderName:${tempFolderName}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-Layout-import-layouts" description="jsonws-Layout-import-layouts" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.Layout.import-layouts4">Liferay.Service(
	'/layout/import-layouts',
	{
		groupId:${groupId},
		privateLayout:${privateLayout},
		parameterMap:${parameterMap},
		bytes:${bytes}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-Layout-import-layouts" description="jsonws-Layout-import-layouts" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.Layout.import-layouts4">Liferay.Service(
	'/layout/import-layouts',
	{
		groupId:${groupId},
		privateLayout:${privateLayout},
		parameterMap:${parameterMap},
		file:${file}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-Layout-import-layouts-in-background" description="jsonws-Layout-import-layouts-in-background" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.Layout.import-layouts-in-background5">Liferay.Service(
	'/layout/import-layouts-in-background',
	{
		taskName:${taskName},
		groupId:${groupId},
		privateLayout:${privateLayout},
		parameterMap:${parameterMap},
		file:${file}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-Layout-import-portlet-info" description="jsonws-Layout-import-portlet-info" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.Layout.import-portlet-info3">Liferay.Service(
	'/layout/import-portlet-info',
	{
		portletId:${portletId},
		parameterMap:${parameterMap},
		file:${file}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-Layout-import-portlet-info" description="jsonws-Layout-import-portlet-info" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.Layout.import-portlet-info5">Liferay.Service(
	'/layout/import-portlet-info',
	{
		plid:${plid},
		groupId:${groupId},
		portletId:${portletId},
		parameterMap:${parameterMap},
		file:${file}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-Layout-import-portlet-info-in-background" description="jsonws-Layout-import-portlet-info-in-background" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.Layout.import-portlet-info-in-background4">Liferay.Service(
	'/layout/import-portlet-info-in-background',
	{
		taskName:${taskName},
		portletId:${portletId},
		parameterMap:${parameterMap},
		file:${file}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-Layout-import-portlet-info-in-background" description="jsonws-Layout-import-portlet-info-in-background" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.Layout.import-portlet-info-in-background6">Liferay.Service(
	'/layout/import-portlet-info-in-background',
	{
		taskName:${taskName},
		plid:${plid},
		groupId:${groupId},
		portletId:${portletId},
		parameterMap:${parameterMap},
		file:${file}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-Layout-schedule-publish-to-live" description="jsonws-Layout-schedule-publish-to-live" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.Layout.schedule-publish-to-live13">Liferay.Service(
	'/layout/schedule-publish-to-live',
	{
		sourceGroupId:${sourceGroupId},
		targetGroupId:${targetGroupId},
		privateLayout:${privateLayout},
		layoutIdMap:${layoutIdMap},
		parameterMap:${parameterMap},
		scope:${scope},
		startDate:${startDate},
		endDate:${endDate},
		groupName:${groupName},
		cronText:${cronText},
		schedulerStartDate:${schedulerStartDate},
		schedulerEndDate:${schedulerEndDate},
		description:${description}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-Layout-schedule-publish-to-remote" description="jsonws-Layout-schedule-publish-to-remote" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.Layout.schedule-publish-to-remote17">Liferay.Service(
	'/layout/schedule-publish-to-remote',
	{
		sourceGroupId:${sourceGroupId},
		privateLayout:${privateLayout},
		layoutIdMap:${layoutIdMap},
		parameterMap:${parameterMap},
		remoteAddress:${remoteAddress},
		remotePort:${remotePort},
		remotePathContext:${remotePathContext},
		secureConnection:${secureConnection},
		remoteGroupId:${remoteGroupId},
		remotePrivateLayout:${remotePrivateLayout},
		startDate:${startDate},
		endDate:${endDate},
		groupName:${groupName},
		cronText:${cronText},
		schedulerStartDate:${schedulerStartDate},
		schedulerEndDate:${schedulerEndDate},
		description:${description}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-Layout-set-layouts" description="jsonws-Layout-set-layouts" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.Layout.set-layouts5">Liferay.Service(
	'/layout/set-layouts',
	{
		groupId:${groupId},
		privateLayout:${privateLayout},
		parentLayoutId:${parentLayoutId},
		layoutIds:${layoutIds},
		serviceContext:${serviceContext}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-Layout-unschedule-publish-to-live" description="jsonws-Layout-unschedule-publish-to-live" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.Layout.unschedule-publish-to-live3">Liferay.Service(
	'/layout/unschedule-publish-to-live',
	{
		groupId:${groupId},
		jobName:${jobName},
		groupName:${groupName}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-Layout-unschedule-publish-to-remote" description="jsonws-Layout-unschedule-publish-to-remote" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.Layout.unschedule-publish-to-remote3">Liferay.Service(
	'/layout/unschedule-publish-to-remote',
	{
		groupId:${groupId},
		jobName:${jobName},
		groupName:${groupName}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-Layout-update-layout" description="jsonws-Layout-update-layout" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.Layout.update-layout15">Liferay.Service(
	'/layout/update-layout',
	{
		groupId:${groupId},
		privateLayout:${privateLayout},
		layoutId:${layoutId},
		parentLayoutId:${parentLayoutId},
		localeNamesMap:${localeNamesMap},
		localeTitlesMap:${localeTitlesMap},
		descriptionMap:${descriptionMap},
		keywordsMap:${keywordsMap},
		robotsMap:${robotsMap},
		type:${type},
		hidden:${hidden},
		friendlyURL:${friendlyURL},
		iconImage:${iconImage},
		iconBytes:${iconBytes},
		serviceContext:${serviceContext}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-Layout-update-layout" description="jsonws-Layout-update-layout" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.Layout.update-layout15">Liferay.Service(
	'/layout/update-layout',
	{
		groupId:${groupId},
		privateLayout:${privateLayout},
		layoutId:${layoutId},
		parentLayoutId:${parentLayoutId},
		localeNamesMap:${localeNamesMap},
		localeTitlesMap:${localeTitlesMap},
		descriptionMap:${descriptionMap},
		keywordsMap:${keywordsMap},
		robotsMap:${robotsMap},
		type:${type},
		hidden:${hidden},
		friendlyURLMap:${friendlyURLMap},
		iconImage:${iconImage},
		iconBytes:${iconBytes},
		serviceContext:${serviceContext}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-Layout-update-layout" description="jsonws-Layout-update-layout" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.Layout.update-layout4">Liferay.Service(
	'/layout/update-layout',
	{
		groupId:${groupId},
		privateLayout:${privateLayout},
		layoutId:${layoutId},
		typeSettings:${typeSettings}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-Layout-update-look-and-feel" description="jsonws-Layout-update-look-and-feel" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.Layout.update-look-and-feel7">Liferay.Service(
	'/layout/update-look-and-feel',
	{
		groupId:${groupId},
		privateLayout:${privateLayout},
		layoutId:${layoutId},
		themeId:${themeId},
		colorSchemeId:${colorSchemeId},
		css:${css},
		wapTheme:${wapTheme}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-Layout-update-name" description="jsonws-Layout-update-name" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.Layout.update-name3">Liferay.Service(
	'/layout/update-name',
	{
		plid:${plid},
		name:${name},
		languageId:${languageId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-Layout-update-name" description="jsonws-Layout-update-name" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.Layout.update-name5">Liferay.Service(
	'/layout/update-name',
	{
		groupId:${groupId},
		privateLayout:${privateLayout},
		layoutId:${layoutId},
		name:${name},
		languageId:${languageId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-Layout-update-parent-layout-id" description="jsonws-Layout-update-parent-layout-id" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.Layout.update-parent-layout-id2">Liferay.Service(
	'/layout/update-parent-layout-id',
	{
		plid:${plid},
		parentPlid:${parentPlid}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-Layout-update-parent-layout-id" description="jsonws-Layout-update-parent-layout-id" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.Layout.update-parent-layout-id4">Liferay.Service(
	'/layout/update-parent-layout-id',
	{
		groupId:${groupId},
		privateLayout:${privateLayout},
		layoutId:${layoutId},
		parentLayoutId:${parentLayoutId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-Layout-update-priority" description="jsonws-Layout-update-priority" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.Layout.update-priority2">Liferay.Service(
	'/layout/update-priority',
	{
		plid:${plid},
		priority:${priority}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-Layout-update-priority" description="jsonws-Layout-update-priority" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.Layout.update-priority4">Liferay.Service(
	'/layout/update-priority',
	{
		groupId:${groupId},
		privateLayout:${privateLayout},
		layoutId:${layoutId},
		priority:${priority}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-Layout-update-priority" description="jsonws-Layout-update-priority" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.Layout.update-priority5">Liferay.Service(
	'/layout/update-priority',
	{
		groupId:${groupId},
		privateLayout:${privateLayout},
		layoutId:${layoutId},
		nextLayoutId:${nextLayoutId},
		previousLayoutId:${previousLayoutId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-Layout-validate-import-layouts-file" description="jsonws-Layout-validate-import-layouts-file" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.Layout.validate-import-layouts-file4">Liferay.Service(
	'/layout/validate-import-layouts-file',
	{
		groupId:${groupId},
		privateLayout:${privateLayout},
		parameterMap:${parameterMap},
		file:${file}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-Layout-validate-import-portlet-info" description="jsonws-Layout-validate-import-portlet-info" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.Layout.validate-import-portlet-info5">Liferay.Service(
	'/layout/validate-import-portlet-info',
	{
		plid:${plid},
		groupId:${groupId},
		portletId:${portletId},
		parameterMap:${parameterMap},
		file:${file}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-LayoutBranch-add-layout-branch" description="jsonws-LayoutBranch-add-layout-branch" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.LayoutBranch.add-layout-branch5">Liferay.Service(
	'/layoutbranch/add-layout-branch',
	{
		layoutRevisionId:${layoutRevisionId},
		name:${name},
		description:${description},
		master:${master},
		serviceContext:${serviceContext}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-LayoutBranch-delete-layout-branch" description="jsonws-LayoutBranch-delete-layout-branch" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.LayoutBranch.delete-layout-branch1">Liferay.Service(
	'/layoutbranch/delete-layout-branch',
	{
		layoutBranchId:${layoutBranchId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-LayoutBranch-update-layout-branch" description="jsonws-LayoutBranch-update-layout-branch" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.LayoutBranch.update-layout-branch4">Liferay.Service(
	'/layoutbranch/update-layout-branch',
	{
		layoutBranchId:${layoutBranchId},
		name:${name},
		description:${description},
		serviceContext:${serviceContext}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-LayoutPrototype-add-layout-prototype" description="jsonws-LayoutPrototype-add-layout-prototype" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.LayoutPrototype.add-layout-prototype3">Liferay.Service(
	'/layoutprototype/add-layout-prototype',
	{
		nameMap:${nameMap},
		description:${description},
		active:${active}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-LayoutPrototype-add-layout-prototype" description="jsonws-LayoutPrototype-add-layout-prototype" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.LayoutPrototype.add-layout-prototype4">Liferay.Service(
	'/layoutprototype/add-layout-prototype',
	{
		nameMap:${nameMap},
		description:${description},
		active:${active},
		serviceContext:${serviceContext}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-LayoutPrototype-delete-layout-prototype" description="jsonws-LayoutPrototype-delete-layout-prototype" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.LayoutPrototype.delete-layout-prototype1">Liferay.Service(
	'/layoutprototype/delete-layout-prototype',
	{
		layoutPrototypeId:${layoutPrototypeId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-LayoutPrototype-get-layout-prototype" description="jsonws-LayoutPrototype-get-layout-prototype" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.LayoutPrototype.get-layout-prototype1">Liferay.Service(
	'/layoutprototype/get-layout-prototype',
	{
		layoutPrototypeId:${layoutPrototypeId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-LayoutPrototype-search" description="jsonws-LayoutPrototype-search" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.LayoutPrototype.search3">Liferay.Service(
	'/layoutprototype/search',
	{
		companyId:${companyId},
		active:${active},
		obc:${obc}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-LayoutPrototype-update-layout-prototype" description="jsonws-LayoutPrototype-update-layout-prototype" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.LayoutPrototype.update-layout-prototype4">Liferay.Service(
	'/layoutprototype/update-layout-prototype',
	{
		layoutPrototypeId:${layoutPrototypeId},
		nameMap:${nameMap},
		description:${description},
		active:${active}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-LayoutPrototype-update-layout-prototype" description="jsonws-LayoutPrototype-update-layout-prototype" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.LayoutPrototype.update-layout-prototype5">Liferay.Service(
	'/layoutprototype/update-layout-prototype',
	{
		layoutPrototypeId:${layoutPrototypeId},
		nameMap:${nameMap},
		description:${description},
		active:${active},
		serviceContext:${serviceContext}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-LayoutRevision-add-layout-revision" description="jsonws-LayoutRevision-add-layout-revision" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.LayoutRevision.add-layout-revision22">Liferay.Service(
	'/layoutrevision/add-layout-revision',
	{
		userId:${userId},
		layoutSetBranchId:${layoutSetBranchId},
		layoutBranchId:${layoutBranchId},
		parentLayoutRevisionId:${parentLayoutRevisionId},
		head:${head},
		plid:${plid},
		portletPreferencesPlid:${portletPreferencesPlid},
		privateLayout:${privateLayout},
		name:${name},
		title:${title},
		description:${description},
		keywords:${keywords},
		robots:${robots},
		typeSettings:${typeSettings},
		iconImage:${iconImage},
		iconImageId:${iconImageId},
		themeId:${themeId},
		colorSchemeId:${colorSchemeId},
		wapThemeId:${wapThemeId},
		wapColorSchemeId:${wapColorSchemeId},
		css:${css},
		serviceContext:${serviceContext}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-LayoutSet-update-layout-set-prototype-link-enabled" description="jsonws-LayoutSet-update-layout-set-prototype-link-enabled" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.LayoutSet.update-layout-set-prototype-link-enabled4">Liferay.Service(
	'/layoutset/update-layout-set-prototype-link-enabled',
	{
		groupId:${groupId},
		privateLayout:${privateLayout},
		layoutSetPrototypeLinkEnabled:${layoutSetPrototypeLinkEnabled},
		layoutSetPrototypeUuid:${layoutSetPrototypeUuid}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-LayoutSet-update-logo" description="jsonws-LayoutSet-update-logo" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.LayoutSet.update-logo4">Liferay.Service(
	'/layoutset/update-logo',
	{
		groupId:${groupId},
		privateLayout:${privateLayout},
		logo:${logo},
		bytes:${bytes}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-LayoutSet-update-logo" description="jsonws-LayoutSet-update-logo" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.LayoutSet.update-logo4">Liferay.Service(
	'/layoutset/update-logo',
	{
		groupId:${groupId},
		privateLayout:${privateLayout},
		logo:${logo},
		file:${file}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-LayoutSet-update-look-and-feel" description="jsonws-LayoutSet-update-look-and-feel" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.LayoutSet.update-look-and-feel6">Liferay.Service(
	'/layoutset/update-look-and-feel',
	{
		groupId:${groupId},
		privateLayout:${privateLayout},
		themeId:${themeId},
		colorSchemeId:${colorSchemeId},
		css:${css},
		wapTheme:${wapTheme}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-LayoutSet-update-settings" description="jsonws-LayoutSet-update-settings" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.LayoutSet.update-settings3">Liferay.Service(
	'/layoutset/update-settings',
	{
		groupId:${groupId},
		privateLayout:${privateLayout},
		settings:${settings}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-LayoutSet-update-virtual-host" description="jsonws-LayoutSet-update-virtual-host" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.LayoutSet.update-virtual-host3">Liferay.Service(
	'/layoutset/update-virtual-host',
	{
		groupId:${groupId},
		privateLayout:${privateLayout},
		virtualHost:${virtualHost}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-LayoutSetBranch-add-layout-set-branch" description="jsonws-LayoutSetBranch-add-layout-set-branch" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.LayoutSetBranch.add-layout-set-branch7">Liferay.Service(
	'/layoutsetbranch/add-layout-set-branch',
	{
		groupId:${groupId},
		privateLayout:${privateLayout},
		name:${name},
		description:${description},
		master:${master},
		copyLayoutSetBranchId:${copyLayoutSetBranchId},
		serviceContext:${serviceContext}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-LayoutSetBranch-delete-layout-set-branch" description="jsonws-LayoutSetBranch-delete-layout-set-branch" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.LayoutSetBranch.delete-layout-set-branch1">Liferay.Service(
	'/layoutsetbranch/delete-layout-set-branch',
	{
		layoutSetBranchId:${layoutSetBranchId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-LayoutSetBranch-get-layout-set-branches" description="jsonws-LayoutSetBranch-get-layout-set-branches" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.LayoutSetBranch.get-layout-set-branches2">Liferay.Service(
	'/layoutsetbranch/get-layout-set-branches',
	{
		groupId:${groupId},
		privateLayout:${privateLayout}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-LayoutSetBranch-merge-layout-set-branch" description="jsonws-LayoutSetBranch-merge-layout-set-branch" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.LayoutSetBranch.merge-layout-set-branch3">Liferay.Service(
	'/layoutsetbranch/merge-layout-set-branch',
	{
		layoutSetBranchId:${layoutSetBranchId},
		mergeLayoutSetBranchId:${mergeLayoutSetBranchId},
		serviceContext:${serviceContext}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-LayoutSetBranch-update-layout-set-branch" description="jsonws-LayoutSetBranch-update-layout-set-branch" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.LayoutSetBranch.update-layout-set-branch5">Liferay.Service(
	'/layoutsetbranch/update-layout-set-branch',
	{
		groupId:${groupId},
		layoutSetBranchId:${layoutSetBranchId},
		name:${name},
		description:${description},
		serviceContext:${serviceContext}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-LayoutSetPrototype-add-layout-set-prototype" description="jsonws-LayoutSetPrototype-add-layout-set-prototype" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.LayoutSetPrototype.add-layout-set-prototype5">Liferay.Service(
	'/layoutsetprototype/add-layout-set-prototype',
	{
		nameMap:${nameMap},
		description:${description},
		active:${active},
		layoutsUpdateable:${layoutsUpdateable},
		serviceContext:${serviceContext}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-LayoutSetPrototype-delete-layout-set-prototype" description="jsonws-LayoutSetPrototype-delete-layout-set-prototype" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.LayoutSetPrototype.delete-layout-set-prototype1">Liferay.Service(
	'/layoutsetprototype/delete-layout-set-prototype',
	{
		layoutSetPrototypeId:${layoutSetPrototypeId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-LayoutSetPrototype-get-layout-set-prototype" description="jsonws-LayoutSetPrototype-get-layout-set-prototype" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.LayoutSetPrototype.get-layout-set-prototype1">Liferay.Service(
	'/layoutsetprototype/get-layout-set-prototype',
	{
		layoutSetPrototypeId:${layoutSetPrototypeId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-LayoutSetPrototype-search" description="jsonws-LayoutSetPrototype-search" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.LayoutSetPrototype.search3">Liferay.Service(
	'/layoutsetprototype/search',
	{
		companyId:${companyId},
		active:${active},
		obc:${obc}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-LayoutSetPrototype-update-layout-set-prototype" description="jsonws-LayoutSetPrototype-update-layout-set-prototype" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.LayoutSetPrototype.update-layout-set-prototype2">Liferay.Service(
	'/layoutsetprototype/update-layout-set-prototype',
	{
		layoutSetPrototypeId:${layoutSetPrototypeId},
		settings:${settings}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-LayoutSetPrototype-update-layout-set-prototype" description="jsonws-LayoutSetPrototype-update-layout-set-prototype" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.LayoutSetPrototype.update-layout-set-prototype6">Liferay.Service(
	'/layoutsetprototype/update-layout-set-prototype',
	{
		layoutSetPrototypeId:${layoutSetPrototypeId},
		nameMap:${nameMap},
		description:${description},
		active:${active},
		layoutsUpdateable:${layoutsUpdateable},
		serviceContext:${serviceContext}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-ListType-get-list-type" description="jsonws-ListType-get-list-type" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.ListType.get-list-type1">Liferay.Service(
	'/listtype/get-list-type',
	{
		listTypeId:${listTypeId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-ListType-get-list-types" description="jsonws-ListType-get-list-types" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.ListType.get-list-types1">Liferay.Service(
	'/listtype/get-list-types',
	{
		type:${type}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-ListType-validate" description="jsonws-ListType-validate" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.ListType.validate2">Liferay.Service(
	'/listtype/validate',
	{
		listTypeId:${listTypeId},
		type:${type}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-ListType-validate" description="jsonws-ListType-validate" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.ListType.validate3">Liferay.Service(
	'/listtype/validate',
	{
		listTypeId:${listTypeId},
		classNameId:${classNameId},
		type:${type}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-MBBan-add-ban" description="jsonws-MBBan-add-ban" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.MBBan.add-ban2">Liferay.Service(
	'/mbban/add-ban',
	{
		banUserId:${banUserId},
		serviceContext:${serviceContext}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-MBBan-delete-ban" description="jsonws-MBBan-delete-ban" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.MBBan.delete-ban2">Liferay.Service(
	'/mbban/delete-ban',
	{
		banUserId:${banUserId},
		serviceContext:${serviceContext}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-MBCategory-add-category" description="jsonws-MBCategory-add-category" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.MBCategory.add-category22">Liferay.Service(
	'/mbcategory/add-category',
	{
		parentCategoryId:${parentCategoryId},
		name:${name},
		description:${description},
		displayStyle:${displayStyle},
		emailAddress:${emailAddress},
		inProtocol:${inProtocol},
		inServerName:${inServerName},
		inServerPort:${inServerPort},
		inUseSSL:${inUseSSL},
		inUserName:${inUserName},
		inPassword:${inPassword},
		inReadInterval:${inReadInterval},
		outEmailAddress:${outEmailAddress},
		outCustom:${outCustom},
		outServerName:${outServerName},
		outServerPort:${outServerPort},
		outUseSSL:${outUseSSL},
		outUserName:${outUserName},
		outPassword:${outPassword},
		mailingListActive:${mailingListActive},
		allowAnonymousEmail:${allowAnonymousEmail},
		serviceContext:${serviceContext}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-MBCategory-add-category" description="jsonws-MBCategory-add-category" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.MBCategory.add-category5">Liferay.Service(
	'/mbcategory/add-category',
	{
		userId:${userId},
		parentCategoryId:${parentCategoryId},
		name:${name},
		description:${description},
		serviceContext:${serviceContext}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-MBCategory-delete-category" description="jsonws-MBCategory-delete-category" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.MBCategory.delete-category2">Liferay.Service(
	'/mbcategory/delete-category',
	{
		categoryId:${categoryId},
		includeTrashedEntries:${includeTrashedEntries}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-MBCategory-delete-category" description="jsonws-MBCategory-delete-category" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.MBCategory.delete-category2">Liferay.Service(
	'/mbcategory/delete-category',
	{
		groupId:${groupId},
		categoryId:${categoryId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-MBCategory-get-categories" description="jsonws-MBCategory-get-categories" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.MBCategory.get-categories1">Liferay.Service(
	'/mbcategory/get-categories',
	{
		groupId:${groupId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-MBCategory-get-categories" description="jsonws-MBCategory-get-categories" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.MBCategory.get-categories2">Liferay.Service(
	'/mbcategory/get-categories',
	{
		groupId:${groupId},
		status:${status}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-MBCategory-get-categories" description="jsonws-MBCategory-get-categories" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.MBCategory.get-categories4">Liferay.Service(
	'/mbcategory/get-categories',
	{
		groupId:${groupId},
		parentCategoryId:${parentCategoryId},
		start:${start},
		end:${end}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-MBCategory-get-categories" description="jsonws-MBCategory-get-categories" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.MBCategory.get-categories4">Liferay.Service(
	'/mbcategory/get-categories',
	{
		groupId:${groupId},
		parentCategoryIds:${parentCategoryIds},
		start:${start},
		end:${end}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-MBCategory-get-categories" description="jsonws-MBCategory-get-categories" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.MBCategory.get-categories5">Liferay.Service(
	'/mbcategory/get-categories',
	{
		groupId:${groupId},
		parentCategoryId:${parentCategoryId},
		status:${status},
		start:${start},
		end:${end}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-MBCategory-get-categories" description="jsonws-MBCategory-get-categories" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.MBCategory.get-categories5">Liferay.Service(
	'/mbcategory/get-categories',
	{
		groupId:${groupId},
		parentCategoryIds:${parentCategoryIds},
		status:${status},
		start:${start},
		end:${end}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-MBCategory-get-categories-count" description="jsonws-MBCategory-get-categories-count" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.MBCategory.get-categories-count2">Liferay.Service(
	'/mbcategory/get-categories-count',
	{
		groupId:${groupId},
		parentCategoryId:${parentCategoryId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-MBCategory-get-categories-count" description="jsonws-MBCategory-get-categories-count" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.MBCategory.get-categories-count2">Liferay.Service(
	'/mbcategory/get-categories-count',
	{
		groupId:${groupId},
		parentCategoryIds:${parentCategoryIds}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-MBCategory-get-categories-count" description="jsonws-MBCategory-get-categories-count" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.MBCategory.get-categories-count3">Liferay.Service(
	'/mbcategory/get-categories-count',
	{
		groupId:${groupId},
		parentCategoryId:${parentCategoryId},
		status:${status}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-MBCategory-get-categories-count" description="jsonws-MBCategory-get-categories-count" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.MBCategory.get-categories-count3">Liferay.Service(
	'/mbcategory/get-categories-count',
	{
		groupId:${groupId},
		parentCategoryIds:${parentCategoryIds},
		status:${status}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-MBCategory-get-category" description="jsonws-MBCategory-get-category" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.MBCategory.get-category1">Liferay.Service(
	'/mbcategory/get-category',
	{
		categoryId:${categoryId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-MBCategory-get-category-ids" description="jsonws-MBCategory-get-category-ids" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.MBCategory.get-category-ids2">Liferay.Service(
	'/mbcategory/get-category-ids',
	{
		groupId:${groupId},
		categoryId:${categoryId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-MBCategory-get-subcategory-ids" description="jsonws-MBCategory-get-subcategory-ids" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.MBCategory.get-subcategory-ids3">Liferay.Service(
	'/mbcategory/get-subcategory-ids',
	{
		categoryIds:${categoryIds},
		groupId:${groupId},
		categoryId:${categoryId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-MBCategory-get-subscribed-categories" description="jsonws-MBCategory-get-subscribed-categories" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.MBCategory.get-subscribed-categories4">Liferay.Service(
	'/mbcategory/get-subscribed-categories',
	{
		groupId:${groupId},
		userId:${userId},
		start:${start},
		end:${end}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-MBCategory-get-subscribed-categories-count" description="jsonws-MBCategory-get-subscribed-categories-count" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.MBCategory.get-subscribed-categories-count2">Liferay.Service(
	'/mbcategory/get-subscribed-categories-count',
	{
		groupId:${groupId},
		userId:${userId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-MBCategory-move-category" description="jsonws-MBCategory-move-category" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.MBCategory.move-category3">Liferay.Service(
	'/mbcategory/move-category',
	{
		categoryId:${categoryId},
		parentCategoryId:${parentCategoryId},
		mergeWithParentCategory:${mergeWithParentCategory}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-MBCategory-move-category-from-trash" description="jsonws-MBCategory-move-category-from-trash" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.MBCategory.move-category-from-trash2">Liferay.Service(
	'/mbcategory/move-category-from-trash',
	{
		categoryId:${categoryId},
		newCategoryId:${newCategoryId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-MBCategory-move-category-to-trash" description="jsonws-MBCategory-move-category-to-trash" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.MBCategory.move-category-to-trash1">Liferay.Service(
	'/mbcategory/move-category-to-trash',
	{
		categoryId:${categoryId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-MBCategory-restore-category-from-trash" description="jsonws-MBCategory-restore-category-from-trash" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.MBCategory.restore-category-from-trash1">Liferay.Service(
	'/mbcategory/restore-category-from-trash',
	{
		categoryId:${categoryId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-MBCategory-subscribe-category" description="jsonws-MBCategory-subscribe-category" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.MBCategory.subscribe-category2">Liferay.Service(
	'/mbcategory/subscribe-category',
	{
		groupId:${groupId},
		categoryId:${categoryId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-MBCategory-unsubscribe-category" description="jsonws-MBCategory-unsubscribe-category" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.MBCategory.unsubscribe-category2">Liferay.Service(
	'/mbcategory/unsubscribe-category',
	{
		groupId:${groupId},
		categoryId:${categoryId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-MBCategory-update-category" description="jsonws-MBCategory-update-category" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.MBCategory.update-category24">Liferay.Service(
	'/mbcategory/update-category',
	{
		categoryId:${categoryId},
		parentCategoryId:${parentCategoryId},
		name:${name},
		description:${description},
		displayStyle:${displayStyle},
		emailAddress:${emailAddress},
		inProtocol:${inProtocol},
		inServerName:${inServerName},
		inServerPort:${inServerPort},
		inUseSSL:${inUseSSL},
		inUserName:${inUserName},
		inPassword:${inPassword},
		inReadInterval:${inReadInterval},
		outEmailAddress:${outEmailAddress},
		outCustom:${outCustom},
		outServerName:${outServerName},
		outServerPort:${outServerPort},
		outUseSSL:${outUseSSL},
		outUserName:${outUserName},
		outPassword:${outPassword},
		mailingListActive:${mailingListActive},
		allowAnonymousEmail:${allowAnonymousEmail},
		mergeWithParentCategory:${mergeWithParentCategory},
		serviceContext:${serviceContext}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-MBMessage-add-discussion-message" description="jsonws-MBMessage-add-discussion-message" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.MBMessage.add-discussion-message11">Liferay.Service(
	'/mbmessage/add-discussion-message',
	{
		groupId:${groupId},
		className:${className},
		classPK:${classPK},
		permissionClassName:${permissionClassName},
		permissionClassPK:${permissionClassPK},
		permissionOwnerId:${permissionOwnerId},
		threadId:${threadId},
		parentMessageId:${parentMessageId},
		subject:${subject},
		body:${body},
		serviceContext:${serviceContext}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-MBMessage-add-message" description="jsonws-MBMessage-add-message" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.MBMessage.add-message10">Liferay.Service(
	'/mbmessage/add-message',
	{
		groupId:${groupId},
		categoryId:${categoryId},
		subject:${subject},
		body:${body},
		format:${format},
		inputStreamOVPs:${inputStreamOVPs},
		anonymous:${anonymous},
		priority:${priority},
		allowPingbacks:${allowPingbacks},
		serviceContext:${serviceContext}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-MBMessage-add-message" description="jsonws-MBMessage-add-message" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.MBMessage.add-message12">Liferay.Service(
	'/mbmessage/add-message',
	{
		groupId:${groupId},
		categoryId:${categoryId},
		threadId:${threadId},
		parentMessageId:${parentMessageId},
		subject:${subject},
		body:${body},
		format:${format},
		inputStreamOVPs:${inputStreamOVPs},
		anonymous:${anonymous},
		priority:${priority},
		allowPingbacks:${allowPingbacks},
		serviceContext:${serviceContext}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-MBMessage-add-message" description="jsonws-MBMessage-add-message" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.MBMessage.add-message4">Liferay.Service(
	'/mbmessage/add-message',
	{
		categoryId:${categoryId},
		subject:${subject},
		body:${body},
		serviceContext:${serviceContext}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-MBMessage-add-message" description="jsonws-MBMessage-add-message" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.MBMessage.add-message9">Liferay.Service(
	'/mbmessage/add-message',
	{
		parentMessageId:${parentMessageId},
		subject:${subject},
		body:${body},
		format:${format},
		inputStreamOVPs:${inputStreamOVPs},
		anonymous:${anonymous},
		priority:${priority},
		allowPingbacks:${allowPingbacks},
		serviceContext:${serviceContext}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-MBMessage-delete-discussion-message" description="jsonws-MBMessage-delete-discussion-message" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.MBMessage.delete-discussion-message7">Liferay.Service(
	'/mbmessage/delete-discussion-message',
	{
		groupId:${groupId},
		className:${className},
		classPK:${classPK},
		permissionClassName:${permissionClassName},
		permissionClassPK:${permissionClassPK},
		permissionOwnerId:${permissionOwnerId},
		messageId:${messageId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-MBMessage-delete-message" description="jsonws-MBMessage-delete-message" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.MBMessage.delete-message1">Liferay.Service(
	'/mbmessage/delete-message',
	{
		messageId:${messageId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-MBMessage-delete-message-attachments" description="jsonws-MBMessage-delete-message-attachments" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.MBMessage.delete-message-attachments1">Liferay.Service(
	'/mbmessage/delete-message-attachments',
	{
		messageId:${messageId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-MBMessage-get-category-messages" description="jsonws-MBMessage-get-category-messages" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.MBMessage.get-category-messages5">Liferay.Service(
	'/mbmessage/get-category-messages',
	{
		groupId:${groupId},
		categoryId:${categoryId},
		status:${status},
		start:${start},
		end:${end}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-MBMessage-get-category-messages-count" description="jsonws-MBMessage-get-category-messages-count" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.MBMessage.get-category-messages-count3">Liferay.Service(
	'/mbmessage/get-category-messages-count',
	{
		groupId:${groupId},
		categoryId:${categoryId},
		status:${status}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-MBMessage-get-category-messages-rss" description="jsonws-MBMessage-get-category-messages-rss" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.MBMessage.get-category-messages-rss10">Liferay.Service(
	'/mbmessage/get-category-messages-rss',
	{
		groupId:${groupId},
		categoryId:${categoryId},
		status:${status},
		max:${max},
		type:${type},
		version:${version},
		displayStyle:${displayStyle},
		feedURL:${feedURL},
		entryURL:${entryURL},
		themeDisplay:${themeDisplay}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-MBMessage-get-company-messages-rss" description="jsonws-MBMessage-get-company-messages-rss" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.MBMessage.get-company-messages-rss9">Liferay.Service(
	'/mbmessage/get-company-messages-rss',
	{
		companyId:${companyId},
		status:${status},
		max:${max},
		type:${type},
		version:${version},
		displayStyle:${displayStyle},
		feedURL:${feedURL},
		entryURL:${entryURL},
		themeDisplay:${themeDisplay}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-MBMessage-get-group-messages-count" description="jsonws-MBMessage-get-group-messages-count" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.MBMessage.get-group-messages-count2">Liferay.Service(
	'/mbmessage/get-group-messages-count',
	{
		groupId:${groupId},
		status:${status}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-MBMessage-get-group-messages-rss" description="jsonws-MBMessage-get-group-messages-rss" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.MBMessage.get-group-messages-rss10">Liferay.Service(
	'/mbmessage/get-group-messages-rss',
	{
		groupId:${groupId},
		userId:${userId},
		status:${status},
		max:${max},
		type:${type},
		version:${version},
		displayStyle:${displayStyle},
		feedURL:${feedURL},
		entryURL:${entryURL},
		themeDisplay:${themeDisplay}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-MBMessage-get-group-messages-rss" description="jsonws-MBMessage-get-group-messages-rss" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.MBMessage.get-group-messages-rss9">Liferay.Service(
	'/mbmessage/get-group-messages-rss',
	{
		groupId:${groupId},
		status:${status},
		max:${max},
		type:${type},
		version:${version},
		displayStyle:${displayStyle},
		feedURL:${feedURL},
		entryURL:${entryURL},
		themeDisplay:${themeDisplay}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-MBMessage-get-message" description="jsonws-MBMessage-get-message" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.MBMessage.get-message1">Liferay.Service(
	'/mbmessage/get-message',
	{
		messageId:${messageId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-MBMessage-get-message-display" description="jsonws-MBMessage-get-message-display" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.MBMessage.get-message-display4">Liferay.Service(
	'/mbmessage/get-message-display',
	{
		messageId:${messageId},
		status:${status},
		threadView:${threadView},
		includePrevAndNext:${includePrevAndNext}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-MBMessage-get-thread-answers-count" description="jsonws-MBMessage-get-thread-answers-count" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.MBMessage.get-thread-answers-count3">Liferay.Service(
	'/mbmessage/get-thread-answers-count',
	{
		groupId:${groupId},
		categoryId:${categoryId},
		threadId:${threadId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-MBMessage-get-thread-messages" description="jsonws-MBMessage-get-thread-messages" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.MBMessage.get-thread-messages6">Liferay.Service(
	'/mbmessage/get-thread-messages',
	{
		groupId:${groupId},
		categoryId:${categoryId},
		threadId:${threadId},
		status:${status},
		start:${start},
		end:${end}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-MBMessage-get-thread-messages-count" description="jsonws-MBMessage-get-thread-messages-count" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.MBMessage.get-thread-messages-count4">Liferay.Service(
	'/mbmessage/get-thread-messages-count',
	{
		groupId:${groupId},
		categoryId:${categoryId},
		threadId:${threadId},
		status:${status}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-MBMessage-get-thread-messages-rss" description="jsonws-MBMessage-get-thread-messages-rss" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.MBMessage.get-thread-messages-rss9">Liferay.Service(
	'/mbmessage/get-thread-messages-rss',
	{
		threadId:${threadId},
		status:${status},
		max:${max},
		type:${type},
		version:${version},
		displayStyle:${displayStyle},
		feedURL:${feedURL},
		entryURL:${entryURL},
		themeDisplay:${themeDisplay}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-MBMessage-restore-message-attachment-from-trash" description="jsonws-MBMessage-restore-message-attachment-from-trash" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.MBMessage.restore-message-attachment-from-trash2">Liferay.Service(
	'/mbmessage/restore-message-attachment-from-trash',
	{
		messageId:${messageId},
		fileName:${fileName}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-MBMessage-subscribe-message" description="jsonws-MBMessage-subscribe-message" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.MBMessage.subscribe-message1">Liferay.Service(
	'/mbmessage/subscribe-message',
	{
		messageId:${messageId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-MBMessage-unsubscribe-message" description="jsonws-MBMessage-unsubscribe-message" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.MBMessage.unsubscribe-message1">Liferay.Service(
	'/mbmessage/unsubscribe-message',
	{
		messageId:${messageId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-MBMessage-update-answer" description="jsonws-MBMessage-update-answer" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.MBMessage.update-answer3">Liferay.Service(
	'/mbmessage/update-answer',
	{
		messageId:${messageId},
		answer:${answer},
		cascade:${cascade}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-MBMessage-update-discussion-message" description="jsonws-MBMessage-update-discussion-message" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.MBMessage.update-discussion-message9">Liferay.Service(
	'/mbmessage/update-discussion-message',
	{
		className:${className},
		classPK:${classPK},
		permissionClassName:${permissionClassName},
		permissionClassPK:${permissionClassPK},
		permissionOwnerId:${permissionOwnerId},
		messageId:${messageId},
		subject:${subject},
		body:${body},
		serviceContext:${serviceContext}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-MBMessage-update-message" description="jsonws-MBMessage-update-message" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.MBMessage.update-message8">Liferay.Service(
	'/mbmessage/update-message',
	{
		messageId:${messageId},
		subject:${subject},
		body:${body},
		inputStreamOVPs:${inputStreamOVPs},
		existingFiles:${existingFiles},
		priority:${priority},
		allowPingbacks:${allowPingbacks},
		serviceContext:${serviceContext}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-MBThread-delete-thread" description="jsonws-MBThread-delete-thread" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.MBThread.delete-thread1">Liferay.Service(
	'/mbthread/delete-thread',
	{
		threadId:${threadId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-MBThread-get-group-threads" description="jsonws-MBThread-get-group-threads" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.MBThread.get-group-threads5">Liferay.Service(
	'/mbthread/get-group-threads',
	{
		groupId:${groupId},
		userId:${userId},
		status:${status},
		start:${start},
		end:${end}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-MBThread-get-group-threads" description="jsonws-MBThread-get-group-threads" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.MBThread.get-group-threads6">Liferay.Service(
	'/mbthread/get-group-threads',
	{
		groupId:${groupId},
		userId:${userId},
		modifiedDate:${modifiedDate},
		status:${status},
		start:${start},
		end:${end}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-MBThread-get-group-threads" description="jsonws-MBThread-get-group-threads" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.MBThread.get-group-threads6">Liferay.Service(
	'/mbthread/get-group-threads',
	{
		groupId:${groupId},
		userId:${userId},
		status:${status},
		subscribed:${subscribed},
		start:${start},
		end:${end}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-MBThread-get-group-threads" description="jsonws-MBThread-get-group-threads" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.MBThread.get-group-threads7">Liferay.Service(
	'/mbthread/get-group-threads',
	{
		groupId:${groupId},
		userId:${userId},
		status:${status},
		subscribed:${subscribed},
		includeAnonymous:${includeAnonymous},
		start:${start},
		end:${end}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-MBThread-get-group-threads-count" description="jsonws-MBThread-get-group-threads-count" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.MBThread.get-group-threads-count3">Liferay.Service(
	'/mbthread/get-group-threads-count',
	{
		groupId:${groupId},
		userId:${userId},
		status:${status}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-MBThread-get-group-threads-count" description="jsonws-MBThread-get-group-threads-count" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.MBThread.get-group-threads-count4">Liferay.Service(
	'/mbthread/get-group-threads-count',
	{
		groupId:${groupId},
		userId:${userId},
		modifiedDate:${modifiedDate},
		status:${status}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-MBThread-get-group-threads-count" description="jsonws-MBThread-get-group-threads-count" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.MBThread.get-group-threads-count4">Liferay.Service(
	'/mbthread/get-group-threads-count',
	{
		groupId:${groupId},
		userId:${userId},
		status:${status},
		subscribed:${subscribed}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-MBThread-get-group-threads-count" description="jsonws-MBThread-get-group-threads-count" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.MBThread.get-group-threads-count5">Liferay.Service(
	'/mbthread/get-group-threads-count',
	{
		groupId:${groupId},
		userId:${userId},
		status:${status},
		subscribed:${subscribed},
		includeAnonymous:${includeAnonymous}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-MBThread-get-threads" description="jsonws-MBThread-get-threads" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.MBThread.get-threads5">Liferay.Service(
	'/mbthread/get-threads',
	{
		groupId:${groupId},
		categoryId:${categoryId},
		status:${status},
		start:${start},
		end:${end}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-MBThread-get-threads-count" description="jsonws-MBThread-get-threads-count" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.MBThread.get-threads-count3">Liferay.Service(
	'/mbthread/get-threads-count',
	{
		groupId:${groupId},
		categoryId:${categoryId},
		status:${status}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-MBThread-lock-thread" description="jsonws-MBThread-lock-thread" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.MBThread.lock-thread1">Liferay.Service(
	'/mbthread/lock-thread',
	{
		threadId:${threadId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-MBThread-move-thread" description="jsonws-MBThread-move-thread" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.MBThread.move-thread2">Liferay.Service(
	'/mbthread/move-thread',
	{
		categoryId:${categoryId},
		threadId:${threadId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-MBThread-move-thread-from-trash" description="jsonws-MBThread-move-thread-from-trash" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.MBThread.move-thread-from-trash2">Liferay.Service(
	'/mbthread/move-thread-from-trash',
	{
		categoryId:${categoryId},
		threadId:${threadId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-MBThread-move-thread-to-trash" description="jsonws-MBThread-move-thread-to-trash" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.MBThread.move-thread-to-trash1">Liferay.Service(
	'/mbthread/move-thread-to-trash',
	{
		threadId:${threadId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-MBThread-restore-thread-from-trash" description="jsonws-MBThread-restore-thread-from-trash" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.MBThread.restore-thread-from-trash1">Liferay.Service(
	'/mbthread/restore-thread-from-trash',
	{
		threadId:${threadId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-MBThread-search" description="jsonws-MBThread-search" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.MBThread.search5">Liferay.Service(
	'/mbthread/search',
	{
		groupId:${groupId},
		creatorUserId:${creatorUserId},
		status:${status},
		start:${start},
		end:${end}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-MBThread-search" description="jsonws-MBThread-search" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.MBThread.search7">Liferay.Service(
	'/mbthread/search',
	{
		groupId:${groupId},
		creatorUserId:${creatorUserId},
		startDate:${startDate},
		endDate:${endDate},
		status:${status},
		start:${start},
		end:${end}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-MBThread-split-thread" description="jsonws-MBThread-split-thread" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.MBThread.split-thread3">Liferay.Service(
	'/mbthread/split-thread',
	{
		messageId:${messageId},
		subject:${subject},
		serviceContext:${serviceContext}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-MBThread-unlock-thread" description="jsonws-MBThread-unlock-thread" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.MBThread.unlock-thread1">Liferay.Service(
	'/mbthread/unlock-thread',
	{
		threadId:${threadId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-MDRAction-add-action" description="jsonws-MDRAction-add-action" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.MDRAction.add-action6">Liferay.Service(
	'/mdraction/add-action',
	{
		ruleGroupInstanceId:${ruleGroupInstanceId},
		nameMap:${nameMap},
		descriptionMap:${descriptionMap},
		type:${type},
		typeSettings:${typeSettings},
		serviceContext:${serviceContext}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-MDRAction-add-action" description="jsonws-MDRAction-add-action" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.MDRAction.add-action6">Liferay.Service(
	'/mdraction/add-action',
	{
		ruleGroupInstanceId:${ruleGroupInstanceId},
		nameMap:${nameMap},
		descriptionMap:${descriptionMap},
		type:${type},
		typeSettingsProperties:${typeSettingsProperties},
		serviceContext:${serviceContext}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-MDRAction-delete-action" description="jsonws-MDRAction-delete-action" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.MDRAction.delete-action1">Liferay.Service(
	'/mdraction/delete-action',
	{
		actionId:${actionId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-MDRAction-fetch-action" description="jsonws-MDRAction-fetch-action" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.MDRAction.fetch-action1">Liferay.Service(
	'/mdraction/fetch-action',
	{
		actionId:${actionId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-MDRAction-get-action" description="jsonws-MDRAction-get-action" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.MDRAction.get-action1">Liferay.Service(
	'/mdraction/get-action',
	{
		actionId:${actionId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-MDRAction-update-action" description="jsonws-MDRAction-update-action" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.MDRAction.update-action6">Liferay.Service(
	'/mdraction/update-action',
	{
		actionId:${actionId},
		nameMap:${nameMap},
		descriptionMap:${descriptionMap},
		type:${type},
		typeSettings:${typeSettings},
		serviceContext:${serviceContext}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-MDRAction-update-action" description="jsonws-MDRAction-update-action" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.MDRAction.update-action6">Liferay.Service(
	'/mdraction/update-action',
	{
		actionId:${actionId},
		nameMap:${nameMap},
		descriptionMap:${descriptionMap},
		type:${type},
		typeSettingsProperties:${typeSettingsProperties},
		serviceContext:${serviceContext}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-MDRRule-add-rule" description="jsonws-MDRRule-add-rule" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.MDRRule.add-rule6">Liferay.Service(
	'/mdrrule/add-rule',
	{
		ruleGroupId:${ruleGroupId},
		nameMap:${nameMap},
		descriptionMap:${descriptionMap},
		type:${type},
		typeSettings:${typeSettings},
		serviceContext:${serviceContext}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-MDRRule-delete-rule" description="jsonws-MDRRule-delete-rule" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.MDRRule.delete-rule1">Liferay.Service(
	'/mdrrule/delete-rule',
	{
		ruleId:${ruleId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-MDRRule-fetch-rule" description="jsonws-MDRRule-fetch-rule" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.MDRRule.fetch-rule1">Liferay.Service(
	'/mdrrule/fetch-rule',
	{
		ruleId:${ruleId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-MDRRule-get-rule" description="jsonws-MDRRule-get-rule" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.MDRRule.get-rule1">Liferay.Service(
	'/mdrrule/get-rule',
	{
		ruleId:${ruleId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-MDRRule-update-rule" description="jsonws-MDRRule-update-rule" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.MDRRule.update-rule6">Liferay.Service(
	'/mdrrule/update-rule',
	{
		ruleId:${ruleId},
		nameMap:${nameMap},
		descriptionMap:${descriptionMap},
		type:${type},
		typeSettings:${typeSettings},
		serviceContext:${serviceContext}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-MDRRule-update-rule" description="jsonws-MDRRule-update-rule" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.MDRRule.update-rule6">Liferay.Service(
	'/mdrrule/update-rule',
	{
		ruleId:${ruleId},
		nameMap:${nameMap},
		descriptionMap:${descriptionMap},
		type:${type},
		typeSettingsProperties:${typeSettingsProperties},
		serviceContext:${serviceContext}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-MDRRuleGroup-add-rule-group" description="jsonws-MDRRuleGroup-add-rule-group" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.MDRRuleGroup.add-rule-group4">Liferay.Service(
	'/mdrrulegroup/add-rule-group',
	{
		groupId:${groupId},
		nameMap:${nameMap},
		descriptionMap:${descriptionMap},
		serviceContext:${serviceContext}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-MDRRuleGroup-copy-rule-group" description="jsonws-MDRRuleGroup-copy-rule-group" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.MDRRuleGroup.copy-rule-group3">Liferay.Service(
	'/mdrrulegroup/copy-rule-group',
	{
		ruleGroupId:${ruleGroupId},
		groupId:${groupId},
		serviceContext:${serviceContext}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-MDRRuleGroup-delete-rule-group" description="jsonws-MDRRuleGroup-delete-rule-group" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.MDRRuleGroup.delete-rule-group1">Liferay.Service(
	'/mdrrulegroup/delete-rule-group',
	{
		ruleGroupId:${ruleGroupId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-MDRRuleGroup-fetch-rule-group" description="jsonws-MDRRuleGroup-fetch-rule-group" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.MDRRuleGroup.fetch-rule-group1">Liferay.Service(
	'/mdrrulegroup/fetch-rule-group',
	{
		ruleGroupId:${ruleGroupId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-MDRRuleGroup-get-rule-group" description="jsonws-MDRRuleGroup-get-rule-group" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.MDRRuleGroup.get-rule-group1">Liferay.Service(
	'/mdrrulegroup/get-rule-group',
	{
		ruleGroupId:${ruleGroupId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-MDRRuleGroup-update-rule-group" description="jsonws-MDRRuleGroup-update-rule-group" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.MDRRuleGroup.update-rule-group4">Liferay.Service(
	'/mdrrulegroup/update-rule-group',
	{
		ruleGroupId:${ruleGroupId},
		nameMap:${nameMap},
		descriptionMap:${descriptionMap},
		serviceContext:${serviceContext}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-MDRRuleGroupInstance-add-rule-group-instance" description="jsonws-MDRRuleGroupInstance-add-rule-group-instance" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.MDRRuleGroupInstance.add-rule-group-instance5">Liferay.Service(
	'/mdrrulegroupinstance/add-rule-group-instance',
	{
		groupId:${groupId},
		className:${className},
		classPK:${classPK},
		ruleGroupId:${ruleGroupId},
		serviceContext:${serviceContext}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-MDRRuleGroupInstance-add-rule-group-instance" description="jsonws-MDRRuleGroupInstance-add-rule-group-instance" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.MDRRuleGroupInstance.add-rule-group-instance6">Liferay.Service(
	'/mdrrulegroupinstance/add-rule-group-instance',
	{
		groupId:${groupId},
		className:${className},
		classPK:${classPK},
		ruleGroupId:${ruleGroupId},
		priority:${priority},
		serviceContext:${serviceContext}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-MDRRuleGroupInstance-delete-rule-group-instance" description="jsonws-MDRRuleGroupInstance-delete-rule-group-instance" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.MDRRuleGroupInstance.delete-rule-group-instance1">Liferay.Service(
	'/mdrrulegroupinstance/delete-rule-group-instance',
	{
		ruleGroupInstanceId:${ruleGroupInstanceId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-MDRRuleGroupInstance-get-rule-group-instances" description="jsonws-MDRRuleGroupInstance-get-rule-group-instances" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.MDRRuleGroupInstance.get-rule-group-instances5">Liferay.Service(
	'/mdrrulegroupinstance/get-rule-group-instances',
	{
		className:${className},
		classPK:${classPK},
		start:${start},
		end:${end},
		orderByComparator:${orderByComparator}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-MDRRuleGroupInstance-get-rule-group-instances-count" description="jsonws-MDRRuleGroupInstance-get-rule-group-instances-count" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.MDRRuleGroupInstance.get-rule-group-instances-count2">Liferay.Service(
	'/mdrrulegroupinstance/get-rule-group-instances-count',
	{
		className:${className},
		classPK:${classPK}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-MDRRuleGroupInstance-update-rule-group-instance" description="jsonws-MDRRuleGroupInstance-update-rule-group-instance" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.MDRRuleGroupInstance.update-rule-group-instance2">Liferay.Service(
	'/mdrrulegroupinstance/update-rule-group-instance',
	{
		ruleGroupInstanceId:${ruleGroupInstanceId},
		priority:${priority}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-MembershipRequest-add-membership-request" description="jsonws-MembershipRequest-add-membership-request" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.MembershipRequest.add-membership-request3">Liferay.Service(
	'/membershiprequest/add-membership-request',
	{
		groupId:${groupId},
		comments:${comments},
		serviceContext:${serviceContext}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-MembershipRequest-delete-membership-requests" description="jsonws-MembershipRequest-delete-membership-requests" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.MembershipRequest.delete-membership-requests2">Liferay.Service(
	'/membershiprequest/delete-membership-requests',
	{
		groupId:${groupId},
		statusId:${statusId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-MembershipRequest-get-membership-request" description="jsonws-MembershipRequest-get-membership-request" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.MembershipRequest.get-membership-request1">Liferay.Service(
	'/membershiprequest/get-membership-request',
	{
		membershipRequestId:${membershipRequestId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-MembershipRequest-update-status" description="jsonws-MembershipRequest-update-status" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.MembershipRequest.update-status4">Liferay.Service(
	'/membershiprequest/update-status',
	{
		membershipRequestId:${membershipRequestId},
		reviewComments:${reviewComments},
		statusId:${statusId},
		serviceContext:${serviceContext}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-Organization-add-group-organizations" description="jsonws-Organization-add-group-organizations" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.Organization.add-group-organizations2">Liferay.Service(
	'/organization/add-group-organizations',
	{
		groupId:${groupId},
		organizationIds:${organizationIds}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-Organization-add-organization" description="jsonws-Organization-add-organization" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.Organization.add-organization10">Liferay.Service(
	'/organization/add-organization',
	{
		parentOrganizationId:${parentOrganizationId},
		name:${name},
		type:${type},
		recursable:${recursable},
		regionId:${regionId},
		countryId:${countryId},
		statusId:${statusId},
		comments:${comments},
		site:${site},
		serviceContext:${serviceContext}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-Organization-add-organization" description="jsonws-Organization-add-organization" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.Organization.add-organization14">Liferay.Service(
	'/organization/add-organization',
	{
		parentOrganizationId:${parentOrganizationId},
		name:${name},
		type:${type},
		regionId:${regionId},
		countryId:${countryId},
		statusId:${statusId},
		comments:${comments},
		site:${site},
		addresses:${addresses},
		emailAddresses:${emailAddresses},
		orgLabors:${orgLabors},
		phones:${phones},
		websites:${websites},
		serviceContext:${serviceContext}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-Organization-add-organization" description="jsonws-Organization-add-organization" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.Organization.add-organization15">Liferay.Service(
	'/organization/add-organization',
	{
		parentOrganizationId:${parentOrganizationId},
		name:${name},
		type:${type},
		recursable:${recursable},
		regionId:${regionId},
		countryId:${countryId},
		statusId:${statusId},
		comments:${comments},
		site:${site},
		addresses:${addresses},
		emailAddresses:${emailAddresses},
		orgLabors:${orgLabors},
		phones:${phones},
		websites:${websites},
		serviceContext:${serviceContext}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-Organization-add-organization" description="jsonws-Organization-add-organization" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.Organization.add-organization9">Liferay.Service(
	'/organization/add-organization',
	{
		parentOrganizationId:${parentOrganizationId},
		name:${name},
		type:${type},
		regionId:${regionId},
		countryId:${countryId},
		statusId:${statusId},
		comments:${comments},
		site:${site},
		serviceContext:${serviceContext}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-Organization-add-password-policy-organizations" description="jsonws-Organization-add-password-policy-organizations" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.Organization.add-password-policy-organizations2">Liferay.Service(
	'/organization/add-password-policy-organizations',
	{
		passwordPolicyId:${passwordPolicyId},
		organizationIds:${organizationIds}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-Organization-delete-logo" description="jsonws-Organization-delete-logo" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.Organization.delete-logo1">Liferay.Service(
	'/organization/delete-logo',
	{
		organizationId:${organizationId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-Organization-delete-organization" description="jsonws-Organization-delete-organization" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.Organization.delete-organization1">Liferay.Service(
	'/organization/delete-organization',
	{
		organizationId:${organizationId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-Organization-get-manageable-organizations" description="jsonws-Organization-get-manageable-organizations" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.Organization.get-manageable-organizations2">Liferay.Service(
	'/organization/get-manageable-organizations',
	{
		actionId:${actionId},
		max:${max}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-Organization-get-organization" description="jsonws-Organization-get-organization" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.Organization.get-organization1">Liferay.Service(
	'/organization/get-organization',
	{
		organizationId:${organizationId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-Organization-get-organization-id" description="jsonws-Organization-get-organization-id" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.Organization.get-organization-id2">Liferay.Service(
	'/organization/get-organization-id',
	{
		companyId:${companyId},
		name:${name}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-Organization-get-organizations" description="jsonws-Organization-get-organizations" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.Organization.get-organizations2">Liferay.Service(
	'/organization/get-organizations',
	{
		companyId:${companyId},
		parentOrganizationId:${parentOrganizationId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-Organization-get-organizations" description="jsonws-Organization-get-organizations" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.Organization.get-organizations4">Liferay.Service(
	'/organization/get-organizations',
	{
		companyId:${companyId},
		parentOrganizationId:${parentOrganizationId},
		start:${start},
		end:${end}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-Organization-get-organizations-count" description="jsonws-Organization-get-organizations-count" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.Organization.get-organizations-count2">Liferay.Service(
	'/organization/get-organizations-count',
	{
		companyId:${companyId},
		parentOrganizationId:${parentOrganizationId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-Organization-get-user-organizations" description="jsonws-Organization-get-user-organizations" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.Organization.get-user-organizations1">Liferay.Service(
	'/organization/get-user-organizations',
	{
		userId:${userId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-Organization-set-group-organizations" description="jsonws-Organization-set-group-organizations" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.Organization.set-group-organizations2">Liferay.Service(
	'/organization/set-group-organizations',
	{
		groupId:${groupId},
		organizationIds:${organizationIds}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-Organization-unset-group-organizations" description="jsonws-Organization-unset-group-organizations" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.Organization.unset-group-organizations2">Liferay.Service(
	'/organization/unset-group-organizations',
	{
		groupId:${groupId},
		organizationIds:${organizationIds}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-Organization-unset-password-policy-organizations" description="jsonws-Organization-unset-password-policy-organizations" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.Organization.unset-password-policy-organizations2">Liferay.Service(
	'/organization/unset-password-policy-organizations',
	{
		passwordPolicyId:${passwordPolicyId},
		organizationIds:${organizationIds}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-Organization-update-organization" description="jsonws-Organization-update-organization" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.Organization.update-organization10">Liferay.Service(
	'/organization/update-organization',
	{
		organizationId:${organizationId},
		parentOrganizationId:${parentOrganizationId},
		name:${name},
		type:${type},
		regionId:${regionId},
		countryId:${countryId},
		statusId:${statusId},
		comments:${comments},
		site:${site},
		serviceContext:${serviceContext}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-Organization-update-organization" description="jsonws-Organization-update-organization" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.Organization.update-organization11">Liferay.Service(
	'/organization/update-organization',
	{
		organizationId:${organizationId},
		parentOrganizationId:${parentOrganizationId},
		name:${name},
		type:${type},
		recursable:${recursable},
		regionId:${regionId},
		countryId:${countryId},
		statusId:${statusId},
		comments:${comments},
		site:${site},
		serviceContext:${serviceContext}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-Organization-update-organization" description="jsonws-Organization-update-organization" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.Organization.update-organization15">Liferay.Service(
	'/organization/update-organization',
	{
		organizationId:${organizationId},
		parentOrganizationId:${parentOrganizationId},
		name:${name},
		type:${type},
		regionId:${regionId},
		countryId:${countryId},
		statusId:${statusId},
		comments:${comments},
		site:${site},
		addresses:${addresses},
		emailAddresses:${emailAddresses},
		orgLabors:${orgLabors},
		phones:${phones},
		websites:${websites},
		serviceContext:${serviceContext}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-Organization-update-organization" description="jsonws-Organization-update-organization" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.Organization.update-organization16">Liferay.Service(
	'/organization/update-organization',
	{
		organizationId:${organizationId},
		parentOrganizationId:${parentOrganizationId},
		name:${name},
		type:${type},
		recursable:${recursable},
		regionId:${regionId},
		countryId:${countryId},
		statusId:${statusId},
		comments:${comments},
		site:${site},
		addresses:${addresses},
		emailAddresses:${emailAddresses},
		orgLabors:${orgLabors},
		phones:${phones},
		websites:${websites},
		serviceContext:${serviceContext}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-OrgLabor-add-org-labor" description="jsonws-OrgLabor-add-org-labor" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.OrgLabor.add-org-labor16">Liferay.Service(
	'/orglabor/add-org-labor',
	{
		organizationId:${organizationId},
		typeId:${typeId},
		sunOpen:${sunOpen},
		sunClose:${sunClose},
		monOpen:${monOpen},
		monClose:${monClose},
		tueOpen:${tueOpen},
		tueClose:${tueClose},
		wedOpen:${wedOpen},
		wedClose:${wedClose},
		thuOpen:${thuOpen},
		thuClose:${thuClose},
		friOpen:${friOpen},
		friClose:${friClose},
		satOpen:${satOpen},
		satClose:${satClose}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-OrgLabor-delete-org-labor" description="jsonws-OrgLabor-delete-org-labor" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.OrgLabor.delete-org-labor1">Liferay.Service(
	'/orglabor/delete-org-labor',
	{
		orgLaborId:${orgLaborId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-OrgLabor-get-org-labor" description="jsonws-OrgLabor-get-org-labor" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.OrgLabor.get-org-labor1">Liferay.Service(
	'/orglabor/get-org-labor',
	{
		orgLaborId:${orgLaborId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-OrgLabor-get-org-labors" description="jsonws-OrgLabor-get-org-labors" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.OrgLabor.get-org-labors1">Liferay.Service(
	'/orglabor/get-org-labors',
	{
		organizationId:${organizationId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-OrgLabor-update-org-labor" description="jsonws-OrgLabor-update-org-labor" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.OrgLabor.update-org-labor16">Liferay.Service(
	'/orglabor/update-org-labor',
	{
		orgLaborId:${orgLaborId},
		typeId:${typeId},
		sunOpen:${sunOpen},
		sunClose:${sunClose},
		monOpen:${monOpen},
		monClose:${monClose},
		tueOpen:${tueOpen},
		tueClose:${tueClose},
		wedOpen:${wedOpen},
		wedClose:${wedClose},
		thuOpen:${thuOpen},
		thuClose:${thuClose},
		friOpen:${friOpen},
		friClose:${friClose},
		satOpen:${satOpen},
		satClose:${satClose}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-PasswordPolicy-add-password-policy" description="jsonws-PasswordPolicy-add-password-policy" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.PasswordPolicy.add-password-policy24">Liferay.Service(
	'/passwordpolicy/add-password-policy',
	{
		name:${name},
		description:${description},
		changeable:${changeable},
		changeRequired:${changeRequired},
		minAge:${minAge},
		checkSyntax:${checkSyntax},
		allowDictionaryWords:${allowDictionaryWords},
		minAlphanumeric:${minAlphanumeric},
		minLength:${minLength},
		minLowerCase:${minLowerCase},
		minNumbers:${minNumbers},
		minSymbols:${minSymbols},
		minUpperCase:${minUpperCase},
		history:${history},
		historyCount:${historyCount},
		expireable:${expireable},
		maxAge:${maxAge},
		warningTime:${warningTime},
		graceLimit:${graceLimit},
		lockout:${lockout},
		maxFailure:${maxFailure},
		lockoutDuration:${lockoutDuration},
		resetFailureCount:${resetFailureCount},
		resetTicketMaxAge:${resetTicketMaxAge}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-PasswordPolicy-add-password-policy" description="jsonws-PasswordPolicy-add-password-policy" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.PasswordPolicy.add-password-policy26">Liferay.Service(
	'/passwordpolicy/add-password-policy',
	{
		name:${name},
		description:${description},
		changeable:${changeable},
		changeRequired:${changeRequired},
		minAge:${minAge},
		checkSyntax:${checkSyntax},
		allowDictionaryWords:${allowDictionaryWords},
		minAlphanumeric:${minAlphanumeric},
		minLength:${minLength},
		minLowerCase:${minLowerCase},
		minNumbers:${minNumbers},
		minSymbols:${minSymbols},
		minUpperCase:${minUpperCase},
		regex:${regex},
		history:${history},
		historyCount:${historyCount},
		expireable:${expireable},
		maxAge:${maxAge},
		warningTime:${warningTime},
		graceLimit:${graceLimit},
		lockout:${lockout},
		maxFailure:${maxFailure},
		lockoutDuration:${lockoutDuration},
		resetFailureCount:${resetFailureCount},
		resetTicketMaxAge:${resetTicketMaxAge},
		serviceContext:${serviceContext}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-PasswordPolicy-delete-password-policy" description="jsonws-PasswordPolicy-delete-password-policy" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.PasswordPolicy.delete-password-policy1">Liferay.Service(
	'/passwordpolicy/delete-password-policy',
	{
		passwordPolicyId:${passwordPolicyId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-PasswordPolicy-update-password-policy" description="jsonws-PasswordPolicy-update-password-policy" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.PasswordPolicy.update-password-policy25">Liferay.Service(
	'/passwordpolicy/update-password-policy',
	{
		passwordPolicyId:${passwordPolicyId},
		name:${name},
		description:${description},
		changeable:${changeable},
		changeRequired:${changeRequired},
		minAge:${minAge},
		checkSyntax:${checkSyntax},
		allowDictionaryWords:${allowDictionaryWords},
		minAlphanumeric:${minAlphanumeric},
		minLength:${minLength},
		minLowerCase:${minLowerCase},
		minNumbers:${minNumbers},
		minSymbols:${minSymbols},
		minUpperCase:${minUpperCase},
		history:${history},
		historyCount:${historyCount},
		expireable:${expireable},
		maxAge:${maxAge},
		warningTime:${warningTime},
		graceLimit:${graceLimit},
		lockout:${lockout},
		maxFailure:${maxFailure},
		lockoutDuration:${lockoutDuration},
		resetFailureCount:${resetFailureCount},
		resetTicketMaxAge:${resetTicketMaxAge}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-PasswordPolicy-update-password-policy" description="jsonws-PasswordPolicy-update-password-policy" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.PasswordPolicy.update-password-policy27">Liferay.Service(
	'/passwordpolicy/update-password-policy',
	{
		passwordPolicyId:${passwordPolicyId},
		name:${name},
		description:${description},
		changeable:${changeable},
		changeRequired:${changeRequired},
		minAge:${minAge},
		checkSyntax:${checkSyntax},
		allowDictionaryWords:${allowDictionaryWords},
		minAlphanumeric:${minAlphanumeric},
		minLength:${minLength},
		minLowerCase:${minLowerCase},
		minNumbers:${minNumbers},
		minSymbols:${minSymbols},
		minUpperCase:${minUpperCase},
		regex:${regex},
		history:${history},
		historyCount:${historyCount},
		expireable:${expireable},
		maxAge:${maxAge},
		warningTime:${warningTime},
		graceLimit:${graceLimit},
		lockout:${lockout},
		maxFailure:${maxFailure},
		lockoutDuration:${lockoutDuration},
		resetFailureCount:${resetFailureCount},
		resetTicketMaxAge:${resetTicketMaxAge},
		serviceContext:${serviceContext}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-Permission-check-permission" description="jsonws-Permission-check-permission" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.Permission.check-permission3">Liferay.Service(
	'/permission/check-permission',
	{
		groupId:${groupId},
		name:${name},
		primKey:${primKey}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-Phone-add-phone" description="jsonws-Phone-add-phone" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.Phone.add-phone6">Liferay.Service(
	'/phone/add-phone',
	{
		className:${className},
		classPK:${classPK},
		number:${number},
		extension:${extension},
		typeId:${typeId},
		primary:${primary}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-Phone-add-phone" description="jsonws-Phone-add-phone" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.Phone.add-phone7">Liferay.Service(
	'/phone/add-phone',
	{
		className:${className},
		classPK:${classPK},
		number:${number},
		extension:${extension},
		typeId:${typeId},
		primary:${primary},
		serviceContext:${serviceContext}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-Phone-delete-phone" description="jsonws-Phone-delete-phone" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.Phone.delete-phone1">Liferay.Service(
	'/phone/delete-phone',
	{
		phoneId:${phoneId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-Phone-get-phone" description="jsonws-Phone-get-phone" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.Phone.get-phone1">Liferay.Service(
	'/phone/get-phone',
	{
		phoneId:${phoneId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-Phone-get-phones" description="jsonws-Phone-get-phones" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.Phone.get-phones2">Liferay.Service(
	'/phone/get-phones',
	{
		className:${className},
		classPK:${classPK}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-Phone-update-phone" description="jsonws-Phone-update-phone" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.Phone.update-phone5">Liferay.Service(
	'/phone/update-phone',
	{
		phoneId:${phoneId},
		number:${number},
		extension:${extension},
		typeId:${typeId},
		primary:${primary}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-PluginSetting-update-plugin-setting" description="jsonws-PluginSetting-update-plugin-setting" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.PluginSetting.update-plugin-setting5">Liferay.Service(
	'/pluginsetting/update-plugin-setting',
	{
		companyId:${companyId},
		pluginId:${pluginId},
		pluginType:${pluginType},
		roles:${roles},
		active:${active}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-PollsQuestion-add-question" description="jsonws-PollsQuestion-add-question" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.PollsQuestion.add-question10">Liferay.Service(
	'/pollsquestion/add-question',
	{
		titleMap:${titleMap},
		descriptionMap:${descriptionMap},
		expirationDateMonth:${expirationDateMonth},
		expirationDateDay:${expirationDateDay},
		expirationDateYear:${expirationDateYear},
		expirationDateHour:${expirationDateHour},
		expirationDateMinute:${expirationDateMinute},
		neverExpire:${neverExpire},
		choices:${choices},
		serviceContext:${serviceContext}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-PollsQuestion-delete-question" description="jsonws-PollsQuestion-delete-question" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.PollsQuestion.delete-question1">Liferay.Service(
	'/pollsquestion/delete-question',
	{
		questionId:${questionId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-PollsQuestion-get-question" description="jsonws-PollsQuestion-get-question" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.PollsQuestion.get-question1">Liferay.Service(
	'/pollsquestion/get-question',
	{
		questionId:${questionId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-PollsQuestion-update-question" description="jsonws-PollsQuestion-update-question" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.PollsQuestion.update-question11">Liferay.Service(
	'/pollsquestion/update-question',
	{
		questionId:${questionId},
		titleMap:${titleMap},
		descriptionMap:${descriptionMap},
		expirationDateMonth:${expirationDateMonth},
		expirationDateDay:${expirationDateDay},
		expirationDateYear:${expirationDateYear},
		expirationDateHour:${expirationDateHour},
		expirationDateMinute:${expirationDateMinute},
		neverExpire:${neverExpire},
		choices:${choices},
		serviceContext:${serviceContext}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-PollsVote-add-vote" description="jsonws-PollsVote-add-vote" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.PollsVote.add-vote3">Liferay.Service(
	'/pollsvote/add-vote',
	{
		questionId:${questionId},
		choiceId:${choiceId},
		serviceContext:${serviceContext}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-Portal-get-auto-deploy-directory" description="jsonws-Portal-get-auto-deploy-directory" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.Portal.get-auto-deploy-directory">Liferay.Service(
	'/portal/get-auto-deploy-directory',
	{

	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-Portal-get-build-number" description="jsonws-Portal-get-build-number" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.Portal.get-build-number">Liferay.Service(
	'/portal/get-build-number',
	{

	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-Portal-test-add-class-name-and-test-transaction-portlet-bar_-portal-rollback" description="jsonws-Portal-test-add-class-name-and-test-transaction-portlet-bar_-portal-rollback" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.Portal.test-add-class-name-and-test-transaction-portlet-bar_-portal-rollback1">Liferay.Service(
	'/portal/test-add-class-name-and-test-transaction-portlet-bar_-portal-rollback',
	{
		transactionPortletBarText:${transactionPortletBarText}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-Portal-test-add-class-name-and-test-transaction-portlet-bar_-portlet-rollback" description="jsonws-Portal-test-add-class-name-and-test-transaction-portlet-bar_-portlet-rollback" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.Portal.test-add-class-name-and-test-transaction-portlet-bar_-portlet-rollback1">Liferay.Service(
	'/portal/test-add-class-name-and-test-transaction-portlet-bar_-portlet-rollback',
	{
		transactionPortletBarText:${transactionPortletBarText}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-Portal-test-add-class-name-and-test-transaction-portlet-bar_-success" description="jsonws-Portal-test-add-class-name-and-test-transaction-portlet-bar_-success" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.Portal.test-add-class-name-and-test-transaction-portlet-bar_-success1">Liferay.Service(
	'/portal/test-add-class-name-and-test-transaction-portlet-bar_-success',
	{
		transactionPortletBarText:${transactionPortletBarText}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-Portal-test-add-class-name_-rollback" description="jsonws-Portal-test-add-class-name_-rollback" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.Portal.test-add-class-name_-rollback1">Liferay.Service(
	'/portal/test-add-class-name_-rollback',
	{
		classNameValue:${classNameValue}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-Portal-test-add-class-name_-success" description="jsonws-Portal-test-add-class-name_-success" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.Portal.test-add-class-name_-success1">Liferay.Service(
	'/portal/test-add-class-name_-success',
	{
		classNameValue:${classNameValue}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-Portal-test-auto-sync-hibernate-session-state-on-tx-creation" description="jsonws-Portal-test-auto-sync-hibernate-session-state-on-tx-creation" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.Portal.test-auto-sync-hibernate-session-state-on-tx-creation">Liferay.Service(
	'/portal/test-auto-sync-hibernate-session-state-on-tx-creation',
	{

	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-Portal-test-delete-class-name" description="jsonws-Portal-test-delete-class-name" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.Portal.test-delete-class-name">Liferay.Service(
	'/portal/test-delete-class-name',
	{

	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-Portal-test-get-build-number" description="jsonws-Portal-test-get-build-number" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.Portal.test-get-build-number">Liferay.Service(
	'/portal/test-get-build-number',
	{

	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-Portal-test-get-user-id" description="jsonws-Portal-test-get-user-id" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.Portal.test-get-user-id">Liferay.Service(
	'/portal/test-get-user-id',
	{

	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-Portal-test-has-class-name" description="jsonws-Portal-test-has-class-name" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.Portal.test-has-class-name">Liferay.Service(
	'/portal/test-has-class-name',
	{

	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-Portlet-get-war-portlets" description="jsonws-Portlet-get-war-portlets" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.Portlet.get-war-portlets">Liferay.Service(
	'/portlet/get-war-portlets',
	{

	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-Portlet-update-portlet" description="jsonws-Portlet-update-portlet" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.Portlet.update-portlet4">Liferay.Service(
	'/portlet/update-portlet',
	{
		companyId:${companyId},
		portletId:${portletId},
		roles:${roles},
		active:${active}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-PortletPreferences-delete-archived-preferences" description="jsonws-PortletPreferences-delete-archived-preferences" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.PortletPreferences.delete-archived-preferences1">Liferay.Service(
	'/portletpreferences/delete-archived-preferences',
	{
		portletItemId:${portletItemId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-PortletPreferences-restore-archived-preferences" description="jsonws-PortletPreferences-restore-archived-preferences" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.PortletPreferences.restore-archived-preferences5">Liferay.Service(
	'/portletpreferences/restore-archived-preferences',
	{
		groupId:${groupId},
		layout:${layout},
		portletId:${portletId},
		portletItem:${portletItem},
		preferences:${preferences}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-PortletPreferences-restore-archived-preferences" description="jsonws-PortletPreferences-restore-archived-preferences" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.PortletPreferences.restore-archived-preferences5">Liferay.Service(
	'/portletpreferences/restore-archived-preferences',
	{
		groupId:${groupId},
		layout:${layout},
		portletId:${portletId},
		portletItemId:${portletItemId},
		preferences:${preferences}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-PortletPreferences-restore-archived-preferences" description="jsonws-PortletPreferences-restore-archived-preferences" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.PortletPreferences.restore-archived-preferences5">Liferay.Service(
	'/portletpreferences/restore-archived-preferences',
	{
		groupId:${groupId},
		name:${name},
		layout:${layout},
		portletId:${portletId},
		preferences:${preferences}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-PortletPreferences-update-archive-preferences" description="jsonws-PortletPreferences-update-archive-preferences" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.PortletPreferences.update-archive-preferences5">Liferay.Service(
	'/portletpreferences/update-archive-preferences',
	{
		userId:${userId},
		groupId:${groupId},
		name:${name},
		portletId:${portletId},
		preferences:${preferences}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-RatingsEntry-delete-entry" description="jsonws-RatingsEntry-delete-entry" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.RatingsEntry.delete-entry2">Liferay.Service(
	'/ratingsentry/delete-entry',
	{
		className:${className},
		classPK:${classPK}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-RatingsEntry-update-entry" description="jsonws-RatingsEntry-update-entry" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.RatingsEntry.update-entry3">Liferay.Service(
	'/ratingsentry/update-entry',
	{
		className:${className},
		classPK:${classPK},
		score:${score}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-Region-add-region" description="jsonws-Region-add-region" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.Region.add-region4">Liferay.Service(
	'/region/add-region',
	{
		countryId:${countryId},
		regionCode:${regionCode},
		name:${name},
		active:${active}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-Region-fetch-region" description="jsonws-Region-fetch-region" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.Region.fetch-region2">Liferay.Service(
	'/region/fetch-region',
	{
		countryId:${countryId},
		regionCode:${regionCode}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-Region-get-region" description="jsonws-Region-get-region" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.Region.get-region1">Liferay.Service(
	'/region/get-region',
	{
		regionId:${regionId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-Region-get-region" description="jsonws-Region-get-region" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.Region.get-region2">Liferay.Service(
	'/region/get-region',
	{
		countryId:${countryId},
		regionCode:${regionCode}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-Region-get-regions" description="jsonws-Region-get-regions" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.Region.get-regions">Liferay.Service(
	'/region/get-regions',
	{

	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-Region-get-regions" description="jsonws-Region-get-regions" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.Region.get-regions1">Liferay.Service(
	'/region/get-regions',
	{
		active:${active}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-Region-get-regions" description="jsonws-Region-get-regions" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.Region.get-regions1">Liferay.Service(
	'/region/get-regions',
	{
		countryId:${countryId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-Region-get-regions" description="jsonws-Region-get-regions" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.Region.get-regions2">Liferay.Service(
	'/region/get-regions',
	{
		countryId:${countryId},
		active:${active}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-Repository-add-repository" description="jsonws-Repository-add-repository" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.Repository.add-repository8">Liferay.Service(
	'/repository/add-repository',
	{
		groupId:${groupId},
		classNameId:${classNameId},
		parentFolderId:${parentFolderId},
		name:${name},
		description:${description},
		portletId:${portletId},
		typeSettingsProperties:${typeSettingsProperties},
		serviceContext:${serviceContext}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-Repository-check-repository" description="jsonws-Repository-check-repository" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.Repository.check-repository1">Liferay.Service(
	'/repository/check-repository',
	{
		repositoryId:${repositoryId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-Repository-delete-repository" description="jsonws-Repository-delete-repository" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.Repository.delete-repository1">Liferay.Service(
	'/repository/delete-repository',
	{
		repositoryId:${repositoryId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-Repository-get-local-repository-impl" description="jsonws-Repository-get-local-repository-impl" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.Repository.get-local-repository-impl1">Liferay.Service(
	'/repository/get-local-repository-impl',
	{
		repositoryId:${repositoryId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-Repository-get-local-repository-impl" description="jsonws-Repository-get-local-repository-impl" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.Repository.get-local-repository-impl3">Liferay.Service(
	'/repository/get-local-repository-impl',
	{
		folderId:${folderId},
		fileEntryId:${fileEntryId},
		fileVersionId:${fileVersionId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-Repository-get-repository" description="jsonws-Repository-get-repository" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.Repository.get-repository1">Liferay.Service(
	'/repository/get-repository',
	{
		repositoryId:${repositoryId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-Repository-get-repository-impl" description="jsonws-Repository-get-repository-impl" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.Repository.get-repository-impl1">Liferay.Service(
	'/repository/get-repository-impl',
	{
		repositoryId:${repositoryId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-Repository-get-repository-impl" description="jsonws-Repository-get-repository-impl" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.Repository.get-repository-impl3">Liferay.Service(
	'/repository/get-repository-impl',
	{
		folderId:${folderId},
		fileEntryId:${fileEntryId},
		fileVersionId:${fileVersionId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-Repository-get-supported-configurations" description="jsonws-Repository-get-supported-configurations" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.Repository.get-supported-configurations1">Liferay.Service(
	'/repository/get-supported-configurations',
	{
		classNameId:${classNameId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-Repository-get-supported-parameters" description="jsonws-Repository-get-supported-parameters" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.Repository.get-supported-parameters2">Liferay.Service(
	'/repository/get-supported-parameters',
	{
		classNameId:${classNameId},
		configuration:${configuration}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-Repository-get-type-settings-properties" description="jsonws-Repository-get-type-settings-properties" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.Repository.get-type-settings-properties1">Liferay.Service(
	'/repository/get-type-settings-properties',
	{
		repositoryId:${repositoryId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-Repository-update-repository" description="jsonws-Repository-update-repository" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.Repository.update-repository3">Liferay.Service(
	'/repository/update-repository',
	{
		repositoryId:${repositoryId},
		name:${name},
		description:${description}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-ResourceBlock-add-company-scope-permission" description="jsonws-ResourceBlock-add-company-scope-permission" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.ResourceBlock.add-company-scope-permission5">Liferay.Service(
	'/resourceblock/add-company-scope-permission',
	{
		scopeGroupId:${scopeGroupId},
		companyId:${companyId},
		name:${name},
		roleId:${roleId},
		actionId:${actionId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-ResourceBlock-add-group-scope-permission" description="jsonws-ResourceBlock-add-group-scope-permission" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.ResourceBlock.add-group-scope-permission6">Liferay.Service(
	'/resourceblock/add-group-scope-permission',
	{
		scopeGroupId:${scopeGroupId},
		companyId:${companyId},
		groupId:${groupId},
		name:${name},
		roleId:${roleId},
		actionId:${actionId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-ResourceBlock-add-individual-scope-permission" description="jsonws-ResourceBlock-add-individual-scope-permission" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.ResourceBlock.add-individual-scope-permission6">Liferay.Service(
	'/resourceblock/add-individual-scope-permission',
	{
		companyId:${companyId},
		groupId:${groupId},
		name:${name},
		primKey:${primKey},
		roleId:${roleId},
		actionId:${actionId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-ResourceBlock-remove-all-group-scope-permissions" description="jsonws-ResourceBlock-remove-all-group-scope-permissions" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.ResourceBlock.remove-all-group-scope-permissions5">Liferay.Service(
	'/resourceblock/remove-all-group-scope-permissions',
	{
		scopeGroupId:${scopeGroupId},
		companyId:${companyId},
		name:${name},
		roleId:${roleId},
		actionId:${actionId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-ResourceBlock-remove-company-scope-permission" description="jsonws-ResourceBlock-remove-company-scope-permission" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.ResourceBlock.remove-company-scope-permission5">Liferay.Service(
	'/resourceblock/remove-company-scope-permission',
	{
		scopeGroupId:${scopeGroupId},
		companyId:${companyId},
		name:${name},
		roleId:${roleId},
		actionId:${actionId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-ResourceBlock-remove-group-scope-permission" description="jsonws-ResourceBlock-remove-group-scope-permission" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.ResourceBlock.remove-group-scope-permission6">Liferay.Service(
	'/resourceblock/remove-group-scope-permission',
	{
		scopeGroupId:${scopeGroupId},
		companyId:${companyId},
		groupId:${groupId},
		name:${name},
		roleId:${roleId},
		actionId:${actionId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-ResourceBlock-remove-individual-scope-permission" description="jsonws-ResourceBlock-remove-individual-scope-permission" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.ResourceBlock.remove-individual-scope-permission6">Liferay.Service(
	'/resourceblock/remove-individual-scope-permission',
	{
		companyId:${companyId},
		groupId:${groupId},
		name:${name},
		primKey:${primKey},
		roleId:${roleId},
		actionId:${actionId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-ResourceBlock-set-company-scope-permissions" description="jsonws-ResourceBlock-set-company-scope-permissions" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.ResourceBlock.set-company-scope-permissions5">Liferay.Service(
	'/resourceblock/set-company-scope-permissions',
	{
		scopeGroupId:${scopeGroupId},
		companyId:${companyId},
		name:${name},
		roleId:${roleId},
		actionIds:${actionIds}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-ResourceBlock-set-group-scope-permissions" description="jsonws-ResourceBlock-set-group-scope-permissions" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.ResourceBlock.set-group-scope-permissions6">Liferay.Service(
	'/resourceblock/set-group-scope-permissions',
	{
		scopeGroupId:${scopeGroupId},
		companyId:${companyId},
		groupId:${groupId},
		name:${name},
		roleId:${roleId},
		actionIds:${actionIds}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-ResourceBlock-set-individual-scope-permissions" description="jsonws-ResourceBlock-set-individual-scope-permissions" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.ResourceBlock.set-individual-scope-permissions5">Liferay.Service(
	'/resourceblock/set-individual-scope-permissions',
	{
		companyId:${companyId},
		groupId:${groupId},
		name:${name},
		primKey:${primKey},
		roleIdsToActionIds:${roleIdsToActionIds}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-ResourceBlock-set-individual-scope-permissions" description="jsonws-ResourceBlock-set-individual-scope-permissions" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.ResourceBlock.set-individual-scope-permissions6">Liferay.Service(
	'/resourceblock/set-individual-scope-permissions',
	{
		companyId:${companyId},
		groupId:${groupId},
		name:${name},
		primKey:${primKey},
		roleId:${roleId},
		actionIds:${actionIds}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-ResourcePermission-add-resource-permission" description="jsonws-ResourcePermission-add-resource-permission" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.ResourcePermission.add-resource-permission7">Liferay.Service(
	'/resourcepermission/add-resource-permission',
	{
		groupId:${groupId},
		companyId:${companyId},
		name:${name},
		scope:${scope},
		primKey:${primKey},
		roleId:${roleId},
		actionId:${actionId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-ResourcePermission-remove-resource-permission" description="jsonws-ResourcePermission-remove-resource-permission" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.ResourcePermission.remove-resource-permission7">Liferay.Service(
	'/resourcepermission/remove-resource-permission',
	{
		groupId:${groupId},
		companyId:${companyId},
		name:${name},
		scope:${scope},
		primKey:${primKey},
		roleId:${roleId},
		actionId:${actionId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-ResourcePermission-remove-resource-permissions" description="jsonws-ResourcePermission-remove-resource-permissions" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.ResourcePermission.remove-resource-permissions6">Liferay.Service(
	'/resourcepermission/remove-resource-permissions',
	{
		groupId:${groupId},
		companyId:${companyId},
		name:${name},
		scope:${scope},
		roleId:${roleId},
		actionId:${actionId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-ResourcePermission-set-individual-resource-permissions" description="jsonws-ResourcePermission-set-individual-resource-permissions" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.ResourcePermission.set-individual-resource-permissions5">Liferay.Service(
	'/resourcepermission/set-individual-resource-permissions',
	{
		groupId:${groupId},
		companyId:${companyId},
		name:${name},
		primKey:${primKey},
		roleIdsToActionIds:${roleIdsToActionIds}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-ResourcePermission-set-individual-resource-permissions" description="jsonws-ResourcePermission-set-individual-resource-permissions" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.ResourcePermission.set-individual-resource-permissions6">Liferay.Service(
	'/resourcepermission/set-individual-resource-permissions',
	{
		groupId:${groupId},
		companyId:${companyId},
		name:${name},
		primKey:${primKey},
		roleId:${roleId},
		actionIds:${actionIds}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-Role-add-role" description="jsonws-Role-add-role" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.Role.add-role4">Liferay.Service(
	'/role/add-role',
	{
		name:${name},
		titleMap:${titleMap},
		descriptionMap:${descriptionMap},
		type:${type}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-Role-add-role" description="jsonws-Role-add-role" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.Role.add-role8">Liferay.Service(
	'/role/add-role',
	{
		className:${className},
		classPK:${classPK},
		name:${name},
		titleMap:${titleMap},
		descriptionMap:${descriptionMap},
		type:${type},
		subtype:${subtype},
		serviceContext:${serviceContext}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-Role-add-user-roles" description="jsonws-Role-add-user-roles" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.Role.add-user-roles2">Liferay.Service(
	'/role/add-user-roles',
	{
		userId:${userId},
		roleIds:${roleIds}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-Role-delete-role" description="jsonws-Role-delete-role" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.Role.delete-role1">Liferay.Service(
	'/role/delete-role',
	{
		roleId:${roleId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-Role-get-group-roles" description="jsonws-Role-get-group-roles" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.Role.get-group-roles1">Liferay.Service(
	'/role/get-group-roles',
	{
		groupId:${groupId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-Role-get-role" description="jsonws-Role-get-role" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.Role.get-role1">Liferay.Service(
	'/role/get-role',
	{
		roleId:${roleId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-Role-get-role" description="jsonws-Role-get-role" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.Role.get-role2">Liferay.Service(
	'/role/get-role',
	{
		companyId:${companyId},
		name:${name}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-Role-get-user-group-group-roles" description="jsonws-Role-get-user-group-group-roles" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.Role.get-user-group-group-roles2">Liferay.Service(
	'/role/get-user-group-group-roles',
	{
		userId:${userId},
		groupId:${groupId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-Role-get-user-group-roles" description="jsonws-Role-get-user-group-roles" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.Role.get-user-group-roles2">Liferay.Service(
	'/role/get-user-group-roles',
	{
		userId:${userId},
		groupId:${groupId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-Role-get-user-related-roles" description="jsonws-Role-get-user-related-roles" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.Role.get-user-related-roles2">Liferay.Service(
	'/role/get-user-related-roles',
	{
		userId:${userId},
		groups:${groups}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-Role-get-user-roles" description="jsonws-Role-get-user-roles" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.Role.get-user-roles1">Liferay.Service(
	'/role/get-user-roles',
	{
		userId:${userId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-Role-has-user-role" description="jsonws-Role-has-user-role" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.Role.has-user-role4">Liferay.Service(
	'/role/has-user-role',
	{
		userId:${userId},
		companyId:${companyId},
		name:${name},
		inherited:${inherited}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-Role-has-user-roles" description="jsonws-Role-has-user-roles" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.Role.has-user-roles4">Liferay.Service(
	'/role/has-user-roles',
	{
		userId:${userId},
		companyId:${companyId},
		names:${names},
		inherited:${inherited}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-Role-unset-user-roles" description="jsonws-Role-unset-user-roles" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.Role.unset-user-roles2">Liferay.Service(
	'/role/unset-user-roles',
	{
		userId:${userId},
		roleIds:${roleIds}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-Role-update-role" description="jsonws-Role-update-role" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.Role.update-role6">Liferay.Service(
	'/role/update-role',
	{
		roleId:${roleId},
		name:${name},
		titleMap:${titleMap},
		descriptionMap:${descriptionMap},
		subtype:${subtype},
		serviceContext:${serviceContext}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-SCFrameworkVersion-add-framework-version" description="jsonws-SCFrameworkVersion-add-framework-version" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.SCFrameworkVersion.add-framework-version5">Liferay.Service(
	'/scframeworkversion/add-framework-version',
	{
		name:${name},
		url:${url},
		active:${active},
		priority:${priority},
		serviceContext:${serviceContext}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-SCFrameworkVersion-delete-framework-version" description="jsonws-SCFrameworkVersion-delete-framework-version" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.SCFrameworkVersion.delete-framework-version1">Liferay.Service(
	'/scframeworkversion/delete-framework-version',
	{
		frameworkVersionId:${frameworkVersionId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-SCFrameworkVersion-get-framework-version" description="jsonws-SCFrameworkVersion-get-framework-version" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.SCFrameworkVersion.get-framework-version1">Liferay.Service(
	'/scframeworkversion/get-framework-version',
	{
		frameworkVersionId:${frameworkVersionId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-SCFrameworkVersion-get-framework-versions" description="jsonws-SCFrameworkVersion-get-framework-versions" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.SCFrameworkVersion.get-framework-versions2">Liferay.Service(
	'/scframeworkversion/get-framework-versions',
	{
		groupId:${groupId},
		active:${active}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-SCFrameworkVersion-get-framework-versions" description="jsonws-SCFrameworkVersion-get-framework-versions" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.SCFrameworkVersion.get-framework-versions4">Liferay.Service(
	'/scframeworkversion/get-framework-versions',
	{
		groupId:${groupId},
		active:${active},
		start:${start},
		end:${end}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-SCFrameworkVersion-update-framework-version" description="jsonws-SCFrameworkVersion-update-framework-version" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.SCFrameworkVersion.update-framework-version5">Liferay.Service(
	'/scframeworkversion/update-framework-version',
	{
		frameworkVersionId:${frameworkVersionId},
		name:${name},
		url:${url},
		active:${active},
		priority:${priority}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-SCLicense-add-license" description="jsonws-SCLicense-add-license" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.SCLicense.add-license5">Liferay.Service(
	'/sclicense/add-license',
	{
		name:${name},
		url:${url},
		openSource:${openSource},
		active:${active},
		recommended:${recommended}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-SCLicense-delete-license" description="jsonws-SCLicense-delete-license" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.SCLicense.delete-license1">Liferay.Service(
	'/sclicense/delete-license',
	{
		licenseId:${licenseId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-SCLicense-get-license" description="jsonws-SCLicense-get-license" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.SCLicense.get-license1">Liferay.Service(
	'/sclicense/get-license',
	{
		licenseId:${licenseId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-SCLicense-update-license" description="jsonws-SCLicense-update-license" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.SCLicense.update-license6">Liferay.Service(
	'/sclicense/update-license',
	{
		licenseId:${licenseId},
		name:${name},
		url:${url},
		openSource:${openSource},
		active:${active},
		recommended:${recommended}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-SCProductEntry-add-product-entry" description="jsonws-SCProductEntry-add-product-entry" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.SCProductEntry.add-product-entry13">Liferay.Service(
	'/scproductentry/add-product-entry',
	{
		name:${name},
		type:${type},
		tags:${tags},
		shortDescription:${shortDescription},
		longDescription:${longDescription},
		pageURL:${pageURL},
		author:${author},
		repoGroupId:${repoGroupId},
		repoArtifactId:${repoArtifactId},
		licenseIds:${licenseIds},
		thumbnails:${thumbnails},
		fullImages:${fullImages},
		serviceContext:${serviceContext}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-SCProductEntry-delete-product-entry" description="jsonws-SCProductEntry-delete-product-entry" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.SCProductEntry.delete-product-entry1">Liferay.Service(
	'/scproductentry/delete-product-entry',
	{
		productEntryId:${productEntryId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-SCProductEntry-get-product-entry" description="jsonws-SCProductEntry-get-product-entry" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.SCProductEntry.get-product-entry1">Liferay.Service(
	'/scproductentry/get-product-entry',
	{
		productEntryId:${productEntryId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-SCProductEntry-update-product-entry" description="jsonws-SCProductEntry-update-product-entry" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.SCProductEntry.update-product-entry13">Liferay.Service(
	'/scproductentry/update-product-entry',
	{
		productEntryId:${productEntryId},
		name:${name},
		type:${type},
		tags:${tags},
		shortDescription:${shortDescription},
		longDescription:${longDescription},
		pageURL:${pageURL},
		author:${author},
		repoGroupId:${repoGroupId},
		repoArtifactId:${repoArtifactId},
		licenseIds:${licenseIds},
		thumbnails:${thumbnails},
		fullImages:${fullImages}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-SCProductVersion-add-product-version" description="jsonws-SCProductVersion-add-product-version" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.SCProductVersion.add-product-version9">Liferay.Service(
	'/scproductversion/add-product-version',
	{
		productEntryId:${productEntryId},
		version:${version},
		changeLog:${changeLog},
		downloadPageURL:${downloadPageURL},
		directDownloadURL:${directDownloadURL},
		testDirectDownloadURL:${testDirectDownloadURL},
		repoStoreArtifact:${repoStoreArtifact},
		frameworkVersionIds:${frameworkVersionIds},
		serviceContext:${serviceContext}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-SCProductVersion-delete-product-version" description="jsonws-SCProductVersion-delete-product-version" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.SCProductVersion.delete-product-version1">Liferay.Service(
	'/scproductversion/delete-product-version',
	{
		productVersionId:${productVersionId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-SCProductVersion-get-product-version" description="jsonws-SCProductVersion-get-product-version" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.SCProductVersion.get-product-version1">Liferay.Service(
	'/scproductversion/get-product-version',
	{
		productVersionId:${productVersionId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-SCProductVersion-get-product-versions" description="jsonws-SCProductVersion-get-product-versions" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.SCProductVersion.get-product-versions3">Liferay.Service(
	'/scproductversion/get-product-versions',
	{
		productEntryId:${productEntryId},
		start:${start},
		end:${end}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-SCProductVersion-get-product-versions-count" description="jsonws-SCProductVersion-get-product-versions-count" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.SCProductVersion.get-product-versions-count1">Liferay.Service(
	'/scproductversion/get-product-versions-count',
	{
		productEntryId:${productEntryId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-SCProductVersion-update-product-version" description="jsonws-SCProductVersion-update-product-version" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.SCProductVersion.update-product-version8">Liferay.Service(
	'/scproductversion/update-product-version',
	{
		productVersionId:${productVersionId},
		version:${version},
		changeLog:${changeLog},
		downloadPageURL:${downloadPageURL},
		directDownloadURL:${directDownloadURL},
		testDirectDownloadURL:${testDirectDownloadURL},
		repoStoreArtifact:${repoStoreArtifact},
		frameworkVersionIds:${frameworkVersionIds}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-ShoppingCategory-add-category" description="jsonws-ShoppingCategory-add-category" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.ShoppingCategory.add-category4">Liferay.Service(
	'/shoppingcategory/add-category',
	{
		parentCategoryId:${parentCategoryId},
		name:${name},
		description:${description},
		serviceContext:${serviceContext}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-ShoppingCategory-delete-category" description="jsonws-ShoppingCategory-delete-category" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.ShoppingCategory.delete-category1">Liferay.Service(
	'/shoppingcategory/delete-category',
	{
		categoryId:${categoryId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-ShoppingCategory-get-categories" description="jsonws-ShoppingCategory-get-categories" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.ShoppingCategory.get-categories1">Liferay.Service(
	'/shoppingcategory/get-categories',
	{
		groupId:${groupId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-ShoppingCategory-get-categories" description="jsonws-ShoppingCategory-get-categories" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.ShoppingCategory.get-categories4">Liferay.Service(
	'/shoppingcategory/get-categories',
	{
		groupId:${groupId},
		parentCategoryId:${parentCategoryId},
		start:${start},
		end:${end}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-ShoppingCategory-get-categories-count" description="jsonws-ShoppingCategory-get-categories-count" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.ShoppingCategory.get-categories-count2">Liferay.Service(
	'/shoppingcategory/get-categories-count',
	{
		groupId:${groupId},
		parentCategoryId:${parentCategoryId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-ShoppingCategory-get-category" description="jsonws-ShoppingCategory-get-category" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.ShoppingCategory.get-category1">Liferay.Service(
	'/shoppingcategory/get-category',
	{
		categoryId:${categoryId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-ShoppingCategory-get-subcategory-ids" description="jsonws-ShoppingCategory-get-subcategory-ids" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.ShoppingCategory.get-subcategory-ids3">Liferay.Service(
	'/shoppingcategory/get-subcategory-ids',
	{
		categoryIds:${categoryIds},
		groupId:${groupId},
		categoryId:${categoryId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-ShoppingCategory-update-category" description="jsonws-ShoppingCategory-update-category" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.ShoppingCategory.update-category6">Liferay.Service(
	'/shoppingcategory/update-category',
	{
		categoryId:${categoryId},
		parentCategoryId:${parentCategoryId},
		name:${name},
		description:${description},
		mergeWithParentCategory:${mergeWithParentCategory},
		serviceContext:${serviceContext}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-ShoppingCoupon-add-coupon" description="jsonws-ShoppingCoupon-add-coupon" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.ShoppingCoupon.add-coupon22">Liferay.Service(
	'/shoppingcoupon/add-coupon',
	{
		code:${code},
		autoCode:${autoCode},
		name:${name},
		description:${description},
		startDateMonth:${startDateMonth},
		startDateDay:${startDateDay},
		startDateYear:${startDateYear},
		startDateHour:${startDateHour},
		startDateMinute:${startDateMinute},
		endDateMonth:${endDateMonth},
		endDateDay:${endDateDay},
		endDateYear:${endDateYear},
		endDateHour:${endDateHour},
		endDateMinute:${endDateMinute},
		neverExpire:${neverExpire},
		active:${active},
		limitCategories:${limitCategories},
		limitSkus:${limitSkus},
		minOrder:${minOrder},
		discount:${discount},
		discountType:${discountType},
		serviceContext:${serviceContext}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-ShoppingCoupon-delete-coupon" description="jsonws-ShoppingCoupon-delete-coupon" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.ShoppingCoupon.delete-coupon2">Liferay.Service(
	'/shoppingcoupon/delete-coupon',
	{
		groupId:${groupId},
		couponId:${couponId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-ShoppingCoupon-get-coupon" description="jsonws-ShoppingCoupon-get-coupon" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.ShoppingCoupon.get-coupon2">Liferay.Service(
	'/shoppingcoupon/get-coupon',
	{
		groupId:${groupId},
		couponId:${couponId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-ShoppingCoupon-search" description="jsonws-ShoppingCoupon-search" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.ShoppingCoupon.search8">Liferay.Service(
	'/shoppingcoupon/search',
	{
		groupId:${groupId},
		companyId:${companyId},
		code:${code},
		active:${active},
		discountType:${discountType},
		andOperator:${andOperator},
		start:${start},
		end:${end}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-ShoppingCoupon-update-coupon" description="jsonws-ShoppingCoupon-update-coupon" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.ShoppingCoupon.update-coupon21">Liferay.Service(
	'/shoppingcoupon/update-coupon',
	{
		couponId:${couponId},
		name:${name},
		description:${description},
		startDateMonth:${startDateMonth},
		startDateDay:${startDateDay},
		startDateYear:${startDateYear},
		startDateHour:${startDateHour},
		startDateMinute:${startDateMinute},
		endDateMonth:${endDateMonth},
		endDateDay:${endDateDay},
		endDateYear:${endDateYear},
		endDateHour:${endDateHour},
		endDateMinute:${endDateMinute},
		neverExpire:${neverExpire},
		active:${active},
		limitCategories:${limitCategories},
		limitSkus:${limitSkus},
		minOrder:${minOrder},
		discount:${discount},
		discountType:${discountType},
		serviceContext:${serviceContext}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-ShoppingItem-add-book-items" description="jsonws-ShoppingItem-add-book-items" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.ShoppingItem.add-book-items3">Liferay.Service(
	'/shoppingitem/add-book-items',
	{
		groupId:${groupId},
		categoryId:${categoryId},
		isbns:${isbns}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-ShoppingItem-add-item" description="jsonws-ShoppingItem-add-item" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.ShoppingItem.add-item23">Liferay.Service(
	'/shoppingitem/add-item',
	{
		groupId:${groupId},
		categoryId:${categoryId},
		sku:${sku},
		name:${name},
		description:${description},
		properties:${properties},
		fieldsQuantities:${fieldsQuantities},
		requiresShipping:${requiresShipping},
		stockQuantity:${stockQuantity},
		featured:${featured},
		sale:${sale},
		smallImage:${smallImage},
		smallImageURL:${smallImageURL},
		smallFile:${smallFile},
		mediumImage:${mediumImage},
		mediumImageURL:${mediumImageURL},
		mediumFile:${mediumFile},
		largeImage:${largeImage},
		largeImageURL:${largeImageURL},
		largeFile:${largeFile},
		itemFields:${itemFields},
		itemPrices:${itemPrices},
		serviceContext:${serviceContext}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-ShoppingItem-delete-item" description="jsonws-ShoppingItem-delete-item" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.ShoppingItem.delete-item1">Liferay.Service(
	'/shoppingitem/delete-item',
	{
		itemId:${itemId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-ShoppingItem-get-categories-items-count" description="jsonws-ShoppingItem-get-categories-items-count" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.ShoppingItem.get-categories-items-count2">Liferay.Service(
	'/shoppingitem/get-categories-items-count',
	{
		groupId:${groupId},
		categoryIds:${categoryIds}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-ShoppingItem-get-item" description="jsonws-ShoppingItem-get-item" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.ShoppingItem.get-item1">Liferay.Service(
	'/shoppingitem/get-item',
	{
		itemId:${itemId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-ShoppingItem-get-items" description="jsonws-ShoppingItem-get-items" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.ShoppingItem.get-items2">Liferay.Service(
	'/shoppingitem/get-items',
	{
		groupId:${groupId},
		categoryId:${categoryId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-ShoppingItem-get-items" description="jsonws-ShoppingItem-get-items" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.ShoppingItem.get-items5">Liferay.Service(
	'/shoppingitem/get-items',
	{
		groupId:${groupId},
		categoryId:${categoryId},
		start:${start},
		end:${end},
		obc:${obc}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-ShoppingItem-get-items-count" description="jsonws-ShoppingItem-get-items-count" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.ShoppingItem.get-items-count2">Liferay.Service(
	'/shoppingitem/get-items-count',
	{
		groupId:${groupId},
		categoryId:${categoryId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-ShoppingItem-get-items-prev-and-next" description="jsonws-ShoppingItem-get-items-prev-and-next" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.ShoppingItem.get-items-prev-and-next2">Liferay.Service(
	'/shoppingitem/get-items-prev-and-next',
	{
		itemId:${itemId},
		obc:${obc}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-ShoppingItem-update-item" description="jsonws-ShoppingItem-update-item" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.ShoppingItem.update-item24">Liferay.Service(
	'/shoppingitem/update-item',
	{
		itemId:${itemId},
		groupId:${groupId},
		categoryId:${categoryId},
		sku:${sku},
		name:${name},
		description:${description},
		properties:${properties},
		fieldsQuantities:${fieldsQuantities},
		requiresShipping:${requiresShipping},
		stockQuantity:${stockQuantity},
		featured:${featured},
		sale:${sale},
		smallImage:${smallImage},
		smallImageURL:${smallImageURL},
		smallFile:${smallFile},
		mediumImage:${mediumImage},
		mediumImageURL:${mediumImageURL},
		mediumFile:${mediumFile},
		largeImage:${largeImage},
		largeImageURL:${largeImageURL},
		largeFile:${largeFile},
		itemFields:${itemFields},
		itemPrices:${itemPrices},
		serviceContext:${serviceContext}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-ShoppingOrder-complete-order" description="jsonws-ShoppingOrder-complete-order" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.ShoppingOrder.complete-order8">Liferay.Service(
	'/shoppingorder/complete-order',
	{
		groupId:${groupId},
		number:${number},
		ppTxnId:${ppTxnId},
		ppPaymentStatus:${ppPaymentStatus},
		ppPaymentGross:${ppPaymentGross},
		ppReceiverEmail:${ppReceiverEmail},
		ppPayerEmail:${ppPayerEmail},
		serviceContext:${serviceContext}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-ShoppingOrder-delete-order" description="jsonws-ShoppingOrder-delete-order" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.ShoppingOrder.delete-order2">Liferay.Service(
	'/shoppingorder/delete-order',
	{
		groupId:${groupId},
		orderId:${orderId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-ShoppingOrder-get-order" description="jsonws-ShoppingOrder-get-order" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.ShoppingOrder.get-order2">Liferay.Service(
	'/shoppingorder/get-order',
	{
		groupId:${groupId},
		orderId:${orderId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-ShoppingOrder-send-email" description="jsonws-ShoppingOrder-send-email" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.ShoppingOrder.send-email4">Liferay.Service(
	'/shoppingorder/send-email',
	{
		groupId:${groupId},
		orderId:${orderId},
		emailType:${emailType},
		serviceContext:${serviceContext}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-ShoppingOrder-update-order" description="jsonws-ShoppingOrder-update-order" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.ShoppingOrder.update-order30">Liferay.Service(
	'/shoppingorder/update-order',
	{
		groupId:${groupId},
		orderId:${orderId},
		billingFirstName:${billingFirstName},
		billingLastName:${billingLastName},
		billingEmailAddress:${billingEmailAddress},
		billingCompany:${billingCompany},
		billingStreet:${billingStreet},
		billingCity:${billingCity},
		billingState:${billingState},
		billingZip:${billingZip},
		billingCountry:${billingCountry},
		billingPhone:${billingPhone},
		shipToBilling:${shipToBilling},
		shippingFirstName:${shippingFirstName},
		shippingLastName:${shippingLastName},
		shippingEmailAddress:${shippingEmailAddress},
		shippingCompany:${shippingCompany},
		shippingStreet:${shippingStreet},
		shippingCity:${shippingCity},
		shippingState:${shippingState},
		shippingZip:${shippingZip},
		shippingCountry:${shippingCountry},
		shippingPhone:${shippingPhone},
		ccName:${ccName},
		ccType:${ccType},
		ccNumber:${ccNumber},
		ccExpMonth:${ccExpMonth},
		ccExpYear:${ccExpYear},
		ccVerNumber:${ccVerNumber},
		comments:${comments}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-ShoppingOrder-update-order" description="jsonws-ShoppingOrder-update-order" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.ShoppingOrder.update-order7">Liferay.Service(
	'/shoppingorder/update-order',
	{
		groupId:${groupId},
		orderId:${orderId},
		ppTxnId:${ppTxnId},
		ppPaymentStatus:${ppPaymentStatus},
		ppPaymentGross:${ppPaymentGross},
		ppReceiverEmail:${ppReceiverEmail},
		ppPayerEmail:${ppPayerEmail}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-SocialActivity-get-activities" description="jsonws-SocialActivity-get-activities" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.SocialActivity.get-activities3">Liferay.Service(
	'/socialactivity/get-activities',
	{
		className:${className},
		start:${start},
		end:${end}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-SocialActivity-get-activities" description="jsonws-SocialActivity-get-activities" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.SocialActivity.get-activities3">Liferay.Service(
	'/socialactivity/get-activities',
	{
		classNameId:${classNameId},
		start:${start},
		end:${end}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-SocialActivity-get-activities" description="jsonws-SocialActivity-get-activities" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.SocialActivity.get-activities5">Liferay.Service(
	'/socialactivity/get-activities',
	{
		mirrorActivityId:${mirrorActivityId},
		className:${className},
		classPK:${classPK},
		start:${start},
		end:${end}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-SocialActivity-get-activities" description="jsonws-SocialActivity-get-activities" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.SocialActivity.get-activities5">Liferay.Service(
	'/socialactivity/get-activities',
	{
		mirrorActivityId:${mirrorActivityId},
		classNameId:${classNameId},
		classPK:${classPK},
		start:${start},
		end:${end}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-SocialActivity-get-activities-count" description="jsonws-SocialActivity-get-activities-count" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.SocialActivity.get-activities-count1">Liferay.Service(
	'/socialactivity/get-activities-count',
	{
		className:${className}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-SocialActivity-get-activities-count" description="jsonws-SocialActivity-get-activities-count" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.SocialActivity.get-activities-count1">Liferay.Service(
	'/socialactivity/get-activities-count',
	{
		classNameId:${classNameId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-SocialActivity-get-activities-count" description="jsonws-SocialActivity-get-activities-count" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.SocialActivity.get-activities-count3">Liferay.Service(
	'/socialactivity/get-activities-count',
	{
		mirrorActivityId:${mirrorActivityId},
		className:${className},
		classPK:${classPK}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-SocialActivity-get-activities-count" description="jsonws-SocialActivity-get-activities-count" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.SocialActivity.get-activities-count3">Liferay.Service(
	'/socialactivity/get-activities-count',
	{
		mirrorActivityId:${mirrorActivityId},
		classNameId:${classNameId},
		classPK:${classPK}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-SocialActivity-get-activity" description="jsonws-SocialActivity-get-activity" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.SocialActivity.get-activity1">Liferay.Service(
	'/socialactivity/get-activity',
	{
		activityId:${activityId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-SocialActivity-get-activity-set-activities" description="jsonws-SocialActivity-get-activity-set-activities" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.SocialActivity.get-activity-set-activities3">Liferay.Service(
	'/socialactivity/get-activity-set-activities',
	{
		activitySetId:${activitySetId},
		start:${start},
		end:${end}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-SocialActivity-get-group-activities" description="jsonws-SocialActivity-get-group-activities" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.SocialActivity.get-group-activities3">Liferay.Service(
	'/socialactivity/get-group-activities',
	{
		groupId:${groupId},
		start:${start},
		end:${end}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-SocialActivity-get-group-activities-count" description="jsonws-SocialActivity-get-group-activities-count" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.SocialActivity.get-group-activities-count1">Liferay.Service(
	'/socialactivity/get-group-activities-count',
	{
		groupId:${groupId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-SocialActivity-get-group-users-activities" description="jsonws-SocialActivity-get-group-users-activities" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.SocialActivity.get-group-users-activities3">Liferay.Service(
	'/socialactivity/get-group-users-activities',
	{
		groupId:${groupId},
		start:${start},
		end:${end}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-SocialActivity-get-group-users-activities-count" description="jsonws-SocialActivity-get-group-users-activities-count" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.SocialActivity.get-group-users-activities-count1">Liferay.Service(
	'/socialactivity/get-group-users-activities-count',
	{
		groupId:${groupId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-SocialActivity-get-mirror-activity" description="jsonws-SocialActivity-get-mirror-activity" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.SocialActivity.get-mirror-activity1">Liferay.Service(
	'/socialactivity/get-mirror-activity',
	{
		mirrorActivityId:${mirrorActivityId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-SocialActivity-get-organization-activities" description="jsonws-SocialActivity-get-organization-activities" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.SocialActivity.get-organization-activities3">Liferay.Service(
	'/socialactivity/get-organization-activities',
	{
		organizationId:${organizationId},
		start:${start},
		end:${end}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-SocialActivity-get-organization-activities-count" description="jsonws-SocialActivity-get-organization-activities-count" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.SocialActivity.get-organization-activities-count1">Liferay.Service(
	'/socialactivity/get-organization-activities-count',
	{
		organizationId:${organizationId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-SocialActivity-get-organization-users-activities" description="jsonws-SocialActivity-get-organization-users-activities" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.SocialActivity.get-organization-users-activities3">Liferay.Service(
	'/socialactivity/get-organization-users-activities',
	{
		organizationId:${organizationId},
		start:${start},
		end:${end}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-SocialActivity-get-organization-users-activities-count" description="jsonws-SocialActivity-get-organization-users-activities-count" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.SocialActivity.get-organization-users-activities-count1">Liferay.Service(
	'/socialactivity/get-organization-users-activities-count',
	{
		organizationId:${organizationId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-SocialActivity-get-relation-activities" description="jsonws-SocialActivity-get-relation-activities" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.SocialActivity.get-relation-activities3">Liferay.Service(
	'/socialactivity/get-relation-activities',
	{
		userId:${userId},
		start:${start},
		end:${end}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-SocialActivity-get-relation-activities" description="jsonws-SocialActivity-get-relation-activities" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.SocialActivity.get-relation-activities4">Liferay.Service(
	'/socialactivity/get-relation-activities',
	{
		userId:${userId},
		type:${type},
		start:${start},
		end:${end}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-SocialActivity-get-relation-activities-count" description="jsonws-SocialActivity-get-relation-activities-count" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.SocialActivity.get-relation-activities-count1">Liferay.Service(
	'/socialactivity/get-relation-activities-count',
	{
		userId:${userId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-SocialActivity-get-relation-activities-count" description="jsonws-SocialActivity-get-relation-activities-count" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.SocialActivity.get-relation-activities-count2">Liferay.Service(
	'/socialactivity/get-relation-activities-count',
	{
		userId:${userId},
		type:${type}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-SocialActivity-get-user-activities" description="jsonws-SocialActivity-get-user-activities" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.SocialActivity.get-user-activities3">Liferay.Service(
	'/socialactivity/get-user-activities',
	{
		userId:${userId},
		start:${start},
		end:${end}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-SocialActivity-get-user-activities-count" description="jsonws-SocialActivity-get-user-activities-count" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.SocialActivity.get-user-activities-count1">Liferay.Service(
	'/socialactivity/get-user-activities-count',
	{
		userId:${userId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-SocialActivity-get-user-groups-activities" description="jsonws-SocialActivity-get-user-groups-activities" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.SocialActivity.get-user-groups-activities3">Liferay.Service(
	'/socialactivity/get-user-groups-activities',
	{
		userId:${userId},
		start:${start},
		end:${end}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-SocialActivity-get-user-groups-activities-count" description="jsonws-SocialActivity-get-user-groups-activities-count" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.SocialActivity.get-user-groups-activities-count1">Liferay.Service(
	'/socialactivity/get-user-groups-activities-count',
	{
		userId:${userId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-SocialActivity-get-user-groups-and-organizations-activities" description="jsonws-SocialActivity-get-user-groups-and-organizations-activities" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.SocialActivity.get-user-groups-and-organizations-activities3">Liferay.Service(
	'/socialactivity/get-user-groups-and-organizations-activities',
	{
		userId:${userId},
		start:${start},
		end:${end}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-SocialActivity-get-user-groups-and-organizations-activities-count" description="jsonws-SocialActivity-get-user-groups-and-organizations-activities-count" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.SocialActivity.get-user-groups-and-organizations-activities-count1">Liferay.Service(
	'/socialactivity/get-user-groups-and-organizations-activities-count',
	{
		userId:${userId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-SocialActivity-get-user-organizations-activities" description="jsonws-SocialActivity-get-user-organizations-activities" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.SocialActivity.get-user-organizations-activities3">Liferay.Service(
	'/socialactivity/get-user-organizations-activities',
	{
		userId:${userId},
		start:${start},
		end:${end}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-SocialActivity-get-user-organizations-activities-count" description="jsonws-SocialActivity-get-user-organizations-activities-count" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.SocialActivity.get-user-organizations-activities-count1">Liferay.Service(
	'/socialactivity/get-user-organizations-activities-count',
	{
		userId:${userId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-SocialActivitySetting-get-activity-definition" description="jsonws-SocialActivitySetting-get-activity-definition" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.SocialActivitySetting.get-activity-definition3">Liferay.Service(
	'/socialactivitysetting/get-activity-definition',
	{
		groupId:${groupId},
		className:${className},
		activityType:${activityType}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-SocialActivitySetting-get-activity-definitions" description="jsonws-SocialActivitySetting-get-activity-definitions" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.SocialActivitySetting.get-activity-definitions2">Liferay.Service(
	'/socialactivitysetting/get-activity-definitions',
	{
		groupId:${groupId},
		className:${className}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-SocialActivitySetting-get-activity-settings" description="jsonws-SocialActivitySetting-get-activity-settings" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.SocialActivitySetting.get-activity-settings1">Liferay.Service(
	'/socialactivitysetting/get-activity-settings',
	{
		groupId:${groupId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-SocialActivitySetting-get-json-activity-definitions" description="jsonws-SocialActivitySetting-get-json-activity-definitions" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.SocialActivitySetting.get-json-activity-definitions2">Liferay.Service(
	'/socialactivitysetting/get-json-activity-definitions',
	{
		groupId:${groupId},
		className:${className}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-SocialActivitySetting-update-activity-setting" description="jsonws-SocialActivitySetting-update-activity-setting" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.SocialActivitySetting.update-activity-setting3">Liferay.Service(
	'/socialactivitysetting/update-activity-setting',
	{
		groupId:${groupId},
		className:${className},
		enabled:${enabled}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-SocialActivitySetting-update-activity-setting" description="jsonws-SocialActivitySetting-update-activity-setting" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.SocialActivitySetting.update-activity-setting4">Liferay.Service(
	'/socialactivitysetting/update-activity-setting',
	{
		groupId:${groupId},
		className:${className},
		activityType:${activityType},
		activityCounterDefinition:${activityCounterDefinition}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-SocialActivitySetting-update-activity-settings" description="jsonws-SocialActivitySetting-update-activity-settings" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.SocialActivitySetting.update-activity-settings4">Liferay.Service(
	'/socialactivitysetting/update-activity-settings',
	{
		groupId:${groupId},
		className:${className},
		activityType:${activityType},
		activityCounterDefinitions:${activityCounterDefinitions}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-SocialRequest-update-request" description="jsonws-SocialRequest-update-request" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.SocialRequest.update-request3">Liferay.Service(
	'/socialrequest/update-request',
	{
		requestId:${requestId},
		status:${status},
		themeDisplay:${themeDisplay}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-Staging-clean-up-staging-request" description="jsonws-Staging-clean-up-staging-request" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.Staging.clean-up-staging-request1">Liferay.Service(
	'/staging/clean-up-staging-request',
	{
		stagingRequestId:${stagingRequestId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-Staging-create-staging-request" description="jsonws-Staging-create-staging-request" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.Staging.create-staging-request2">Liferay.Service(
	'/staging/create-staging-request',
	{
		groupId:${groupId},
		checksum:${checksum}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-Staging-publish-staging-request" description="jsonws-Staging-publish-staging-request" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.Staging.publish-staging-request3">Liferay.Service(
	'/staging/publish-staging-request',
	{
		stagingRequestId:${stagingRequestId},
		privateLayout:${privateLayout},
		parameterMap:${parameterMap}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-Staging-update-staging-request" description="jsonws-Staging-update-staging-request" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.Staging.update-staging-request3">Liferay.Service(
	'/staging/update-staging-request',
	{
		stagingRequestId:${stagingRequestId},
		fileName:${fileName},
		bytes:${bytes}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-Staging-validate-staging-request" description="jsonws-Staging-validate-staging-request" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.Staging.validate-staging-request3">Liferay.Service(
	'/staging/validate-staging-request',
	{
		stagingRequestId:${stagingRequestId},
		privateLayout:${privateLayout},
		parameterMap:${parameterMap}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-Team-add-team" description="jsonws-Team-add-team" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.Team.add-team3">Liferay.Service(
	'/team/add-team',
	{
		groupId:${groupId},
		name:${name},
		description:${description}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-Team-delete-team" description="jsonws-Team-delete-team" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.Team.delete-team1">Liferay.Service(
	'/team/delete-team',
	{
		teamId:${teamId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-Team-get-group-teams" description="jsonws-Team-get-group-teams" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.Team.get-group-teams1">Liferay.Service(
	'/team/get-group-teams',
	{
		groupId:${groupId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-Team-get-team" description="jsonws-Team-get-team" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.Team.get-team1">Liferay.Service(
	'/team/get-team',
	{
		teamId:${teamId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-Team-get-team" description="jsonws-Team-get-team" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.Team.get-team2">Liferay.Service(
	'/team/get-team',
	{
		groupId:${groupId},
		name:${name}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-Team-get-user-teams" description="jsonws-Team-get-user-teams" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.Team.get-user-teams1">Liferay.Service(
	'/team/get-user-teams',
	{
		userId:${userId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-Team-get-user-teams" description="jsonws-Team-get-user-teams" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.Team.get-user-teams2">Liferay.Service(
	'/team/get-user-teams',
	{
		userId:${userId},
		groupId:${groupId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-Team-has-user-team" description="jsonws-Team-has-user-team" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.Team.has-user-team2">Liferay.Service(
	'/team/has-user-team',
	{
		userId:${userId},
		teamId:${teamId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-Team-update-team" description="jsonws-Team-update-team" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.Team.update-team3">Liferay.Service(
	'/team/update-team',
	{
		teamId:${teamId},
		name:${name},
		description:${description}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-Theme-get-themes" description="jsonws-Theme-get-themes" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.Theme.get-themes1">Liferay.Service(
	'/theme/get-themes',
	{
		companyId:${companyId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-Theme-get-war-themes" description="jsonws-Theme-get-war-themes" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.Theme.get-war-themes">Liferay.Service(
	'/theme/get-war-themes',
	{

	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-TrashEntry-delete-entries" description="jsonws-TrashEntry-delete-entries" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.TrashEntry.delete-entries1">Liferay.Service(
	'/trashentry/delete-entries',
	{
		entryIds:${entryIds}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-TrashEntry-delete-entries" description="jsonws-TrashEntry-delete-entries" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.TrashEntry.delete-entries1">Liferay.Service(
	'/trashentry/delete-entries',
	{
		groupId:${groupId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-TrashEntry-delete-entry" description="jsonws-TrashEntry-delete-entry" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.TrashEntry.delete-entry1">Liferay.Service(
	'/trashentry/delete-entry',
	{
		entryId:${entryId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-TrashEntry-delete-entry" description="jsonws-TrashEntry-delete-entry" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.TrashEntry.delete-entry2">Liferay.Service(
	'/trashentry/delete-entry',
	{
		className:${className},
		classPK:${classPK}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-TrashEntry-get-entries" description="jsonws-TrashEntry-get-entries" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.TrashEntry.get-entries1">Liferay.Service(
	'/trashentry/get-entries',
	{
		groupId:${groupId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-TrashEntry-get-entries" description="jsonws-TrashEntry-get-entries" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.TrashEntry.get-entries4">Liferay.Service(
	'/trashentry/get-entries',
	{
		groupId:${groupId},
		start:${start},
		end:${end},
		obc:${obc}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-TrashEntry-move-entry" description="jsonws-TrashEntry-move-entry" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.TrashEntry.move-entry4">Liferay.Service(
	'/trashentry/move-entry',
	{
		className:${className},
		classPK:${classPK},
		destinationContainerModelId:${destinationContainerModelId},
		serviceContext:${serviceContext}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-TrashEntry-restore-entry" description="jsonws-TrashEntry-restore-entry" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.TrashEntry.restore-entry1">Liferay.Service(
	'/trashentry/restore-entry',
	{
		entryId:${entryId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-TrashEntry-restore-entry" description="jsonws-TrashEntry-restore-entry" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.TrashEntry.restore-entry3">Liferay.Service(
	'/trashentry/restore-entry',
	{
		entryId:${entryId},
		overrideClassPK:${overrideClassPK},
		name:${name}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-User-add-group-users" description="jsonws-User-add-group-users" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.User.add-group-users3">Liferay.Service(
	'/user/add-group-users',
	{
		groupId:${groupId},
		userIds:${userIds},
		serviceContext:${serviceContext}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-User-add-organization-users" description="jsonws-User-add-organization-users" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.User.add-organization-users2">Liferay.Service(
	'/user/add-organization-users',
	{
		organizationId:${organizationId},
		userIds:${userIds}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-User-add-password-policy-users" description="jsonws-User-add-password-policy-users" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.User.add-password-policy-users2">Liferay.Service(
	'/user/add-password-policy-users',
	{
		passwordPolicyId:${passwordPolicyId},
		userIds:${userIds}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-User-add-role-users" description="jsonws-User-add-role-users" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.User.add-role-users2">Liferay.Service(
	'/user/add-role-users',
	{
		roleId:${roleId},
		userIds:${userIds}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-User-add-team-users" description="jsonws-User-add-team-users" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.User.add-team-users2">Liferay.Service(
	'/user/add-team-users',
	{
		teamId:${teamId},
		userIds:${userIds}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-User-add-user" description="jsonws-User-add-user" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.User.add-user26">Liferay.Service(
	'/user/add-user',
	{
		companyId:${companyId},
		autoPassword:${autoPassword},
		password1:${password1},
		password2:${password2},
		autoScreenName:${autoScreenName},
		screenName:${screenName},
		emailAddress:${emailAddress},
		facebookId:${facebookId},
		openId:${openId},
		locale:${locale},
		firstName:${firstName},
		middleName:${middleName},
		lastName:${lastName},
		prefixId:${prefixId},
		suffixId:${suffixId},
		male:${male},
		birthdayMonth:${birthdayMonth},
		birthdayDay:${birthdayDay},
		birthdayYear:${birthdayYear},
		jobTitle:${jobTitle},
		groupIds:${groupIds},
		organizationIds:${organizationIds},
		roleIds:${roleIds},
		userGroupIds:${userGroupIds},
		sendEmail:${sendEmail},
		serviceContext:${serviceContext}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-User-add-user" description="jsonws-User-add-user" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.User.add-user31">Liferay.Service(
	'/user/add-user',
	{
		companyId:${companyId},
		autoPassword:${autoPassword},
		password1:${password1},
		password2:${password2},
		autoScreenName:${autoScreenName},
		screenName:${screenName},
		emailAddress:${emailAddress},
		facebookId:${facebookId},
		openId:${openId},
		locale:${locale},
		firstName:${firstName},
		middleName:${middleName},
		lastName:${lastName},
		prefixId:${prefixId},
		suffixId:${suffixId},
		male:${male},
		birthdayMonth:${birthdayMonth},
		birthdayDay:${birthdayDay},
		birthdayYear:${birthdayYear},
		jobTitle:${jobTitle},
		groupIds:${groupIds},
		organizationIds:${organizationIds},
		roleIds:${roleIds},
		userGroupIds:${userGroupIds},
		addresses:${addresses},
		emailAddresses:${emailAddresses},
		phones:${phones},
		websites:${websites},
		announcementsDelivers:${announcementsDelivers},
		sendEmail:${sendEmail},
		serviceContext:${serviceContext}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-User-add-user-group-users" description="jsonws-User-add-user-group-users" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.User.add-user-group-users2">Liferay.Service(
	'/user/add-user-group-users',
	{
		userGroupId:${userGroupId},
		userIds:${userIds}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-User-add-user-with-workflow" description="jsonws-User-add-user-with-workflow" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.User.add-user-with-workflow26">Liferay.Service(
	'/user/add-user-with-workflow',
	{
		companyId:${companyId},
		autoPassword:${autoPassword},
		password1:${password1},
		password2:${password2},
		autoScreenName:${autoScreenName},
		screenName:${screenName},
		emailAddress:${emailAddress},
		facebookId:${facebookId},
		openId:${openId},
		locale:${locale},
		firstName:${firstName},
		middleName:${middleName},
		lastName:${lastName},
		prefixId:${prefixId},
		suffixId:${suffixId},
		male:${male},
		birthdayMonth:${birthdayMonth},
		birthdayDay:${birthdayDay},
		birthdayYear:${birthdayYear},
		jobTitle:${jobTitle},
		groupIds:${groupIds},
		organizationIds:${organizationIds},
		roleIds:${roleIds},
		userGroupIds:${userGroupIds},
		sendEmail:${sendEmail},
		serviceContext:${serviceContext}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-User-add-user-with-workflow" description="jsonws-User-add-user-with-workflow" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.User.add-user-with-workflow31">Liferay.Service(
	'/user/add-user-with-workflow',
	{
		companyId:${companyId},
		autoPassword:${autoPassword},
		password1:${password1},
		password2:${password2},
		autoScreenName:${autoScreenName},
		screenName:${screenName},
		emailAddress:${emailAddress},
		facebookId:${facebookId},
		openId:${openId},
		locale:${locale},
		firstName:${firstName},
		middleName:${middleName},
		lastName:${lastName},
		prefixId:${prefixId},
		suffixId:${suffixId},
		male:${male},
		birthdayMonth:${birthdayMonth},
		birthdayDay:${birthdayDay},
		birthdayYear:${birthdayYear},
		jobTitle:${jobTitle},
		groupIds:${groupIds},
		organizationIds:${organizationIds},
		roleIds:${roleIds},
		userGroupIds:${userGroupIds},
		addresses:${addresses},
		emailAddresses:${emailAddresses},
		phones:${phones},
		websites:${websites},
		announcementsDelivers:${announcementsDelivers},
		sendEmail:${sendEmail},
		serviceContext:${serviceContext}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-User-delete-portrait" description="jsonws-User-delete-portrait" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.User.delete-portrait1">Liferay.Service(
	'/user/delete-portrait',
	{
		userId:${userId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-User-delete-role-user" description="jsonws-User-delete-role-user" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.User.delete-role-user2">Liferay.Service(
	'/user/delete-role-user',
	{
		roleId:${roleId},
		userId:${userId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-User-delete-user" description="jsonws-User-delete-user" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.User.delete-user1">Liferay.Service(
	'/user/delete-user',
	{
		userId:${userId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-User-get-company-users" description="jsonws-User-get-company-users" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.User.get-company-users3">Liferay.Service(
	'/user/get-company-users',
	{
		companyId:${companyId},
		start:${start},
		end:${end}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-User-get-company-users-count" description="jsonws-User-get-company-users-count" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.User.get-company-users-count1">Liferay.Service(
	'/user/get-company-users-count',
	{
		companyId:${companyId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-User-get-group-user-ids" description="jsonws-User-get-group-user-ids" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.User.get-group-user-ids1">Liferay.Service(
	'/user/get-group-user-ids',
	{
		groupId:${groupId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-User-get-group-users" description="jsonws-User-get-group-users" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.User.get-group-users1">Liferay.Service(
	'/user/get-group-users',
	{
		groupId:${groupId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-User-get-organization-user-ids" description="jsonws-User-get-organization-user-ids" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.User.get-organization-user-ids1">Liferay.Service(
	'/user/get-organization-user-ids',
	{
		organizationId:${organizationId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-User-get-organization-users" description="jsonws-User-get-organization-users" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.User.get-organization-users1">Liferay.Service(
	'/user/get-organization-users',
	{
		organizationId:${organizationId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-User-get-role-user-ids" description="jsonws-User-get-role-user-ids" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.User.get-role-user-ids1">Liferay.Service(
	'/user/get-role-user-ids',
	{
		roleId:${roleId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-User-get-user-by-email-address" description="jsonws-User-get-user-by-email-address" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.User.get-user-by-email-address2">Liferay.Service(
	'/user/get-user-by-email-address',
	{
		companyId:${companyId},
		emailAddress:${emailAddress}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-User-get-user-by-id" description="jsonws-User-get-user-by-id" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.User.get-user-by-id1">Liferay.Service(
	'/user/get-user-by-id',
	{
		userId:${userId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-User-get-user-by-screen-name" description="jsonws-User-get-user-by-screen-name" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.User.get-user-by-screen-name2">Liferay.Service(
	'/user/get-user-by-screen-name',
	{
		companyId:${companyId},
		screenName:${screenName}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-User-get-user-group-users" description="jsonws-User-get-user-group-users" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.User.get-user-group-users1">Liferay.Service(
	'/user/get-user-group-users',
	{
		userGroupId:${userGroupId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-User-get-user-id-by-email-address" description="jsonws-User-get-user-id-by-email-address" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.User.get-user-id-by-email-address2">Liferay.Service(
	'/user/get-user-id-by-email-address',
	{
		companyId:${companyId},
		emailAddress:${emailAddress}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-User-get-user-id-by-screen-name" description="jsonws-User-get-user-id-by-screen-name" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.User.get-user-id-by-screen-name2">Liferay.Service(
	'/user/get-user-id-by-screen-name',
	{
		companyId:${companyId},
		screenName:${screenName}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-User-has-group-user" description="jsonws-User-has-group-user" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.User.has-group-user2">Liferay.Service(
	'/user/has-group-user',
	{
		groupId:${groupId},
		userId:${userId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-User-has-role-user" description="jsonws-User-has-role-user" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.User.has-role-user2">Liferay.Service(
	'/user/has-role-user',
	{
		roleId:${roleId},
		userId:${userId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-User-has-role-user" description="jsonws-User-has-role-user" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.User.has-role-user4">Liferay.Service(
	'/user/has-role-user',
	{
		companyId:${companyId},
		name:${name},
		userId:${userId},
		inherited:${inherited}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-User-set-role-users" description="jsonws-User-set-role-users" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.User.set-role-users2">Liferay.Service(
	'/user/set-role-users',
	{
		roleId:${roleId},
		userIds:${userIds}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-User-set-user-group-users" description="jsonws-User-set-user-group-users" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.User.set-user-group-users2">Liferay.Service(
	'/user/set-user-group-users',
	{
		userGroupId:${userGroupId},
		userIds:${userIds}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-User-unset-group-teams-users" description="jsonws-User-unset-group-teams-users" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.User.unset-group-teams-users2">Liferay.Service(
	'/user/unset-group-teams-users',
	{
		groupId:${groupId},
		userIds:${userIds}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-User-unset-group-users" description="jsonws-User-unset-group-users" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.User.unset-group-users3">Liferay.Service(
	'/user/unset-group-users',
	{
		groupId:${groupId},
		userIds:${userIds},
		serviceContext:${serviceContext}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-User-unset-organization-users" description="jsonws-User-unset-organization-users" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.User.unset-organization-users2">Liferay.Service(
	'/user/unset-organization-users',
	{
		organizationId:${organizationId},
		userIds:${userIds}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-User-unset-password-policy-users" description="jsonws-User-unset-password-policy-users" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.User.unset-password-policy-users2">Liferay.Service(
	'/user/unset-password-policy-users',
	{
		passwordPolicyId:${passwordPolicyId},
		userIds:${userIds}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-User-unset-role-users" description="jsonws-User-unset-role-users" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.User.unset-role-users2">Liferay.Service(
	'/user/unset-role-users',
	{
		roleId:${roleId},
		userIds:${userIds}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-User-unset-team-users" description="jsonws-User-unset-team-users" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.User.unset-team-users2">Liferay.Service(
	'/user/unset-team-users',
	{
		teamId:${teamId},
		userIds:${userIds}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-User-unset-user-group-users" description="jsonws-User-unset-user-group-users" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.User.unset-user-group-users2">Liferay.Service(
	'/user/unset-user-group-users',
	{
		userGroupId:${userGroupId},
		userIds:${userIds}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-User-update-agreed-to-terms-of-use" description="jsonws-User-update-agreed-to-terms-of-use" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.User.update-agreed-to-terms-of-use2">Liferay.Service(
	'/user/update-agreed-to-terms-of-use',
	{
		userId:${userId},
		agreedToTermsOfUse:${agreedToTermsOfUse}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-User-update-email-address" description="jsonws-User-update-email-address" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.User.update-email-address5">Liferay.Service(
	'/user/update-email-address',
	{
		userId:${userId},
		password:${password},
		emailAddress1:${emailAddress1},
		emailAddress2:${emailAddress2},
		serviceContext:${serviceContext}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-User-update-incomplete-user" description="jsonws-User-update-incomplete-user" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.User.update-incomplete-user23">Liferay.Service(
	'/user/update-incomplete-user',
	{
		companyId:${companyId},
		autoPassword:${autoPassword},
		password1:${password1},
		password2:${password2},
		autoScreenName:${autoScreenName},
		screenName:${screenName},
		emailAddress:${emailAddress},
		facebookId:${facebookId},
		openId:${openId},
		locale:${locale},
		firstName:${firstName},
		middleName:${middleName},
		lastName:${lastName},
		prefixId:${prefixId},
		suffixId:${suffixId},
		male:${male},
		birthdayMonth:${birthdayMonth},
		birthdayDay:${birthdayDay},
		birthdayYear:${birthdayYear},
		jobTitle:${jobTitle},
		updateUserInformation:${updateUserInformation},
		sendEmail:${sendEmail},
		serviceContext:${serviceContext}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-User-update-lockout-by-id" description="jsonws-User-update-lockout-by-id" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.User.update-lockout-by-id2">Liferay.Service(
	'/user/update-lockout-by-id',
	{
		userId:${userId},
		lockout:${lockout}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-User-update-open-id" description="jsonws-User-update-open-id" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.User.update-open-id2">Liferay.Service(
	'/user/update-open-id',
	{
		userId:${userId},
		openId:${openId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-User-update-organizations" description="jsonws-User-update-organizations" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.User.update-organizations3">Liferay.Service(
	'/user/update-organizations',
	{
		userId:${userId},
		organizationIds:${organizationIds},
		serviceContext:${serviceContext}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-User-update-password" description="jsonws-User-update-password" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.User.update-password4">Liferay.Service(
	'/user/update-password',
	{
		userId:${userId},
		password1:${password1},
		password2:${password2},
		passwordReset:${passwordReset}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-User-update-portrait" description="jsonws-User-update-portrait" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.User.update-portrait2">Liferay.Service(
	'/user/update-portrait',
	{
		userId:${userId},
		bytes:${bytes}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-User-update-reminder-query" description="jsonws-User-update-reminder-query" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.User.update-reminder-query3">Liferay.Service(
	'/user/update-reminder-query',
	{
		userId:${userId},
		question:${question},
		answer:${answer}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-User-update-screen-name" description="jsonws-User-update-screen-name" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.User.update-screen-name2">Liferay.Service(
	'/user/update-screen-name',
	{
		userId:${userId},
		screenName:${screenName}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-User-update-status" description="jsonws-User-update-status" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.User.update-status2">Liferay.Service(
	'/user/update-status',
	{
		userId:${userId},
		status:${status}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-User-update-user" description="jsonws-User-update-user" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.User.update-user41">Liferay.Service(
	'/user/update-user',
	{
		userId:${userId},
		oldPassword:${oldPassword},
		newPassword1:${newPassword1},
		newPassword2:${newPassword2},
		passwordReset:${passwordReset},
		reminderQueryQuestion:${reminderQueryQuestion},
		reminderQueryAnswer:${reminderQueryAnswer},
		screenName:${screenName},
		emailAddress:${emailAddress},
		facebookId:${facebookId},
		openId:${openId},
		languageId:${languageId},
		timeZoneId:${timeZoneId},
		greeting:${greeting},
		comments:${comments},
		firstName:${firstName},
		middleName:${middleName},
		lastName:${lastName},
		prefixId:${prefixId},
		suffixId:${suffixId},
		male:${male},
		birthdayMonth:${birthdayMonth},
		birthdayDay:${birthdayDay},
		birthdayYear:${birthdayYear},
		smsSn:${smsSn},
		aimSn:${aimSn},
		facebookSn:${facebookSn},
		icqSn:${icqSn},
		jabberSn:${jabberSn},
		msnSn:${msnSn},
		mySpaceSn:${mySpaceSn},
		skypeSn:${skypeSn},
		twitterSn:${twitterSn},
		ymSn:${ymSn},
		jobTitle:${jobTitle},
		groupIds:${groupIds},
		organizationIds:${organizationIds},
		roleIds:${roleIds},
		userGroupRoles:${userGroupRoles},
		userGroupIds:${userGroupIds},
		serviceContext:${serviceContext}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-User-update-user" description="jsonws-User-update-user" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.User.update-user46">Liferay.Service(
	'/user/update-user',
	{
		userId:${userId},
		oldPassword:${oldPassword},
		newPassword1:${newPassword1},
		newPassword2:${newPassword2},
		passwordReset:${passwordReset},
		reminderQueryQuestion:${reminderQueryQuestion},
		reminderQueryAnswer:${reminderQueryAnswer},
		screenName:${screenName},
		emailAddress:${emailAddress},
		facebookId:${facebookId},
		openId:${openId},
		languageId:${languageId},
		timeZoneId:${timeZoneId},
		greeting:${greeting},
		comments:${comments},
		firstName:${firstName},
		middleName:${middleName},
		lastName:${lastName},
		prefixId:${prefixId},
		suffixId:${suffixId},
		male:${male},
		birthdayMonth:${birthdayMonth},
		birthdayDay:${birthdayDay},
		birthdayYear:${birthdayYear},
		smsSn:${smsSn},
		aimSn:${aimSn},
		facebookSn:${facebookSn},
		icqSn:${icqSn},
		jabberSn:${jabberSn},
		msnSn:${msnSn},
		mySpaceSn:${mySpaceSn},
		skypeSn:${skypeSn},
		twitterSn:${twitterSn},
		ymSn:${ymSn},
		jobTitle:${jobTitle},
		groupIds:${groupIds},
		organizationIds:${organizationIds},
		roleIds:${roleIds},
		userGroupRoles:${userGroupRoles},
		userGroupIds:${userGroupIds},
		addresses:${addresses},
		emailAddresses:${emailAddresses},
		phones:${phones},
		websites:${websites},
		announcementsDelivers:${announcementsDelivers},
		serviceContext:${serviceContext}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-UserGroup-add-group-user-groups" description="jsonws-UserGroup-add-group-user-groups" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.UserGroup.add-group-user-groups2">Liferay.Service(
	'/usergroup/add-group-user-groups',
	{
		groupId:${groupId},
		userGroupIds:${userGroupIds}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-UserGroup-add-team-user-groups" description="jsonws-UserGroup-add-team-user-groups" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.UserGroup.add-team-user-groups2">Liferay.Service(
	'/usergroup/add-team-user-groups',
	{
		teamId:${teamId},
		userGroupIds:${userGroupIds}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-UserGroup-add-user-group" description="jsonws-UserGroup-add-user-group" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.UserGroup.add-user-group2">Liferay.Service(
	'/usergroup/add-user-group',
	{
		name:${name},
		description:${description}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-UserGroup-add-user-group" description="jsonws-UserGroup-add-user-group" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.UserGroup.add-user-group3">Liferay.Service(
	'/usergroup/add-user-group',
	{
		name:${name},
		description:${description},
		serviceContext:${serviceContext}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-UserGroup-delete-user-group" description="jsonws-UserGroup-delete-user-group" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.UserGroup.delete-user-group1">Liferay.Service(
	'/usergroup/delete-user-group',
	{
		userGroupId:${userGroupId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-UserGroup-get-user-group" description="jsonws-UserGroup-get-user-group" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.UserGroup.get-user-group1">Liferay.Service(
	'/usergroup/get-user-group',
	{
		name:${name}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-UserGroup-get-user-group" description="jsonws-UserGroup-get-user-group" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.UserGroup.get-user-group1">Liferay.Service(
	'/usergroup/get-user-group',
	{
		userGroupId:${userGroupId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-UserGroup-get-user-user-groups" description="jsonws-UserGroup-get-user-user-groups" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.UserGroup.get-user-user-groups1">Liferay.Service(
	'/usergroup/get-user-user-groups',
	{
		userId:${userId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-UserGroup-unset-group-user-groups" description="jsonws-UserGroup-unset-group-user-groups" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.UserGroup.unset-group-user-groups2">Liferay.Service(
	'/usergroup/unset-group-user-groups',
	{
		groupId:${groupId},
		userGroupIds:${userGroupIds}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-UserGroup-unset-team-user-groups" description="jsonws-UserGroup-unset-team-user-groups" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.UserGroup.unset-team-user-groups2">Liferay.Service(
	'/usergroup/unset-team-user-groups',
	{
		teamId:${teamId},
		userGroupIds:${userGroupIds}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-UserGroup-update-user-group" description="jsonws-UserGroup-update-user-group" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.UserGroup.update-user-group3">Liferay.Service(
	'/usergroup/update-user-group',
	{
		userGroupId:${userGroupId},
		name:${name},
		description:${description}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-UserGroup-update-user-group" description="jsonws-UserGroup-update-user-group" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.UserGroup.update-user-group4">Liferay.Service(
	'/usergroup/update-user-group',
	{
		userGroupId:${userGroupId},
		name:${name},
		description:${description},
		serviceContext:${serviceContext}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-UserGroupGroupRole-add-user-group-group-roles" description="jsonws-UserGroupGroupRole-add-user-group-group-roles" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.UserGroupGroupRole.add-user-group-group-roles3">Liferay.Service(
	'/usergroupgrouprole/add-user-group-group-roles',
	{
		userGroupId:${userGroupId},
		groupId:${groupId},
		roleIds:${roleIds}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-UserGroupGroupRole-add-user-group-group-roles" description="jsonws-UserGroupGroupRole-add-user-group-group-roles" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.UserGroupGroupRole.add-user-group-group-roles3">Liferay.Service(
	'/usergroupgrouprole/add-user-group-group-roles',
	{
		userGroupIds:${userGroupIds},
		groupId:${groupId},
		roleId:${roleId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-UserGroupGroupRole-delete-user-group-group-roles" description="jsonws-UserGroupGroupRole-delete-user-group-group-roles" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.UserGroupGroupRole.delete-user-group-group-roles3">Liferay.Service(
	'/usergroupgrouprole/delete-user-group-group-roles',
	{
		userGroupId:${userGroupId},
		groupId:${groupId},
		roleIds:${roleIds}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-UserGroupGroupRole-delete-user-group-group-roles" description="jsonws-UserGroupGroupRole-delete-user-group-group-roles" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.UserGroupGroupRole.delete-user-group-group-roles3">Liferay.Service(
	'/usergroupgrouprole/delete-user-group-group-roles',
	{
		userGroupIds:${userGroupIds},
		groupId:${groupId},
		roleId:${roleId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-UserGroupRole-add-user-group-roles" description="jsonws-UserGroupRole-add-user-group-roles" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.UserGroupRole.add-user-group-roles3">Liferay.Service(
	'/usergrouprole/add-user-group-roles',
	{
		userId:${userId},
		groupId:${groupId},
		roleIds:${roleIds}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-UserGroupRole-add-user-group-roles" description="jsonws-UserGroupRole-add-user-group-roles" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.UserGroupRole.add-user-group-roles3">Liferay.Service(
	'/usergrouprole/add-user-group-roles',
	{
		userIds:${userIds},
		groupId:${groupId},
		roleId:${roleId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-UserGroupRole-delete-user-group-roles" description="jsonws-UserGroupRole-delete-user-group-roles" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.UserGroupRole.delete-user-group-roles3">Liferay.Service(
	'/usergrouprole/delete-user-group-roles',
	{
		userId:${userId},
		groupId:${groupId},
		roleIds:${roleIds}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-UserGroupRole-delete-user-group-roles" description="jsonws-UserGroupRole-delete-user-group-roles" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.UserGroupRole.delete-user-group-roles3">Liferay.Service(
	'/usergrouprole/delete-user-group-roles',
	{
		userIds:${userIds},
		groupId:${groupId},
		roleId:${roleId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-Website-add-website" description="jsonws-Website-add-website" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.Website.add-website5">Liferay.Service(
	'/website/add-website',
	{
		className:${className},
		classPK:${classPK},
		url:${url},
		typeId:${typeId},
		primary:${primary}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-Website-add-website" description="jsonws-Website-add-website" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.Website.add-website6">Liferay.Service(
	'/website/add-website',
	{
		className:${className},
		classPK:${classPK},
		url:${url},
		typeId:${typeId},
		primary:${primary},
		serviceContext:${serviceContext}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-Website-delete-website" description="jsonws-Website-delete-website" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.Website.delete-website1">Liferay.Service(
	'/website/delete-website',
	{
		websiteId:${websiteId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-Website-get-website" description="jsonws-Website-get-website" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.Website.get-website1">Liferay.Service(
	'/website/get-website',
	{
		websiteId:${websiteId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-Website-get-websites" description="jsonws-Website-get-websites" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.Website.get-websites2">Liferay.Service(
	'/website/get-websites',
	{
		className:${className},
		classPK:${classPK}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-Website-update-website" description="jsonws-Website-update-website" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.Website.update-website4">Liferay.Service(
	'/website/update-website',
	{
		websiteId:${websiteId},
		url:${url},
		typeId:${typeId},
		primary:${primary}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-WikiNode-add-node" description="jsonws-WikiNode-add-node" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.WikiNode.add-node3">Liferay.Service(
	'/wikinode/add-node',
	{
		name:${name},
		description:${description},
		serviceContext:${serviceContext}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-WikiNode-delete-node" description="jsonws-WikiNode-delete-node" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.WikiNode.delete-node1">Liferay.Service(
	'/wikinode/delete-node',
	{
		nodeId:${nodeId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-WikiNode-get-node" description="jsonws-WikiNode-get-node" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.WikiNode.get-node1">Liferay.Service(
	'/wikinode/get-node',
	{
		nodeId:${nodeId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-WikiNode-get-node" description="jsonws-WikiNode-get-node" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.WikiNode.get-node2">Liferay.Service(
	'/wikinode/get-node',
	{
		groupId:${groupId},
		name:${name}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-WikiNode-get-nodes" description="jsonws-WikiNode-get-nodes" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.WikiNode.get-nodes1">Liferay.Service(
	'/wikinode/get-nodes',
	{
		groupId:${groupId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-WikiNode-get-nodes" description="jsonws-WikiNode-get-nodes" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.WikiNode.get-nodes2">Liferay.Service(
	'/wikinode/get-nodes',
	{
		groupId:${groupId},
		status:${status}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-WikiNode-get-nodes" description="jsonws-WikiNode-get-nodes" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.WikiNode.get-nodes3">Liferay.Service(
	'/wikinode/get-nodes',
	{
		groupId:${groupId},
		start:${start},
		end:${end}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-WikiNode-get-nodes" description="jsonws-WikiNode-get-nodes" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.WikiNode.get-nodes4">Liferay.Service(
	'/wikinode/get-nodes',
	{
		groupId:${groupId},
		status:${status},
		start:${start},
		end:${end}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-WikiNode-get-nodes-count" description="jsonws-WikiNode-get-nodes-count" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.WikiNode.get-nodes-count1">Liferay.Service(
	'/wikinode/get-nodes-count',
	{
		groupId:${groupId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-WikiNode-get-nodes-count" description="jsonws-WikiNode-get-nodes-count" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.WikiNode.get-nodes-count2">Liferay.Service(
	'/wikinode/get-nodes-count',
	{
		groupId:${groupId},
		status:${status}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-WikiNode-move-node-to-trash" description="jsonws-WikiNode-move-node-to-trash" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.WikiNode.move-node-to-trash1">Liferay.Service(
	'/wikinode/move-node-to-trash',
	{
		nodeId:${nodeId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-WikiNode-restore-node-from-trash" description="jsonws-WikiNode-restore-node-from-trash" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.WikiNode.restore-node-from-trash1">Liferay.Service(
	'/wikinode/restore-node-from-trash',
	{
		nodeId:${nodeId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-WikiNode-subscribe-node" description="jsonws-WikiNode-subscribe-node" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.WikiNode.subscribe-node1">Liferay.Service(
	'/wikinode/subscribe-node',
	{
		nodeId:${nodeId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-WikiNode-unsubscribe-node" description="jsonws-WikiNode-unsubscribe-node" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.WikiNode.unsubscribe-node1">Liferay.Service(
	'/wikinode/unsubscribe-node',
	{
		nodeId:${nodeId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-WikiNode-update-node" description="jsonws-WikiNode-update-node" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.WikiNode.update-node4">Liferay.Service(
	'/wikinode/update-node',
	{
		nodeId:${nodeId},
		name:${name},
		description:${description},
		serviceContext:${serviceContext}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-WikiPage-add-page" description="jsonws-WikiPage-add-page" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.WikiPage.add-page6">Liferay.Service(
	'/wikipage/add-page',
	{
		nodeId:${nodeId},
		title:${title},
		content:${content},
		summary:${summary},
		minorEdit:${minorEdit},
		serviceContext:${serviceContext}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-WikiPage-add-page" description="jsonws-WikiPage-add-page" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.WikiPage.add-page9">Liferay.Service(
	'/wikipage/add-page',
	{
		nodeId:${nodeId},
		title:${title},
		content:${content},
		summary:${summary},
		minorEdit:${minorEdit},
		format:${format},
		parentTitle:${parentTitle},
		redirectTitle:${redirectTitle},
		serviceContext:${serviceContext}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-WikiPage-add-page-attachment" description="jsonws-WikiPage-add-page-attachment" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.WikiPage.add-page-attachment5">Liferay.Service(
	'/wikipage/add-page-attachment',
	{
		nodeId:${nodeId},
		title:${title},
		fileName:${fileName},
		file:${file},
		mimeType:${mimeType}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-WikiPage-add-page-attachments" description="jsonws-WikiPage-add-page-attachments" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.WikiPage.add-page-attachments3">Liferay.Service(
	'/wikipage/add-page-attachments',
	{
		nodeId:${nodeId},
		title:${title},
		inputStreamOVPs:${inputStreamOVPs}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-WikiPage-change-parent" description="jsonws-WikiPage-change-parent" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.WikiPage.change-parent4">Liferay.Service(
	'/wikipage/change-parent',
	{
		nodeId:${nodeId},
		title:${title},
		newParentTitle:${newParentTitle},
		serviceContext:${serviceContext}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-WikiPage-copy-page-attachments" description="jsonws-WikiPage-copy-page-attachments" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.WikiPage.copy-page-attachments4">Liferay.Service(
	'/wikipage/copy-page-attachments',
	{
		templateNodeId:${templateNodeId},
		templateTitle:${templateTitle},
		nodeId:${nodeId},
		title:${title}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-WikiPage-delete-page" description="jsonws-WikiPage-delete-page" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.WikiPage.delete-page2">Liferay.Service(
	'/wikipage/delete-page',
	{
		nodeId:${nodeId},
		title:${title}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-WikiPage-delete-page" description="jsonws-WikiPage-delete-page" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.WikiPage.delete-page3">Liferay.Service(
	'/wikipage/delete-page',
	{
		nodeId:${nodeId},
		title:${title},
		version:${version}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-WikiPage-delete-page-attachment" description="jsonws-WikiPage-delete-page-attachment" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.WikiPage.delete-page-attachment3">Liferay.Service(
	'/wikipage/delete-page-attachment',
	{
		nodeId:${nodeId},
		title:${title},
		fileName:${fileName}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-WikiPage-delete-page-attachments" description="jsonws-WikiPage-delete-page-attachments" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.WikiPage.delete-page-attachments2">Liferay.Service(
	'/wikipage/delete-page-attachments',
	{
		nodeId:${nodeId},
		title:${title}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-WikiPage-delete-temp-page-attachment" description="jsonws-WikiPage-delete-temp-page-attachment" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.WikiPage.delete-temp-page-attachment3">Liferay.Service(
	'/wikipage/delete-temp-page-attachment',
	{
		nodeId:${nodeId},
		fileName:${fileName},
		tempFolderName:${tempFolderName}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-WikiPage-delete-trash-page-attachments" description="jsonws-WikiPage-delete-trash-page-attachments" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.WikiPage.delete-trash-page-attachments2">Liferay.Service(
	'/wikipage/delete-trash-page-attachments',
	{
		nodeId:${nodeId},
		title:${title}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-WikiPage-discard-draft" description="jsonws-WikiPage-discard-draft" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.WikiPage.discard-draft3">Liferay.Service(
	'/wikipage/discard-draft',
	{
		nodeId:${nodeId},
		title:${title},
		version:${version}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-WikiPage-get-children" description="jsonws-WikiPage-get-children" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.WikiPage.get-children4">Liferay.Service(
	'/wikipage/get-children',
	{
		groupId:${groupId},
		nodeId:${nodeId},
		head:${head},
		parentTitle:${parentTitle}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-WikiPage-get-draft-page" description="jsonws-WikiPage-get-draft-page" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.WikiPage.get-draft-page2">Liferay.Service(
	'/wikipage/get-draft-page',
	{
		nodeId:${nodeId},
		title:${title}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-WikiPage-get-node-pages" description="jsonws-WikiPage-get-node-pages" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.WikiPage.get-node-pages2">Liferay.Service(
	'/wikipage/get-node-pages',
	{
		nodeId:${nodeId},
		max:${max}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-WikiPage-get-node-pages-rss" description="jsonws-WikiPage-get-node-pages-rss" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.WikiPage.get-node-pages-rss7">Liferay.Service(
	'/wikipage/get-node-pages-rss',
	{
		nodeId:${nodeId},
		max:${max},
		type:${type},
		version:${version},
		displayStyle:${displayStyle},
		feedURL:${feedURL},
		entryURL:${entryURL}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-WikiPage-get-node-pages-rss" description="jsonws-WikiPage-get-node-pages-rss" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.WikiPage.get-node-pages-rss8">Liferay.Service(
	'/wikipage/get-node-pages-rss',
	{
		nodeId:${nodeId},
		max:${max},
		type:${type},
		version:${version},
		displayStyle:${displayStyle},
		feedURL:${feedURL},
		entryURL:${entryURL},
		attachmentURLPrefix:${attachmentURLPrefix}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-WikiPage-get-orphans" description="jsonws-WikiPage-get-orphans" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.WikiPage.get-orphans2">Liferay.Service(
	'/wikipage/get-orphans',
	{
		groupId:${groupId},
		nodeId:${nodeId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-WikiPage-get-page" description="jsonws-WikiPage-get-page" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.WikiPage.get-page2">Liferay.Service(
	'/wikipage/get-page',
	{
		nodeId:${nodeId},
		title:${title}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-WikiPage-get-page" description="jsonws-WikiPage-get-page" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.WikiPage.get-page3">Liferay.Service(
	'/wikipage/get-page',
	{
		groupId:${groupId},
		nodeId:${nodeId},
		title:${title}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-WikiPage-get-page" description="jsonws-WikiPage-get-page" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.WikiPage.get-page3">Liferay.Service(
	'/wikipage/get-page',
	{
		nodeId:${nodeId},
		title:${title},
		head:${head}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-WikiPage-get-page" description="jsonws-WikiPage-get-page" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.WikiPage.get-page3">Liferay.Service(
	'/wikipage/get-page',
	{
		nodeId:${nodeId},
		title:${title},
		version:${version}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-WikiPage-get-pages" description="jsonws-WikiPage-get-pages" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.WikiPage.get-pages6">Liferay.Service(
	'/wikipage/get-pages',
	{
		groupId:${groupId},
		userId:${userId},
		nodeId:${nodeId},
		status:${status},
		start:${start},
		end:${end}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-WikiPage-get-pages" description="jsonws-WikiPage-get-pages" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.WikiPage.get-pages7">Liferay.Service(
	'/wikipage/get-pages',
	{
		groupId:${groupId},
		nodeId:${nodeId},
		head:${head},
		status:${status},
		start:${start},
		end:${end},
		obc:${obc}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-WikiPage-get-pages-count" description="jsonws-WikiPage-get-pages-count" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.WikiPage.get-pages-count3">Liferay.Service(
	'/wikipage/get-pages-count',
	{
		groupId:${groupId},
		nodeId:${nodeId},
		head:${head}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-WikiPage-get-pages-count" description="jsonws-WikiPage-get-pages-count" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.WikiPage.get-pages-count4">Liferay.Service(
	'/wikipage/get-pages-count',
	{
		groupId:${groupId},
		userId:${userId},
		nodeId:${nodeId},
		status:${status}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-WikiPage-get-pages-rss" description="jsonws-WikiPage-get-pages-rss" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.WikiPage.get-pages-rss10">Liferay.Service(
	'/wikipage/get-pages-rss',
	{
		companyId:${companyId},
		nodeId:${nodeId},
		title:${title},
		max:${max},
		type:${type},
		version:${version},
		displayStyle:${displayStyle},
		feedURL:${feedURL},
		entryURL:${entryURL},
		locale:${locale}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-WikiPage-get-pages-rss" description="jsonws-WikiPage-get-pages-rss" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.WikiPage.get-pages-rss11">Liferay.Service(
	'/wikipage/get-pages-rss',
	{
		companyId:${companyId},
		nodeId:${nodeId},
		title:${title},
		max:${max},
		type:${type},
		version:${version},
		displayStyle:${displayStyle},
		feedURL:${feedURL},
		entryURL:${entryURL},
		attachmentURLPrefix:${attachmentURLPrefix},
		locale:${locale}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-WikiPage-get-recent-changes" description="jsonws-WikiPage-get-recent-changes" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.WikiPage.get-recent-changes4">Liferay.Service(
	'/wikipage/get-recent-changes',
	{
		groupId:${groupId},
		nodeId:${nodeId},
		start:${start},
		end:${end}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-WikiPage-get-recent-changes-count" description="jsonws-WikiPage-get-recent-changes-count" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.WikiPage.get-recent-changes-count2">Liferay.Service(
	'/wikipage/get-recent-changes-count',
	{
		groupId:${groupId},
		nodeId:${nodeId}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-WikiPage-get-temp-page-attachment-names" description="jsonws-WikiPage-get-temp-page-attachment-names" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.WikiPage.get-temp-page-attachment-names2">Liferay.Service(
	'/wikipage/get-temp-page-attachment-names',
	{
		nodeId:${nodeId},
		tempFolderName:${tempFolderName}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-WikiPage-move-page" description="jsonws-WikiPage-move-page" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.WikiPage.move-page4">Liferay.Service(
	'/wikipage/move-page',
	{
		nodeId:${nodeId},
		title:${title},
		newTitle:${newTitle},
		serviceContext:${serviceContext}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-WikiPage-move-page-attachment-to-trash" description="jsonws-WikiPage-move-page-attachment-to-trash" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.WikiPage.move-page-attachment-to-trash3">Liferay.Service(
	'/wikipage/move-page-attachment-to-trash',
	{
		nodeId:${nodeId},
		title:${title},
		fileName:${fileName}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-WikiPage-move-page-to-trash" description="jsonws-WikiPage-move-page-to-trash" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.WikiPage.move-page-to-trash2">Liferay.Service(
	'/wikipage/move-page-to-trash',
	{
		nodeId:${nodeId},
		title:${title}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-WikiPage-move-page-to-trash" description="jsonws-WikiPage-move-page-to-trash" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.WikiPage.move-page-to-trash3">Liferay.Service(
	'/wikipage/move-page-to-trash',
	{
		nodeId:${nodeId},
		title:${title},
		version:${version}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-WikiPage-restore-page-attachment-from-trash" description="jsonws-WikiPage-restore-page-attachment-from-trash" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.WikiPage.restore-page-attachment-from-trash3">Liferay.Service(
	'/wikipage/restore-page-attachment-from-trash',
	{
		nodeId:${nodeId},
		title:${title},
		fileName:${fileName}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-WikiPage-restore-page-from-trash" description="jsonws-WikiPage-restore-page-from-trash" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.WikiPage.restore-page-from-trash1">Liferay.Service(
	'/wikipage/restore-page-from-trash',
	{
		resourcePrimKey:${resourcePrimKey}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-WikiPage-revert-page" description="jsonws-WikiPage-revert-page" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.WikiPage.revert-page4">Liferay.Service(
	'/wikipage/revert-page',
	{
		nodeId:${nodeId},
		title:${title},
		version:${version},
		serviceContext:${serviceContext}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-WikiPage-subscribe-page" description="jsonws-WikiPage-subscribe-page" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.WikiPage.subscribe-page2">Liferay.Service(
	'/wikipage/subscribe-page',
	{
		nodeId:${nodeId},
		title:${title}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-WikiPage-unsubscribe-page" description="jsonws-WikiPage-unsubscribe-page" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.WikiPage.unsubscribe-page2">Liferay.Service(
	'/wikipage/unsubscribe-page',
	{
		nodeId:${nodeId},
		title:${title}
	},
	function(obj) {
		console.log(obj);
	}
);</template><template name="jsonws-WikiPage-update-page" description="jsonws-WikiPage-update-page" context="javaScript" enabled="true" autoinsert="true" id="com.liferay.ide.ui.templates.WikiPage.update-page10">Liferay.Service(
	'/wikipage/update-page',
	{
		nodeId:${nodeId},
		title:${title},
		version:${version},
		content:${content},
		summary:${summary},
		minorEdit:${minorEdit},
		format:${format},
		parentTitle:${parentTitle},
		redirectTitle:${redirectTitle},
		serviceContext:${serviceContext}
	},
	function(obj) {
		console.log(obj);
	}
);</template></templates>